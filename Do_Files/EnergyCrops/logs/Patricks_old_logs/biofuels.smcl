{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 2 May 2012, 22:43:18
{txt}
{com}. cmdlog using logs/biofuels, replace
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(107021 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. 
. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(18118 real changes made)

{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(186422 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(20709 real changes made)

{com}. replace trend=2 if year==2001
{txt}(20808 real changes made)

{com}. replace trend=3 if year==2002
{txt}(19566 real changes made)

{com}. replace trend=4 if year==2003
{txt}(18318 real changes made)

{com}. replace trend=5 if year==2004
{txt}(26601 real changes made)

{com}. replace trend=6 if year==2005
{txt}(26666 real changes made)

{com}. replace trend=7 if year==2006
{txt}(26190 real changes made)

{com}. replace trend=8 if year==2007
{txt}(27564 real changes made)

{com}. 
. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(18 missing values generated)

{com}. *Correct for negative and 0 FFI in order to take log
. gen ffi_tmp = familyfarmincome
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<=0 
{txt}(24638 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(207193 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}(1 missing value generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(24 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. 
. xtreg osrape_prop energycropsuaa farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise trend trXmsc i.adopter, fe
{txt}note: 1.adopter omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}   109732
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    44580

{txt}R-sq:  within  = {res}0.0080                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0144                                        {txt}avg = {res}      2.5
{txt}       overall = {res}0.0092                                        {txt}max = {res}        9

                                                {txt}F({res}10{txt},{res}65142{txt})        = {res}    52.29
{txt}corr(u_i, Xb)  = {res}0.0390                         {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
energycrop~a {c |}{col 14}{res}{space 2}-3.56e-07{col 26}{space 2} 5.80e-07{col 37}{space 1}   -0.61{col 46}{space 3}0.539{col 54}{space 4}-1.49e-06{col 67}{space 3} 7.80e-07
{txt}farmsrepre~d {c |}{col 14}{res}{space 2}-.0000122{col 26}{space 2} 6.44e-06{col 37}{space 1}   -1.90{col 46}{space 3}0.057{col 54}{space 4}-.0000249{col 67}{space 3} 3.81e-07
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .0012144{col 26}{space 2} .0006221{col 37}{space 1}    1.95{col 46}{space 3}0.051{col 54}{space 4}-4.94e-06{col 67}{space 3} .0024337
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0001841{col 26}{space 2} .0000304{col 37}{space 1}   -6.05{col 46}{space 3}0.000{col 54}{space 4}-.0002437{col 67}{space 3}-.0001245
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0001837{col 26}{space 2}  .001245{col 37}{space 1}   -0.15{col 46}{space 3}0.883{col 54}{space 4}-.0026238{col 67}{space 3} .0022565
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0000894{col 26}{space 2} .0001067{col 37}{space 1}   -0.84{col 46}{space 3}0.402{col 54}{space 4}-.0002984{col 67}{space 3} .0001197
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} .0014969{col 26}{space 2} .0020707{col 37}{space 1}    0.72{col 46}{space 3}0.470{col 54}{space 4}-.0025617{col 67}{space 3} .0055555
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0014145{col 26}{space 2} .0010306{col 37}{space 1}    1.37{col 46}{space 3}0.170{col 54}{space 4}-.0006055{col 67}{space 3} .0034345
{txt}{space 7}trend {c |}{col 14}{res}{space 2} .0036717{col 26}{space 2} .0004999{col 37}{space 1}    7.34{col 46}{space 3}0.000{col 54}{space 4} .0026918{col 67}{space 3} .0046516
{txt}{space 6}trXmsc {c |}{col 14}{res}{space 2} .0000498{col 26}{space 2} .0000328{col 37}{space 1}    1.52{col 46}{space 3}0.130{col 54}{space 4}-.0000146{col 67}{space 3} .0001141
{txt}{space 3}1.adopter {c |}{col 14}{res}  (omitted)
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0430439{col 26}{space 2} .0105731{col 37}{space 1}    4.07{col 46}{space 3}0.000{col 54}{space 4} .0223206{col 67}{space 3} .0637672
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .11302534
{txt}     sigma_e {c |} {res} .06772936
{txt}         rho {c |} {res} .73578687{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}44579{txt}, {res}65142{txt}) = {res}    5.91        {txt}Prob > F = {res}0.0000
{txt}
{com}. 
. *xtreg osrape_prop energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise trend trXmsc if adopter==0, fe
. 
. *xtreg osrape_prop energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise trend trXmsc if adopter==1, fe
. 
. * 17:25 xtreg osrape_prop energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise trend trXmsc, fe
. 
. *xtreg oilseedrapeuaa energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise trend trend#mscode ,fe
. 
. *xi: xtreg oilseedrapeuaa energydum farmsrepresented sizeclass setasideuaa ln_labour ln_ffi solvency specialise i.year*mscode,fe
. 
. *************************************************************
. *** POST-ESTIMATION TESTS *
. ***************************
. 
. *************************************************************
. *** CLEAN UP              *
. ***************************
. *tsset, clear
. *clear
. *clear matrix
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 2 May 2012, 22:44:48
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 3 May 2012, 08:16:43
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(107021 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. 
. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(18118 real changes made)

{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(186422 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(20709 real changes made)

{com}. replace trend=2 if year==2001
{txt}(20808 real changes made)

{com}. replace trend=3 if year==2002
{txt}(19566 real changes made)

{com}. replace trend=4 if year==2003
{txt}(18318 real changes made)

{com}. replace trend=5 if year==2004
{txt}(26601 real changes made)

{com}. replace trend=6 if year==2005
{txt}(26666 real changes made)

{com}. replace trend=7 if year==2006
{txt}(26190 real changes made)

{com}. replace trend=8 if year==2007
{txt}(27564 real changes made)

{com}. 
. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(18 missing values generated)

{com}. *Correct for negative and 0 FFI in order to take log
. gen ffi_tmp = familyfarmincome
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<=0 
{txt}(24638 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(207193 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}(1 missing value generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(24 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. asfjkal;
{err}unrecognized command:  asfjkal
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. xi: xtreg osrape_prop energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise i.year*mscode, fe
{txt}i.year{col 19}_Iyear_1999-2007{col 39}(naturally coded; _Iyear_1999 omitted)
i.year*mscode{col 19}_IyeaXmsc_#{col 39}(coded as above)
note: _Iyear_2007 omitted because of collinearity
note: mscode omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}   207150
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    66483

{txt}R-sq:  within  = {res}0.0132                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0080                                        {txt}avg = {res}      3.1
{txt}       overall = {res}0.0056                                        {txt}max = {res}        9

                                                {txt}F({res}23{txt},{res}140644{txt})       = {res}    81.51
{txt}corr(u_i, Xb)  = {res}-0.1938                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}-.0143301{col 26}{space 2} .0018271{col 37}{space 1}   -7.84{col 46}{space 3}0.000{col 54}{space 4}-.0179112{col 67}{space 3}-.0107491
{txt}farmsrepre~d {c |}{col 14}{res}{space 2} 1.28e-06{col 26}{space 2} 2.97e-06{col 37}{space 1}    0.43{col 46}{space 3}0.667{col 54}{space 4}-4.55e-06{col 67}{space 3} 7.10e-06
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} -.003151{col 26}{space 2}  .000398{col 37}{space 1}   -7.92{col 46}{space 3}0.000{col 54}{space 4}-.0039311{col 67}{space 3}-.0023709
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0003015{col 26}{space 2} .0000223{col 37}{space 1}  -13.49{col 46}{space 3}0.000{col 54}{space 4}-.0003452{col 67}{space 3}-.0002577
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .0013371{col 26}{space 2} .0007841{col 37}{space 1}    1.71{col 46}{space 3}0.088{col 54}{space 4}-.0001997{col 67}{space 3} .0028738
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0001959{col 26}{space 2} .0000721{col 37}{space 1}   -2.72{col 46}{space 3}0.007{col 54}{space 4}-.0003372{col 67}{space 3}-.0000546
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} 1.10e-07{col 26}{space 2} 7.85e-07{col 37}{space 1}    0.14{col 46}{space 3}0.888{col 54}{space 4}-1.43e-06{col 67}{space 3} 1.65e-06
{txt}{space 2}specialise {c |}{col 14}{res}{space 2}  .001978{col 26}{space 2}  .000876{col 37}{space 1}    2.26{col 46}{space 3}0.024{col 54}{space 4}  .000261{col 67}{space 3} .0036949
{txt}{space 1}_Iyear_2000 {c |}{col 14}{res}{space 2}-.0084584{col 26}{space 2} .0015375{col 37}{space 1}   -5.50{col 46}{space 3}0.000{col 54}{space 4}-.0114718{col 67}{space 3}-.0054449
{txt}{space 1}_Iyear_2001 {c |}{col 14}{res}{space 2}-.0121823{col 26}{space 2} .0016627{col 37}{space 1}   -7.33{col 46}{space 3}0.000{col 54}{space 4}-.0154411{col 67}{space 3}-.0089235
{txt}{space 1}_Iyear_2002 {c |}{col 14}{res}{space 2} -.016987{col 26}{space 2} .0017171{col 37}{space 1}   -9.89{col 46}{space 3}0.000{col 54}{space 4}-.0203525{col 67}{space 3}-.0136215
{txt}{space 1}_Iyear_2003 {c |}{col 14}{res}{space 2}-.0197282{col 26}{space 2} .0017334{col 37}{space 1}  -11.38{col 46}{space 3}0.000{col 54}{space 4}-.0231257{col 67}{space 3}-.0163308
{txt}{space 1}_Iyear_2004 {c |}{col 14}{res}{space 2}-.0048965{col 26}{space 2} .0014966{col 37}{space 1}   -3.27{col 46}{space 3}0.001{col 54}{space 4}-.0078298{col 67}{space 3}-.0019632
{txt}{space 1}_Iyear_2005 {c |}{col 14}{res}{space 2}-.0033519{col 26}{space 2} .0014645{col 37}{space 1}   -2.29{col 46}{space 3}0.022{col 54}{space 4}-.0062222{col 67}{space 3}-.0004816
{txt}{space 1}_Iyear_2006 {c |}{col 14}{res}{space 2} .0049852{col 26}{space 2} .0014283{col 37}{space 1}    3.49{col 46}{space 3}0.000{col 54}{space 4} .0021858{col 67}{space 3} .0077845
{txt}{space 1}_Iyear_2007 {c |}{col 14}{res}  (omitted)
{txt}{space 6}mscode {c |}{col 14}{res}  (omitted)
{txt}_IyeaXm~2000 {c |}{col 14}{res}{space 2}-.0001616{col 26}{space 2} .0001224{col 37}{space 1}   -1.32{col 46}{space 3}0.187{col 54}{space 4}-.0004015{col 67}{space 3} .0000784
{txt}_IyeaXm~2001 {c |}{col 14}{res}{space 2} .0001444{col 26}{space 2} .0001388{col 37}{space 1}    1.04{col 46}{space 3}0.298{col 54}{space 4}-.0001275{col 67}{space 3} .0004164
{txt}_IyeaXm~2002 {c |}{col 14}{res}{space 2}-.0003082{col 26}{space 2} .0001426{col 37}{space 1}   -2.16{col 46}{space 3}0.031{col 54}{space 4}-.0005877{col 67}{space 3}-.0000286
{txt}_IyeaXm~2003 {c |}{col 14}{res}{space 2} .0003171{col 26}{space 2}  .000144{col 37}{space 1}    2.20{col 46}{space 3}0.028{col 54}{space 4} .0000348{col 67}{space 3} .0005995
{txt}_IyeaXm~2004 {c |}{col 14}{res}{space 2} .0000886{col 26}{space 2} .0001401{col 37}{space 1}    0.63{col 46}{space 3}0.527{col 54}{space 4}-.0001859{col 67}{space 3} .0003631
{txt}_IyeaXm~2005 {c |}{col 14}{res}{space 2} .0002383{col 26}{space 2} .0001409{col 37}{space 1}    1.69{col 46}{space 3}0.091{col 54}{space 4} -.000038{col 67}{space 3} .0005145
{txt}_IyeaXm~2006 {c |}{col 14}{res}{space 2} .0003515{col 26}{space 2} .0001428{col 37}{space 1}    2.46{col 46}{space 3}0.014{col 54}{space 4} .0000716{col 67}{space 3} .0006314
{txt}_IyeaXm~2007 {c |}{col 14}{res}{space 2}  .000863{col 26}{space 2}  .000146{col 37}{space 1}    5.91{col 46}{space 3}0.000{col 54}{space 4} .0005768{col 67}{space 3} .0011492
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0935472{col 26}{space 2} .0066229{col 37}{space 1}   14.12{col 46}{space 3}0.000{col 54}{space 4} .0805665{col 67}{space 3} .1065279
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .11405455
{txt}     sigma_e {c |} {res} .06605874
{txt}         rho {c |} {res}   .748808{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}66482{txt}, {res}140644{txt}) = {res}    7.55       {txt}Prob > F = {res}0.0000

{com}. 
. 
. help factorvarlist

. help factor

. xtreg osrape_prop energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise i.year year#mscode, fe
{txt}note: 2007.year omitted because of collinearity
note: 1999b.year#5.mscode omitted because of collinearity
note: 1999b.year#6.mscode omitted because of collinearity
note: 2000.year#7.mscode omitted because of collinearity
note: 2000.year#18.mscode omitted because of collinearity
note: 2001.year#21.mscode omitted because of collinearity
note: 2002.year#24.mscode omitted because of collinearity
note: 2003.year#23.mscode omitted because of collinearity
note: 2004.year#3.mscode omitted because of collinearity
note: 2004.year#9.mscode omitted because of collinearity
note: 2004.year#16.mscode omitted because of collinearity
note: 2004.year#20.mscode omitted because of collinearity
note: 2004.year#25.mscode omitted because of collinearity
note: 2004.year#26.mscode omitted because of collinearity
note: 2006.year#12.mscode omitted because of collinearity
note: 2006.year#15.mscode omitted because of collinearity
note: 2006.year#17.mscode omitted because of collinearity
note: 2007.year#2.mscode omitted because of collinearity
note: 2007.year#4.mscode omitted because of collinearity
note: 2007.year#8.mscode omitted because of collinearity
note: 2007.year#10.mscode omitted because of collinearity
note: 2007.year#11.mscode omitted because of collinearity
note: 2007.year#13.mscode omitted because of collinearity
note: 2007.year#14.mscode omitted because of collinearity
note: 2007.year#19.mscode omitted because of collinearity
note: 2007.year#22.mscode omitted because of collinearity
note: 2007.year#27.mscode omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}   207150
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    66483

{txt}R-sq:  within  = {res}0.0292                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0099                                        {txt}avg = {res}      3.1
{txt}       overall = {res}0.0084                                        {txt}max = {res}        9

                                                {txt}F({res}157{txt},{res}140510{txt})      = {res}    26.93
{txt}corr(u_i, Xb)  = {res}-0.3257                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}-.0470414{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}  -3429.4{col 67}{space 3} 3429.306
{txt}farmsrepre~d {c |}{col 14}{res}{space 2} 1.23e-06{col 26}{space 2} 2.96e-06{col 37}{space 1}    0.41{col 46}{space 3}0.678{col 54}{space 4}-4.58e-06{col 67}{space 3} 7.04e-06
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0036198{col 26}{space 2} .0004009{col 37}{space 1}   -9.03{col 46}{space 3}0.000{col 54}{space 4}-.0044057{col 67}{space 3} -.002834
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0003191{col 26}{space 2} .0000224{col 37}{space 1}  -14.23{col 46}{space 3}0.000{col 54}{space 4}-.0003631{col 67}{space 3}-.0002752
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}  .000848{col 26}{space 2} .0007961{col 37}{space 1}    1.07{col 46}{space 3}0.287{col 54}{space 4}-.0007123{col 67}{space 3} .0024083
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0001714{col 26}{space 2} .0000725{col 37}{space 1}   -2.36{col 46}{space 3}0.018{col 54}{space 4}-.0003135{col 67}{space 3}-.0000293
{txt}{space 4}solvency {c |}{col 14}{res}{space 2}-3.31e-08{col 26}{space 2} 7.80e-07{col 37}{space 1}   -0.04{col 46}{space 3}0.966{col 54}{space 4}-1.56e-06{col 67}{space 3} 1.50e-06
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0013026{col 26}{space 2} .0008713{col 37}{space 1}    1.50{col 46}{space 3}0.135{col 54}{space 4}-.0004051{col 67}{space 3} .0030103
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0170483{col 26}{space 2} .0057327{col 37}{space 1}   -2.97{col 46}{space 3}0.003{col 54}{space 4}-.0282843{col 67}{space 3}-.0058124
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0193579{col 26}{space 2} .0058886{col 37}{space 1}   -3.29{col 46}{space 3}0.001{col 54}{space 4}-.0308995{col 67}{space 3}-.0078163
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0194441{col 26}{space 2} .0059507{col 37}{space 1}   -3.27{col 46}{space 3}0.001{col 54}{space 4}-.0311074{col 67}{space 3}-.0077807
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0201487{col 26}{space 2} .0059692{col 37}{space 1}   -3.38{col 46}{space 3}0.001{col 54}{space 4}-.0318483{col 67}{space 3}-.0084491
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0069357{col 26}{space 2} .0061665{col 37}{space 1}   -1.12{col 46}{space 3}0.261{col 54}{space 4}-.0190219{col 67}{space 3} .0051506
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0053122{col 26}{space 2} .0060276{col 37}{space 1}   -0.88{col 46}{space 3}0.378{col 54}{space 4}-.0171261{col 67}{space 3} .0065017
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}-.0002748{col 26}{space 2} .0058747{col 37}{space 1}   -0.05{col 46}{space 3}0.963{col 54}{space 4}-.0117892{col 67}{space 3} .0112396
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 1}year#mscode {c |}
{space 4}1999  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999  3  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999  4  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999  5  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  6  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  7  {c |}{col 14}{res}{space 2}-.0111496{col 26}{space 2}  .006075{col 37}{space 1}   -1.84{col 46}{space 3}0.066{col 54}{space 4}-.0230564{col 67}{space 3} .0007572
{txt}{space 4}1999  8  {c |}{col 14}{res}{space 2}-.0283708{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.382{col 67}{space 3} 3429.325
{txt}{space 4}1999  9  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 10  {c |}{col 14}{res}{space 2}-.0410478{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.394{col 67}{space 3} 3429.312
{txt}{space 4}1999 11  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 12  {c |}{col 14}{res}{space 2}-.0431765{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.396{col 67}{space 3}  3429.31
{txt}{space 4}1999 13  {c |}{col 14}{res}{space 2}-.0134303{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.367{col 67}{space 3}  3429.34
{txt}{space 4}1999 14  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 15  {c |}{col 14}{res}{space 2} -.051787{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.405{col 67}{space 3} 3429.301
{txt}{space 4}1999 16  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 17  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 18  {c |}{col 14}{res}{space 2}-.0170984{col 26}{space 2}  .008004{col 37}{space 1}   -2.14{col 46}{space 3}0.033{col 54}{space 4}-.0327861{col 67}{space 3}-.0014107
{txt}{space 4}1999 19  {c |}{col 14}{res}{space 2}-.0337285{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.387{col 67}{space 3} 3429.319
{txt}{space 4}1999 20  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 21  {c |}{col 14}{res}{space 2}-.0190423{col 26}{space 2} .0079732{col 37}{space 1}   -2.39{col 46}{space 3}0.017{col 54}{space 4}-.0346696{col 67}{space 3}-.0034151
{txt}{space 4}1999 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 23  {c |}{col 14}{res}{space 2}-.0231389{col 26}{space 2} .0083184{col 37}{space 1}   -2.78{col 46}{space 3}0.005{col 54}{space 4}-.0394428{col 67}{space 3} -.006835
{txt}{space 4}1999 24  {c |}{col 14}{res}{space 2}-.0149483{col 26}{space 2} .0078167{col 37}{space 1}   -1.91{col 46}{space 3}0.056{col 54}{space 4}-.0302688{col 67}{space 3} .0003722
{txt}{space 4}1999 25  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 26  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 27  {c |}{col 14}{res}{space 2} -.025556{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.379{col 67}{space 3} 3429.328
{txt}{space 4}2000  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000  3  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000  4  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000  5  {c |}{col 14}{res}{space 2}-.0101069{col 26}{space 2} .0070053{col 37}{space 1}   -1.44{col 46}{space 3}0.149{col 54}{space 4}-.0238372{col 67}{space 3} .0036233
{txt}{space 4}2000  6  {c |}{col 14}{res}{space 2} .0017201{col 26}{space 2} .0060339{col 37}{space 1}    0.29{col 46}{space 3}0.776{col 54}{space 4}-.0101062{col 67}{space 3} .0135464
{txt}{space 4}2000  7  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2000  8  {c |}{col 14}{res}{space 2}-.0238417{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.377{col 67}{space 3} 3429.329
{txt}{space 4}2000  9  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 10  {c |}{col 14}{res}{space 2}-.0381328{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.391{col 67}{space 3} 3429.315
{txt}{space 4}2000 11  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 12  {c |}{col 14}{res}{space 2}-.0304245{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.384{col 67}{space 3} 3429.323
{txt}{space 4}2000 13  {c |}{col 14}{res}{space 2}  .004375{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.349{col 67}{space 3} 3429.358
{txt}{space 4}2000 14  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 15  {c |}{col 14}{res}{space 2}-.0556906{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.409{col 67}{space 3} 3429.297
{txt}{space 4}2000 16  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 17  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 18  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2000 19  {c |}{col 14}{res}{space 2}-.0342429{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.387{col 67}{space 3} 3429.319
{txt}{space 4}2000 20  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 21  {c |}{col 14}{res}{space 2} .0030587{col 26}{space 2} .0077452{col 37}{space 1}    0.39{col 46}{space 3}0.693{col 54}{space 4}-.0121218{col 67}{space 3} .0182392
{txt}{space 4}2000 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 23  {c |}{col 14}{res}{space 2}-.0078028{col 26}{space 2} .0081706{col 37}{space 1}   -0.95{col 46}{space 3}0.340{col 54}{space 4} -.023817{col 67}{space 3} .0082114
{txt}{space 4}2000 24  {c |}{col 14}{res}{space 2}-.0146711{col 26}{space 2} .0076216{col 37}{space 1}   -1.92{col 46}{space 3}0.054{col 54}{space 4}-.0296092{col 67}{space 3}  .000267
{txt}{space 4}2000 25  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 26  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 27  {c |}{col 14}{res}{space 2}-.0449268{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.398{col 67}{space 3} 3429.308
{txt}{space 4}2001  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001  3  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001  4  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001  5  {c |}{col 14}{res}{space 2}-.0175307{col 26}{space 2} .0072068{col 37}{space 1}   -2.43{col 46}{space 3}0.015{col 54}{space 4} -.031656{col 67}{space 3}-.0034055
{txt}{space 4}2001  6  {c |}{col 14}{res}{space 2} .0035314{col 26}{space 2} .0061965{col 37}{space 1}    0.57{col 46}{space 3}0.569{col 54}{space 4}-.0086136{col 67}{space 3} .0156764
{txt}{space 4}2001  7  {c |}{col 14}{res}{space 2}-.0008201{col 26}{space 2} .0061118{col 37}{space 1}   -0.13{col 46}{space 3}0.893{col 54}{space 4}-.0127992{col 67}{space 3}  .011159
{txt}{space 4}2001  8  {c |}{col 14}{res}{space 2}-.0169764{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4} -3429.37{col 67}{space 3} 3429.336
{txt}{space 4}2001  9  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 10  {c |}{col 14}{res}{space 2}-.0424569{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.396{col 67}{space 3} 3429.311
{txt}{space 4}2001 11  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 12  {c |}{col 14}{res}{space 2}-.0381489{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.391{col 67}{space 3} 3429.315
{txt}{space 4}2001 13  {c |}{col 14}{res}{space 2} .0085286{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.345{col 67}{space 3} 3429.362
{txt}{space 4}2001 14  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 15  {c |}{col 14}{res}{space 2}-.0457649{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.399{col 67}{space 3} 3429.307
{txt}{space 4}2001 16  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 17  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 18  {c |}{col 14}{res}{space 2} .0005795{col 26}{space 2} .0087869{col 37}{space 1}    0.07{col 46}{space 3}0.947{col 54}{space 4}-.0166426{col 67}{space 3} .0178017
{txt}{space 4}2001 19  {c |}{col 14}{res}{space 2}-.0282137{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.381{col 67}{space 3} 3429.325
{txt}{space 4}2001 20  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 21  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2001 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 23  {c |}{col 14}{res}{space 2}-.0065752{col 26}{space 2} .0081741{col 37}{space 1}   -0.80{col 46}{space 3}0.421{col 54}{space 4}-.0225963{col 67}{space 3} .0094459
{txt}{space 4}2001 24  {c |}{col 14}{res}{space 2}-.0120545{col 26}{space 2} .0075558{col 37}{space 1}   -1.60{col 46}{space 3}0.111{col 54}{space 4}-.0268638{col 67}{space 3} .0027548
{txt}{space 4}2001 25  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 26  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 27  {c |}{col 14}{res}{space 2}-.0427074{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.396{col 67}{space 3}  3429.31
{txt}{space 4}2002  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002  3  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002  4  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002  5  {c |}{col 14}{res}{space 2}-.0187983{col 26}{space 2} .0073326{col 37}{space 1}   -2.56{col 46}{space 3}0.010{col 54}{space 4}  -.03317{col 67}{space 3}-.0044266
{txt}{space 4}2002  6  {c |}{col 14}{res}{space 2}   .01449{col 26}{space 2} .0062867{col 37}{space 1}    2.30{col 46}{space 3}0.021{col 54}{space 4} .0021682{col 67}{space 3} .0268118
{txt}{space 4}2002  7  {c |}{col 14}{res}{space 2}-.0004631{col 26}{space 2}  .006218{col 37}{space 1}   -0.07{col 46}{space 3}0.941{col 54}{space 4}-.0126502{col 67}{space 3}  .011724
{txt}{space 4}2002  8  {c |}{col 14}{res}{space 2} -.031439{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.385{col 67}{space 3} 3429.322
{txt}{space 4}2002  9  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 10  {c |}{col 14}{res}{space 2} -.057794{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.411{col 67}{space 3} 3429.295
{txt}{space 4}2002 11  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 12  {c |}{col 14}{res}{space 2} -.034408{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.388{col 67}{space 3} 3429.319
{txt}{space 4}2002 13  {c |}{col 14}{res}{space 2}-.0179096{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.371{col 67}{space 3} 3429.335
{txt}{space 4}2002 14  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 15  {c |}{col 14}{res}{space 2}-.0493969{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.403{col 67}{space 3} 3429.304
{txt}{space 4}2002 16  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 17  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 18  {c |}{col 14}{res}{space 2} .0002886{col 26}{space 2} .0088275{col 37}{space 1}    0.03{col 46}{space 3}0.974{col 54}{space 4}-.0170132{col 67}{space 3} .0175904
{txt}{space 4}2002 19  {c |}{col 14}{res}{space 2}-.0278845{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.381{col 67}{space 3} 3429.325
{txt}{space 4}2002 20  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 21  {c |}{col 14}{res}{space 2}-.0043129{col 26}{space 2} .0079775{col 37}{space 1}   -0.54{col 46}{space 3}0.589{col 54}{space 4}-.0199487{col 67}{space 3} .0113228
{txt}{space 4}2002 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 23  {c |}{col 14}{res}{space 2}-.0096028{col 26}{space 2} .0078539{col 37}{space 1}   -1.22{col 46}{space 3}0.221{col 54}{space 4}-.0249964{col 67}{space 3} .0057908
{txt}{space 4}2002 24  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2002 25  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 26  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 27  {c |}{col 14}{res}{space 2} -.051404{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.405{col 67}{space 3} 3429.302
{txt}{space 4}2003  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003  3  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003  4  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003  5  {c |}{col 14}{res}{space 2}-.0084014{col 26}{space 2} .0074112{col 37}{space 1}   -1.13{col 46}{space 3}0.257{col 54}{space 4}-.0229272{col 67}{space 3} .0061244
{txt}{space 4}2003  6  {c |}{col 14}{res}{space 2} .0139699{col 26}{space 2}  .006307{col 37}{space 1}    2.21{col 46}{space 3}0.027{col 54}{space 4} .0016084{col 67}{space 3} .0263314
{txt}{space 4}2003  7  {c |}{col 14}{res}{space 2}-.0049344{col 26}{space 2} .0062673{col 37}{space 1}   -0.79{col 46}{space 3}0.431{col 54}{space 4}-.0172182{col 67}{space 3} .0073494
{txt}{space 4}2003  8  {c |}{col 14}{res}{space 2}-.0332733{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.386{col 67}{space 3}  3429.32
{txt}{space 4}2003  9  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 10  {c |}{col 14}{res}{space 2}-.0484436{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.402{col 67}{space 3} 3429.305
{txt}{space 4}2003 11  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 12  {c |}{col 14}{res}{space 2}-.0322603{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.385{col 67}{space 3} 3429.321
{txt}{space 4}2003 13  {c |}{col 14}{res}{space 2}-.0221664{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.375{col 67}{space 3} 3429.331
{txt}{space 4}2003 14  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 15  {c |}{col 14}{res}{space 2} -.049338{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.402{col 67}{space 3} 3429.304
{txt}{space 4}2003 16  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 17  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 18  {c |}{col 14}{res}{space 2} .0013105{col 26}{space 2} .0088853{col 37}{space 1}    0.15{col 46}{space 3}0.883{col 54}{space 4}-.0161044{col 67}{space 3} .0187254
{txt}{space 4}2003 19  {c |}{col 14}{res}{space 2}-.0315376{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.385{col 67}{space 3} 3429.322
{txt}{space 4}2003 20  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 21  {c |}{col 14}{res}{space 2}-.0060714{col 26}{space 2} .0083888{col 37}{space 1}   -0.72{col 46}{space 3}0.469{col 54}{space 4}-.0225133{col 67}{space 3} .0103705
{txt}{space 4}2003 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 23  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2003 24  {c |}{col 14}{res}{space 2}-.0030919{col 26}{space 2} .0075225{col 37}{space 1}   -0.41{col 46}{space 3}0.681{col 54}{space 4} -.017836{col 67}{space 3} .0116521
{txt}{space 4}2003 25  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 26  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 27  {c |}{col 14}{res}{space 2}-.0295149{col 26}{space 2} 1749.687{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.383{col 67}{space 3} 3429.324
{txt}{space 4}2004  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2004  3  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004  4  {c |}{col 14}{res}{space 2}-.0163635{col 26}{space 2} .0073127{col 37}{space 1}   -2.24{col 46}{space 3}0.025{col 54}{space 4}-.0306963{col 67}{space 3}-.0020308
{txt}{space 4}2004  5  {c |}{col 14}{res}{space 2} .0372767{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.316{col 67}{space 3}  3429.39
{txt}{space 4}2004  6  {c |}{col 14}{res}{space 2} .0516336{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.302{col 67}{space 3} 3429.405
{txt}{space 4}2004  7  {c |}{col 14}{res}{space 2} .0276082{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.326{col 67}{space 3} 3429.381
{txt}{space 4}2004  8  {c |}{col 14}{res}{space 2}  .002182{col 26}{space 2} .0065304{col 37}{space 1}    0.33{col 46}{space 3}0.738{col 54}{space 4}-.0106174{col 67}{space 3} .0149814
{txt}{space 4}2004  9  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004 10  {c |}{col 14}{res}{space 2}-.0172981{col 26}{space 2} .0064666{col 37}{space 1}   -2.68{col 46}{space 3}0.007{col 54}{space 4}-.0299725{col 67}{space 3}-.0046238
{txt}{space 4}2004 11  {c |}{col 14}{res}{space 2}-.0319199{col 26}{space 2} .0068221{col 37}{space 1}   -4.68{col 46}{space 3}0.000{col 54}{space 4}-.0452911{col 67}{space 3}-.0185488
{txt}{space 4}2004 12  {c |}{col 14}{res}{space 2}-.0012936{col 26}{space 2} .0110923{col 37}{space 1}   -0.12{col 46}{space 3}0.907{col 54}{space 4}-.0230343{col 67}{space 3} .0204472
{txt}{space 4}2004 13  {c |}{col 14}{res}{space 2} .0061293{col 26}{space 2} .0064149{col 37}{space 1}    0.96{col 46}{space 3}0.339{col 54}{space 4}-.0064438{col 67}{space 3} .0187024
{txt}{space 4}2004 14  {c |}{col 14}{res}{space 2}-.0416046{col 26}{space 2} .0078219{col 37}{space 1}   -5.32{col 46}{space 3}0.000{col 54}{space 4}-.0569355{col 67}{space 3}-.0262738
{txt}{space 4}2004 15  {c |}{col 14}{res}{space 2}  .003452{col 26}{space 2} .0139158{col 37}{space 1}    0.25{col 46}{space 3}0.804{col 54}{space 4}-.0238227{col 67}{space 3} .0307266
{txt}{space 4}2004 16  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004 17  {c |}{col 14}{res}{space 2} .0085191{col 26}{space 2} .0345197{col 37}{space 1}    0.25{col 46}{space 3}0.805{col 54}{space 4}-.0591388{col 67}{space 3}  .076177
{txt}{space 4}2004 18  {c |}{col 14}{res}{space 2} .0352196{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.318{col 67}{space 3} 3429.388
{txt}{space 4}2004 19  {c |}{col 14}{res}{space 2} .0024062{col 26}{space 2} .0075337{col 37}{space 1}    0.32{col 46}{space 3}0.749{col 54}{space 4}-.0123596{col 67}{space 3}  .017172
{txt}{space 4}2004 20  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004 21  {c |}{col 14}{res}{space 2} .0251327{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.328{col 67}{space 3} 3429.378
{txt}{space 4}2004 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2004 23  {c |}{col 14}{res}{space 2} .0415081{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.312{col 67}{space 3} 3429.395
{txt}{space 4}2004 24  {c |}{col 14}{res}{space 2} .0465206{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.307{col 67}{space 3}   3429.4
{txt}{space 4}2004 25  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004 26  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004 27  {c |}{col 14}{res}{space 2} .0010655{col 26}{space 2} .0071558{col 37}{space 1}    0.15{col 46}{space 3}0.882{col 54}{space 4}-.0129596{col 67}{space 3} .0150907
{txt}{space 4}2005  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2005  3  {c |}{col 14}{res}{space 2}-.0171339{col 26}{space 2} .0147214{col 37}{space 1}   -1.16{col 46}{space 3}0.244{col 54}{space 4}-.0459876{col 67}{space 3} .0117198
{txt}{space 4}2005  4  {c |}{col 14}{res}{space 2}-.0162534{col 26}{space 2} .0070796{col 37}{space 1}   -2.30{col 46}{space 3}0.022{col 54}{space 4}-.0301294{col 67}{space 3}-.0023775
{txt}{space 4}2005  5  {c |}{col 14}{res}{space 2} .0262781{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.327{col 67}{space 3} 3429.379
{txt}{space 4}2005  6  {c |}{col 14}{res}{space 2} .0509355{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.302{col 67}{space 3} 3429.404
{txt}{space 4}2005  7  {c |}{col 14}{res}{space 2} .0260393{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.327{col 67}{space 3} 3429.379
{txt}{space 4}2005  8  {c |}{col 14}{res}{space 2} -.004048{col 26}{space 2} .0063849{col 37}{space 1}   -0.63{col 46}{space 3}0.526{col 54}{space 4}-.0165624{col 67}{space 3} .0084663
{txt}{space 4}2005  9  {c |}{col 14}{res}{space 2}-.0096759{col 26}{space 2} .0083564{col 37}{space 1}   -1.16{col 46}{space 3}0.247{col 54}{space 4}-.0260542{col 67}{space 3} .0067024
{txt}{space 4}2005 10  {c |}{col 14}{res}{space 2}-.0106247{col 26}{space 2} .0063267{col 37}{space 1}   -1.68{col 46}{space 3}0.093{col 54}{space 4}-.0230249{col 67}{space 3} .0017755
{txt}{space 4}2005 11  {c |}{col 14}{res}{space 2} -.001316{col 26}{space 2} .0066866{col 37}{space 1}   -0.20{col 46}{space 3}0.844{col 54}{space 4}-.0144216{col 67}{space 3} .0117897
{txt}{space 4}2005 12  {c |}{col 14}{res}{space 2} .0058176{col 26}{space 2} .0112118{col 37}{space 1}    0.52{col 46}{space 3}0.604{col 54}{space 4}-.0161573{col 67}{space 3} .0277924
{txt}{space 4}2005 13  {c |}{col 14}{res}{space 2} .0122394{col 26}{space 2} .0062584{col 37}{space 1}    1.96{col 46}{space 3}0.051{col 54}{space 4} -.000027{col 67}{space 3} .0245058
{txt}{space 4}2005 14  {c |}{col 14}{res}{space 2}-.0463459{col 26}{space 2} .0074046{col 37}{space 1}   -6.26{col 46}{space 3}0.000{col 54}{space 4}-.0608587{col 67}{space 3} -.031833
{txt}{space 4}2005 15  {c |}{col 14}{res}{space 2}-.0104943{col 26}{space 2} .0145723{col 37}{space 1}   -0.72{col 46}{space 3}0.471{col 54}{space 4}-.0390558{col 67}{space 3} .0180671
{txt}{space 4}2005 16  {c |}{col 14}{res}{space 2} .0126375{col 26}{space 2} .0075767{col 37}{space 1}    1.67{col 46}{space 3}0.095{col 54}{space 4}-.0022126{col 67}{space 3} .0274876
{txt}{space 4}2005 17  {c |}{col 14}{res}{space 2} .0065558{col 26}{space 2} .0353174{col 37}{space 1}    0.19{col 46}{space 3}0.853{col 54}{space 4}-.0626656{col 67}{space 3} .0757773
{txt}{space 4}2005 18  {c |}{col 14}{res}{space 2}  .034207{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.319{col 67}{space 3} 3429.387
{txt}{space 4}2005 19  {c |}{col 14}{res}{space 2}  .006029{col 26}{space 2} .0073632{col 37}{space 1}    0.82{col 46}{space 3}0.413{col 54}{space 4}-.0084028{col 67}{space 3} .0204607
{txt}{space 4}2005 20  {c |}{col 14}{res}{space 2}-.0047046{col 26}{space 2} .0060192{col 37}{space 1}   -0.78{col 46}{space 3}0.434{col 54}{space 4}-.0165022{col 67}{space 3}  .007093
{txt}{space 4}2005 21  {c |}{col 14}{res}{space 2} .0190768{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.334{col 67}{space 3} 3429.372
{txt}{space 4}2005 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2005 23  {c |}{col 14}{res}{space 2} .0410146{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.312{col 67}{space 3} 3429.394
{txt}{space 4}2005 24  {c |}{col 14}{res}{space 2} .0482422{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.305{col 67}{space 3} 3429.401
{txt}{space 4}2005 25  {c |}{col 14}{res}{space 2} .0169422{col 26}{space 2} .0075178{col 37}{space 1}    2.25{col 46}{space 3}0.024{col 54}{space 4} .0022074{col 67}{space 3}  .031677
{txt}{space 4}2005 26  {c |}{col 14}{res}{space 2}-.0046017{col 26}{space 2} .0133899{col 37}{space 1}   -0.34{col 46}{space 3}0.731{col 54}{space 4}-.0308456{col 67}{space 3} .0216422
{txt}{space 4}2005 27  {c |}{col 14}{res}{space 2} .0097107{col 26}{space 2} .0069924{col 37}{space 1}    1.39{col 46}{space 3}0.165{col 54}{space 4}-.0039943{col 67}{space 3} .0234157
{txt}{space 4}2006  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2006  3  {c |}{col 14}{res}{space 2}-.0211628{col 26}{space 2} .0150101{col 37}{space 1}   -1.41{col 46}{space 3}0.159{col 54}{space 4}-.0505823{col 67}{space 3} .0082567
{txt}{space 4}2006  4  {c |}{col 14}{res}{space 2}-.0065265{col 26}{space 2}   .00685{col 37}{space 1}   -0.95{col 46}{space 3}0.341{col 54}{space 4}-.0199523{col 67}{space 3} .0068993
{txt}{space 4}2006  5  {c |}{col 14}{res}{space 2} .0301965{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.323{col 67}{space 3} 3429.383
{txt}{space 4}2006  6  {c |}{col 14}{res}{space 2} .0637294{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.289{col 67}{space 3} 3429.417
{txt}{space 4}2006  7  {c |}{col 14}{res}{space 2} .0248404{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.328{col 67}{space 3} 3429.378
{txt}{space 4}2006  8  {c |}{col 14}{res}{space 2}-.0111922{col 26}{space 2} .0062338{col 37}{space 1}   -1.80{col 46}{space 3}0.073{col 54}{space 4}-.0234103{col 67}{space 3} .0010258
{txt}{space 4}2006  9  {c |}{col 14}{res}{space 2} .0060695{col 26}{space 2}  .008578{col 37}{space 1}    0.71{col 46}{space 3}0.479{col 54}{space 4}-.0107432{col 67}{space 3} .0228823
{txt}{space 4}2006 10  {c |}{col 14}{res}{space 2}-.0070714{col 26}{space 2} .0061731{col 37}{space 1}   -1.15{col 46}{space 3}0.252{col 54}{space 4}-.0191705{col 67}{space 3} .0050276
{txt}{space 4}2006 11  {c |}{col 14}{res}{space 2} .0080333{col 26}{space 2}  .006542{col 37}{space 1}    1.23{col 46}{space 3}0.219{col 54}{space 4}-.0047889{col 67}{space 3} .0208555
{txt}{space 4}2006 12  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2006 13  {c |}{col 14}{res}{space 2} .0109126{col 26}{space 2}  .006104{col 37}{space 1}    1.79{col 46}{space 3}0.074{col 54}{space 4}-.0010512{col 67}{space 3} .0228764
{txt}{space 4}2006 14  {c |}{col 14}{res}{space 2} -.007693{col 26}{space 2} .0071602{col 37}{space 1}   -1.07{col 46}{space 3}0.283{col 54}{space 4}-.0217269{col 67}{space 3} .0063409
{txt}{space 4}2006 15  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2006 16  {c |}{col 14}{res}{space 2}  .019766{col 26}{space 2} .0077338{col 37}{space 1}    2.56{col 46}{space 3}0.011{col 54}{space 4} .0046078{col 67}{space 3} .0349241
{txt}{space 4}2006 17  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2006 18  {c |}{col 14}{res}{space 2} .0295758{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.324{col 67}{space 3} 3429.383
{txt}{space 4}2006 19  {c |}{col 14}{res}{space 2} .0166081{col 26}{space 2} .0072043{col 37}{space 1}    2.31{col 46}{space 3}0.021{col 54}{space 4} .0024879{col 67}{space 3} .0307284
{txt}{space 4}2006 20  {c |}{col 14}{res}{space 2} .0055149{col 26}{space 2} .0061521{col 37}{space 1}    0.90{col 46}{space 3}0.370{col 54}{space 4} -.006543{col 67}{space 3} .0175729
{txt}{space 4}2006 21  {c |}{col 14}{res}{space 2} .0118377{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.341{col 67}{space 3} 3429.365
{txt}{space 4}2006 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2006 23  {c |}{col 14}{res}{space 2} .0523592{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.301{col 67}{space 3} 3429.406
{txt}{space 4}2006 24  {c |}{col 14}{res}{space 2} .0498382{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.303{col 67}{space 3} 3429.403
{txt}{space 4}2006 25  {c |}{col 14}{res}{space 2} .0489804{col 26}{space 2} .0080196{col 37}{space 1}    6.11{col 46}{space 3}0.000{col 54}{space 4} .0332623{col 67}{space 3} .0646986
{txt}{space 4}2006 26  {c |}{col 14}{res}{space 2} .0017808{col 26}{space 2} .0139821{col 37}{space 1}    0.13{col 46}{space 3}0.899{col 54}{space 4} -.025624{col 67}{space 3} .0291855
{txt}{space 4}2006 27  {c |}{col 14}{res}{space 2}-.0002067{col 26}{space 2} .0068357{col 37}{space 1}   -0.03{col 46}{space 3}0.976{col 54}{space 4}-.0136046{col 67}{space 3} .0131912
{txt}{space 4}2007  2  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  3  {c |}{col 14}{res}{space 2}-.0241089{col 26}{space 2} .0156931{col 37}{space 1}   -1.54{col 46}{space 3}0.124{col 54}{space 4}-.0548671{col 67}{space 3} .0066492
{txt}{space 4}2007  4  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  5  {c |}{col 14}{res}{space 2} .1612163{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.192{col 67}{space 3} 3429.514
{txt}{space 4}2007  6  {c |}{col 14}{res}{space 2} .0452809{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.308{col 67}{space 3} 3429.398
{txt}{space 4}2007  7  {c |}{col 14}{res}{space 2} .0280388{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.325{col 67}{space 3} 3429.381
{txt}{space 4}2007  8  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  9  {c |}{col 14}{res}{space 2} .0359668{col 26}{space 2} .0087876{col 37}{space 1}    4.09{col 46}{space 3}0.000{col 54}{space 4} .0187433{col 67}{space 3} .0531903
{txt}{space 4}2007 10  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 11  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 12  {c |}{col 14}{res}{space 2}  .002427{col 26}{space 2} .0111798{col 37}{space 1}    0.22{col 46}{space 3}0.828{col 54}{space 4}-.0194852{col 67}{space 3} .0243393
{txt}{space 4}2007 13  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 14  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 15  {c |}{col 14}{res}{space 2} .0184515{col 26}{space 2} .0145211{col 37}{space 1}    1.27{col 46}{space 3}0.204{col 54}{space 4}-.0100096{col 67}{space 3} .0469126
{txt}{space 4}2007 16  {c |}{col 14}{res}{space 2} .0197057{col 26}{space 2} .0088135{col 37}{space 1}    2.24{col 46}{space 3}0.025{col 54}{space 4} .0024313{col 67}{space 3}   .03698
{txt}{space 4}2007 17  {c |}{col 14}{res}{space 2} -.000421{col 26}{space 2} .0394966{col 37}{space 1}   -0.01{col 46}{space 3}0.991{col 54}{space 4}-.0778335{col 67}{space 3} .0769915
{txt}{space 4}2007 18  {c |}{col 14}{res}{space 2} .0302775{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.323{col 67}{space 3} 3429.383
{txt}{space 4}2007 19  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 20  {c |}{col 14}{res}{space 2} .0251784{col 26}{space 2} .0063876{col 37}{space 1}    3.94{col 46}{space 3}0.000{col 54}{space 4} .0126587{col 67}{space 3}  .037698
{txt}{space 4}2007 21  {c |}{col 14}{res}{space 2} .0169998{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.336{col 67}{space 3}  3429.37
{txt}{space 4}2007 22  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 23  {c |}{col 14}{res}{space 2} .0353999{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.318{col 67}{space 3} 3429.389
{txt}{space 4}2007 24  {c |}{col 14}{res}{space 2} .0496274{col 26}{space 2} 1749.687{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3429.304{col 67}{space 3} 3429.403
{txt}{space 4}2007 25  {c |}{col 14}{res}{space 2} .0278574{col 26}{space 2} .0084813{col 37}{space 1}    3.28{col 46}{space 3}0.001{col 54}{space 4} .0112341{col 67}{space 3} .0444806
{txt}{space 4}2007 26  {c |}{col 14}{res}{space 2}  .025966{col 26}{space 2}  .014055{col 37}{space 1}    1.85{col 46}{space 3}0.065{col 54}{space 4}-.0015816{col 67}{space 3} .0535136
{txt}{space 4}2007 27  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .1248913{col 26}{space 2} 1198.284{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4} -2348.49{col 67}{space 3} 2348.739
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .11833733
{txt}     sigma_e {c |} {res} .06555049
{txt}         rho {c |} {res} .76520612{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}66482{txt}, {res}140510{txt}) = {res}    6.62       {txt}Prob > F = {res}0.0000

{com}. log(100348712309487)
{err}( invalid
{txt}{search r(198):r(198);}

{com}. di log(100348712309487)#
{res}{err}invalid syntax
{txt}{search r(198):r(198);}

{com}. di log(100348712309487)
{res}32.239672

{com}. xi: xtreg osrape_prop energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise i.year i.mscode*trend, fe
{txt}i.year{col 19}_Iyear_1999-2007{col 39}(naturally coded; _Iyear_1999 omitted)
i.mscode{col 19}_Imscode_1-27{col 39}(naturally coded; _Imscode_1 omitted)
i.mscode*trend{col 19}_ImscXtren_#{col 39}(coded as above)
note: energydum omitted because of collinearity
note: _Iyear_2007 omitted because of collinearity
note: _Imscode_2 omitted because of collinearity
note: _Imscode_3 omitted because of collinearity
note: _Imscode_4 omitted because of collinearity
note: _Imscode_5 omitted because of collinearity
note: _Imscode_6 omitted because of collinearity
note: _Imscode_7 omitted because of collinearity
note: _Imscode_8 omitted because of collinearity
note: _Imscode_9 omitted because of collinearity
note: _Imscode_10 omitted because of collinearity
note: _Imscode_11 omitted because of collinearity
note: _Imscode_12 omitted because of collinearity
note: _Imscode_13 omitted because of collinearity
note: _Imscode_14 omitted because of collinearity
note: _Imscode_15 omitted because of collinearity
note: _Imscode_16 omitted because of collinearity
note: _Imscode_17 omitted because of collinearity
note: _Imscode_18 omitted because of collinearity
note: _Imscode_19 omitted because of collinearity
note: _Imscode_20 omitted because of collinearity
note: _Imscode_21 omitted because of collinearity
note: _Imscode_22 omitted because of collinearity
note: _Imscode_23 omitted because of collinearity
note: _Imscode_24 omitted because of collinearity
note: _Imscode_25 omitted because of collinearity
note: _Imscode_26 omitted because of collinearity
note: _Imscode_27 omitted because of collinearity
note: _ImscXtren_2 omitted because of collinearity
note: _ImscXtren_22 omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}   207150
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    66483

{txt}R-sq:  within  = {res}0.0190                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0102                                        {txt}avg = {res}      3.1
{txt}       overall = {res}0.0132                                        {txt}max = {res}        9

                                                {txt}F({res}39{txt},{res}140628{txt})       = {res}    69.69
{txt}corr(u_i, Xb)  = {res}-0.1530                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}  (omitted)
{txt}farmsrepre~d {c |}{col 14}{res}{space 2} 1.44e-06{col 26}{space 2} 2.97e-06{col 37}{space 1}    0.48{col 46}{space 3}0.629{col 54}{space 4}-4.39e-06{col 67}{space 3} 7.27e-06
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0036845{col 26}{space 2} .0004005{col 37}{space 1}   -9.20{col 46}{space 3}0.000{col 54}{space 4}-.0044695{col 67}{space 3}-.0028996
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0003168{col 26}{space 2} .0000223{col 37}{space 1}  -14.18{col 46}{space 3}0.000{col 54}{space 4}-.0003607{col 67}{space 3} -.000273
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .0015685{col 26}{space 2} .0007912{col 37}{space 1}    1.98{col 46}{space 3}0.047{col 54}{space 4} .0000178{col 67}{space 3} .0031193
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0001963{col 26}{space 2} .0000718{col 37}{space 1}   -2.73{col 46}{space 3}0.006{col 54}{space 4} -.000337{col 67}{space 3}-.0000556
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} 1.06e-07{col 26}{space 2} 7.83e-07{col 37}{space 1}    0.14{col 46}{space 3}0.892{col 54}{space 4}-1.43e-06{col 67}{space 3} 1.64e-06
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0014193{col 26}{space 2} .0008741{col 37}{space 1}    1.62{col 46}{space 3}0.104{col 54}{space 4}-.0002939{col 67}{space 3} .0031326
{txt}{space 1}_Iyear_2000 {c |}{col 14}{res}{space 2}-.0087043{col 26}{space 2} .0006578{col 37}{space 1}  -13.23{col 46}{space 3}0.000{col 54}{space 4}-.0099936{col 67}{space 3}-.0074149
{txt}{space 1}_Iyear_2001 {c |}{col 14}{res}{space 2}-.0075521{col 26}{space 2} .0006559{col 37}{space 1}  -11.51{col 46}{space 3}0.000{col 54}{space 4}-.0088376{col 67}{space 3}-.0062665
{txt}{space 1}_Iyear_2002 {c |}{col 14}{res}{space 2}  -.01588{col 26}{space 2} .0006697{col 37}{space 1}  -23.71{col 46}{space 3}0.000{col 54}{space 4}-.0171926{col 67}{space 3}-.0145675
{txt}{space 1}_Iyear_2003 {c |}{col 14}{res}{space 2}-.0122612{col 26}{space 2}  .000679{col 37}{space 1}  -18.06{col 46}{space 3}0.000{col 54}{space 4}-.0135919{col 67}{space 3}-.0109304
{txt}{space 1}_Iyear_2004 {c |}{col 14}{res}{space 2}-.0100023{col 26}{space 2} .0006804{col 37}{space 1}  -14.70{col 46}{space 3}0.000{col 54}{space 4}-.0113359{col 67}{space 3}-.0086687
{txt}{space 1}_Iyear_2005 {c |}{col 14}{res}{space 2}-.0081131{col 26}{space 2} .0006373{col 37}{space 1}  -12.73{col 46}{space 3}0.000{col 54}{space 4}-.0093623{col 67}{space 3} -.006864
{txt}{space 1}_Iyear_2006 {c |}{col 14}{res}{space 2} .0002334{col 26}{space 2} .0006139{col 37}{space 1}    0.38{col 46}{space 3}0.704{col 54}{space 4}-.0009698{col 67}{space 3} .0014365
{txt}{space 1}_Iyear_2007 {c |}{col 14}{res}  (omitted)
{txt}{space 2}_Imscode_2 {c |}{col 14}{res}  (omitted)
{txt}{space 2}_Imscode_3 {c |}{col 14}{res}  (omitted)
{txt}{space 2}_Imscode_4 {c |}{col 14}{res}  (omitted)
{txt}{space 2}_Imscode_5 {c |}{col 14}{res}  (omitted)
{txt}{space 2}_Imscode_6 {c |}{col 14}{res}  (omitted)
{txt}{space 2}_Imscode_7 {c |}{col 14}{res}  (omitted)
{txt}{space 2}_Imscode_8 {c |}{col 14}{res}  (omitted)
{txt}{space 2}_Imscode_9 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_10 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_11 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_12 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_13 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_14 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_15 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_16 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_17 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_18 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_19 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_20 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_21 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_22 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_23 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_24 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_25 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_26 {c |}{col 14}{res}  (omitted)
{txt}{space 1}_Imscode_27 {c |}{col 14}{res}  (omitted)
{txt}{space 7}trend {c |}{col 14}{res}{space 2}-.0011684{col 26}{space 2}  .001132{col 37}{space 1}   -1.03{col 46}{space 3}0.302{col 54}{space 4}-.0033871{col 67}{space 3} .0010504
{txt}_ImscXtren_2 {c |}{col 14}{res}  (omitted)
{txt}_ImscXtren_3 {c |}{col 14}{res}{space 2}-.0066759{col 26}{space 2} .0044734{col 37}{space 1}   -1.49{col 46}{space 3}0.136{col 54}{space 4}-.0154436{col 67}{space 3} .0020918
{txt}_ImscXtren_4 {c |}{col 14}{res}{space 2} .0059024{col 26}{space 2} .0017041{col 37}{space 1}    3.46{col 46}{space 3}0.001{col 54}{space 4} .0025624{col 67}{space 3} .0092424
{txt}_ImscXtren_5 {c |}{col 14}{res}{space 2} .0010246{col 26}{space 2} .0012732{col 37}{space 1}    0.80{col 46}{space 3}0.421{col 54}{space 4}-.0014708{col 67}{space 3}   .00352
{txt}_ImscXtren_6 {c |}{col 14}{res}{space 2} .0025015{col 26}{space 2} .0011527{col 37}{space 1}    2.17{col 46}{space 3}0.030{col 54}{space 4} .0002422{col 67}{space 3} .0047608
{txt}_ImscXtren_7 {c |}{col 14}{res}{space 2}-.0003875{col 26}{space 2} .0011627{col 37}{space 1}   -0.33{col 46}{space 3}0.739{col 54}{space 4}-.0026664{col 67}{space 3} .0018914
{txt}_ImscXtren_8 {c |}{col 14}{res}{space 2}-.0021548{col 26}{space 2} .0011535{col 37}{space 1}   -1.87{col 46}{space 3}0.062{col 54}{space 4}-.0044155{col 67}{space 3}  .000106
{txt}_ImscXtren_9 {c |}{col 14}{res}{space 2}  .012354{col 26}{space 2} .0023119{col 37}{space 1}    5.34{col 46}{space 3}0.000{col 54}{space 4} .0078226{col 67}{space 3} .0168853
{txt}_ImscXtre~10 {c |}{col 14}{res}{space 2} .0002456{col 26}{space 2} .0011518{col 37}{space 1}    0.21{col 46}{space 3}0.831{col 54}{space 4}-.0020119{col 67}{space 3} .0025031
{txt}_ImscXtre~11 {c |}{col 14}{res}{space 2} .0107031{col 26}{space 2} .0014789{col 37}{space 1}    7.24{col 46}{space 3}0.000{col 54}{space 4} .0078045{col 67}{space 3} .0136017
{txt}_ImscXtre~12 {c |}{col 14}{res}{space 2} .0008715{col 26}{space 2} .0015792{col 37}{space 1}    0.55{col 46}{space 3}0.581{col 54}{space 4}-.0022236{col 67}{space 3} .0039667
{txt}_ImscXtre~13 {c |}{col 14}{res}{space 2}-.0027086{col 26}{space 2} .0011649{col 37}{space 1}   -2.33{col 46}{space 3}0.020{col 54}{space 4}-.0049918{col 67}{space 3}-.0004255
{txt}_ImscXtre~14 {c |}{col 14}{res}{space 2}  .016894{col 26}{space 2} .0019138{col 37}{space 1}    8.83{col 46}{space 3}0.000{col 54}{space 4} .0131431{col 67}{space 3}  .020645
{txt}_ImscXtre~15 {c |}{col 14}{res}{space 2}  .003955{col 26}{space 2} .0018143{col 37}{space 1}    2.18{col 46}{space 3}0.029{col 54}{space 4} .0003989{col 67}{space 3} .0075111
{txt}_ImscXtre~16 {c |}{col 14}{res}{space 2}  .007211{col 26}{space 2} .0022348{col 37}{space 1}    3.23{col 46}{space 3}0.001{col 54}{space 4} .0028309{col 67}{space 3} .0115911
{txt}_ImscXtre~17 {c |}{col 14}{res}{space 2}-.0035659{col 26}{space 2} .0121146{col 37}{space 1}   -0.29{col 46}{space 3}0.768{col 54}{space 4}-.0273102{col 67}{space 3} .0201785
{txt}_ImscXtre~18 {c |}{col 14}{res}{space 2} .0005824{col 26}{space 2} .0013474{col 37}{space 1}    0.43{col 46}{space 3}0.666{col 54}{space 4}-.0020584{col 67}{space 3} .0032233
{txt}_ImscXtre~19 {c |}{col 14}{res}{space 2} .0007758{col 26}{space 2} .0012132{col 37}{space 1}    0.64{col 46}{space 3}0.523{col 54}{space 4}-.0016021{col 67}{space 3} .0031538
{txt}_ImscXtre~20 {c |}{col 14}{res}{space 2} .0085415{col 26}{space 2}  .001267{col 37}{space 1}    6.74{col 46}{space 3}0.000{col 54}{space 4} .0060582{col 67}{space 3} .0110247
{txt}_ImscXtre~21 {c |}{col 14}{res}{space 2}-.0013507{col 26}{space 2} .0013629{col 37}{space 1}   -0.99{col 46}{space 3}0.322{col 54}{space 4}-.0040219{col 67}{space 3} .0013206
{txt}_ImscXtre~22 {c |}{col 14}{res}  (omitted)
{txt}_ImscXtre~23 {c |}{col 14}{res}{space 2} .0035822{col 26}{space 2} .0012718{col 37}{space 1}    2.82{col 46}{space 3}0.005{col 54}{space 4} .0010896{col 67}{space 3} .0060748
{txt}_ImscXtre~24 {c |}{col 14}{res}{space 2} .0046407{col 26}{space 2}  .001257{col 37}{space 1}    3.69{col 46}{space 3}0.000{col 54}{space 4} .0021769{col 67}{space 3} .0071044
{txt}_ImscXtre~25 {c |}{col 14}{res}{space 2} .0117834{col 26}{space 2}  .002218{col 37}{space 1}    5.31{col 46}{space 3}0.000{col 54}{space 4} .0074361{col 67}{space 3} .0161306
{txt}_ImscXtre~26 {c |}{col 14}{res}{space 2} .0094809{col 26}{space 2} .0042354{col 37}{space 1}    2.24{col 46}{space 3}0.025{col 54}{space 4} .0011797{col 67}{space 3} .0177821
{txt}_ImscXtre~27 {c |}{col 14}{res}{space 2} .0013224{col 26}{space 2} .0012536{col 37}{space 1}    1.05{col 46}{space 3}0.291{col 54}{space 4}-.0011345{col 67}{space 3} .0037794
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0874662{col 26}{space 2} .0066586{col 37}{space 1}   13.14{col 46}{space 3}0.000{col 54}{space 4} .0744155{col 67}{space 3} .1005168
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .11386145
{txt}     sigma_e {c |} {res} .06586784
{txt}         rho {c |} {res} .74925901{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}66482{txt}, {res}140628{txt}) = {res}    6.56       {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise i.year, fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}   207150
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    66483

{txt}R-sq:  within  = {res}0.0124                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0085                                        {txt}avg = {res}      3.1
{txt}       overall = {res}0.0064                                        {txt}max = {res}        9

                                                {txt}F({res}15{txt},{res}140652{txt})       = {res}   117.95
{txt}corr(u_i, Xb)  = {res}-0.1952                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}-.0042155{col 26}{space 2} .0008324{col 37}{space 1}   -5.06{col 46}{space 3}0.000{col 54}{space 4}-.0058469{col 67}{space 3}-.0025841
{txt}farmsrepre~d {c |}{col 14}{res}{space 2} 9.38e-07{col 26}{space 2} 2.97e-06{col 37}{space 1}    0.32{col 46}{space 3}0.752{col 54}{space 4}-4.89e-06{col 67}{space 3} 6.76e-06
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0031334{col 26}{space 2} .0003978{col 37}{space 1}   -7.88{col 46}{space 3}0.000{col 54}{space 4} -.003913{col 67}{space 3}-.0023538
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0002977{col 26}{space 2} .0000223{col 37}{space 1}  -13.33{col 46}{space 3}0.000{col 54}{space 4}-.0003414{col 67}{space 3}-.0002539
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .0011473{col 26}{space 2} .0007836{col 37}{space 1}    1.46{col 46}{space 3}0.143{col 54}{space 4}-.0003886{col 67}{space 3} .0026832
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0001817{col 26}{space 2} .0000719{col 37}{space 1}   -2.53{col 46}{space 3}0.012{col 54}{space 4}-.0003226{col 67}{space 3}-.0000407
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} 9.57e-08{col 26}{space 2} 7.85e-07{col 37}{space 1}    0.12{col 46}{space 3}0.903{col 54}{space 4}-1.44e-06{col 67}{space 3} 1.63e-06
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0020367{col 26}{space 2} .0008762{col 37}{space 1}    2.32{col 46}{space 3}0.020{col 54}{space 4} .0003194{col 67}{space 3}  .003754
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0102654{col 26}{space 2} .0006992{col 37}{space 1}  -14.68{col 46}{space 3}0.000{col 54}{space 4}-.0116358{col 67}{space 3}-.0088951
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0107472{col 26}{space 2} .0007287{col 37}{space 1}  -14.75{col 46}{space 3}0.000{col 54}{space 4}-.0121754{col 67}{space 3} -.009319
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0205255{col 26}{space 2} .0007656{col 37}{space 1}  -26.81{col 46}{space 3}0.000{col 54}{space 4} -.022026{col 67}{space 3}-.0190249
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0165713{col 26}{space 2} .0008047{col 37}{space 1}  -20.59{col 46}{space 3}0.000{col 54}{space 4}-.0181486{col 67}{space 3}-.0149941
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0147169{col 26}{space 2} .0006728{col 37}{space 1}  -21.87{col 46}{space 3}0.000{col 54}{space 4}-.0160356{col 67}{space 3}-.0133982
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0113253{col 26}{space 2}  .000659{col 37}{space 1}  -17.19{col 46}{space 3}0.000{col 54}{space 4}-.0126169{col 67}{space 3}-.0100336
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}-.0015808{col 26}{space 2} .0006385{col 37}{space 1}   -2.48{col 46}{space 3}0.013{col 54}{space 4}-.0028321{col 67}{space 3}-.0003294
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .0952981{col 26}{space 2} .0066074{col 37}{space 1}   14.42{col 46}{space 3}0.000{col 54}{space 4} .0823476{col 67}{space 3} .1082485
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .11398262
{txt}     sigma_e {c |} {res} .06608134
{txt}         rho {c |} {res} .74844179{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}66482{txt}, {res}140652{txt}) = {res}    7.56       {txt}Prob > F = {res}0.0000

{com}. xtreg oilseedrapeuaa energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise i.year, fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}   207150
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    66483

{txt}R-sq:  within  = {res}0.0239                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0003                                        {txt}avg = {res}      3.1
{txt}       overall = {res}0.0017                                        {txt}max = {res}        9

                                                {txt}F({res}15{txt},{res}140652{txt})       = {res}   229.24
{txt}corr(u_i, Xb)  = {res}-0.1223                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}oilseedrap~a{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2} .9206198{col 26}{space 2} .1789573{col 37}{space 1}    5.14{col 46}{space 3}0.000{col 54}{space 4}  .569867{col 67}{space 3} 1.271373
{txt}farmsrepre~d {c |}{col 14}{res}{space 2} .0011834{col 26}{space 2}  .000639{col 37}{space 1}    1.85{col 46}{space 3}0.064{col 54}{space 4} -.000069{col 67}{space 3} .0024358
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .8891075{col 26}{space 2} .0855189{col 37}{space 1}   10.40{col 46}{space 3}0.000{col 54}{space 4} .7214921{col 67}{space 3} 1.056723
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.2218093{col 26}{space 2} .0047997{col 37}{space 1}  -46.21{col 46}{space 3}0.000{col 54}{space 4}-.2312165{col 67}{space 3} -.212402
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .7317405{col 26}{space 2} .1684787{col 37}{space 1}    4.34{col 46}{space 3}0.000{col 54}{space 4} .4015254{col 67}{space 3} 1.061956
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2} .0004711{col 26}{space 2} .0154643{col 37}{space 1}    0.03{col 46}{space 3}0.976{col 54}{space 4}-.0298387{col 67}{space 3} .0307809
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} .0000132{col 26}{space 2} .0001688{col 37}{space 1}    0.08{col 46}{space 3}0.938{col 54}{space 4}-.0003177{col 67}{space 3} .0003441
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .5603241{col 26}{space 2} .1883841{col 37}{space 1}    2.97{col 46}{space 3}0.003{col 54}{space 4} .1910948{col 67}{space 3} .9295534
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-1.614719{col 26}{space 2}  .150322{col 37}{space 1}  -10.74{col 46}{space 3}0.000{col 54}{space 4}-1.909347{col 67}{space 3}-1.320091
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-1.541433{col 26}{space 2} .1566647{col 37}{space 1}   -9.84{col 46}{space 3}0.000{col 54}{space 4}-1.848493{col 67}{space 3}-1.234373
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-2.037313{col 26}{space 2} .1646041{col 37}{space 1}  -12.38{col 46}{space 3}0.000{col 54}{space 4}-2.359934{col 67}{space 3}-1.714692
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-1.222963{col 26}{space 2} .1730184{col 37}{space 1}   -7.07{col 46}{space 3}0.000{col 54}{space 4}-1.562075{col 67}{space 3}-.8838499
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-3.030331{col 26}{space 2} .1446596{col 37}{space 1}  -20.95{col 46}{space 3}0.000{col 54}{space 4}-3.313861{col 67}{space 3}-2.746801
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-1.752477{col 26}{space 2} .1416883{col 37}{space 1}  -12.37{col 46}{space 3}0.000{col 54}{space 4}-2.030184{col 67}{space 3}-1.474771
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} .3989014{col 26}{space 2} .1372703{col 37}{space 1}    2.91{col 46}{space 3}0.004{col 54}{space 4} .1298542{col 67}{space 3} .6679485
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 4.143806{col 26}{space 2} 1.420609{col 37}{space 1}    2.92{col 46}{space 3}0.004{col 54}{space 4}  1.35944{col 67}{space 3} 6.928172
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 68.106839
{txt}     sigma_e {c |} {res} 14.207604
{txt}         rho {c |} {res} .95829764{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}66482{txt}, {res}140652{txt}) = {res}   34.17       {txt}Prob > F = {res}0.0000

{com}. xtreg oilseedrapeuaa energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise i.year year#mscode, fe
{txt}note: 2007.year omitted because of collinearity
note: 1999b.year#5.mscode omitted because of collinearity
note: 1999b.year#6.mscode omitted because of collinearity
note: 2000.year#7.mscode omitted because of collinearity
note: 2000.year#18.mscode omitted because of collinearity
note: 2001.year#21.mscode omitted because of collinearity
note: 2002.year#24.mscode omitted because of collinearity
note: 2003.year#23.mscode omitted because of collinearity
note: 2004.year#3.mscode omitted because of collinearity
note: 2004.year#9.mscode omitted because of collinearity
note: 2004.year#16.mscode omitted because of collinearity
note: 2004.year#20.mscode omitted because of collinearity
note: 2004.year#25.mscode omitted because of collinearity
note: 2004.year#26.mscode omitted because of collinearity
note: 2006.year#12.mscode omitted because of collinearity
note: 2006.year#15.mscode omitted because of collinearity
note: 2006.year#17.mscode omitted because of collinearity
note: 2007.year#2.mscode omitted because of collinearity
note: 2007.year#4.mscode omitted because of collinearity
note: 2007.year#8.mscode omitted because of collinearity
note: 2007.year#10.mscode omitted because of collinearity
note: 2007.year#11.mscode omitted because of collinearity
note: 2007.year#13.mscode omitted because of collinearity
note: 2007.year#14.mscode omitted because of collinearity
note: 2007.year#19.mscode omitted because of collinearity
note: 2007.year#22.mscode omitted because of collinearity
note: 2007.year#27.mscode omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}   207150
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    66483

{txt}R-sq:  within  = {res}0.0473                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0015                                        {txt}avg = {res}      3.1
{txt}       overall = {res}0.0069                                        {txt}max = {res}        9

                                                {txt}F({res}157{txt},{res}140510{txt})      = {res}    44.39
{txt}corr(u_i, Xb)  = {res}-0.1954                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}oilseedrap~a{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}-3.174517{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734701.7{col 67}{space 3} 734695.3
{txt}farmsrepre~d {c |}{col 14}{res}{space 2} .0010544{col 26}{space 2} .0006348{col 37}{space 1}    1.66{col 46}{space 3}0.097{col 54}{space 4}-.0001898{col 67}{space 3} .0022985
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .6594535{col 26}{space 2} .0858935{col 37}{space 1}    7.68{col 46}{space 3}0.000{col 54}{space 4} .4911038{col 67}{space 3} .8278031
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.2323915{col 26}{space 2} .0048041{col 37}{space 1}  -48.37{col 46}{space 3}0.000{col 54}{space 4}-.2418075{col 67}{space 3}-.2229756
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .5108961{col 26}{space 2} .1705548{col 37}{space 1}    3.00{col 46}{space 3}0.003{col 54}{space 4} .1766119{col 67}{space 3} .8451803
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2} .0077093{col 26}{space 2}  .015528{col 37}{space 1}    0.50{col 46}{space 3}0.620{col 54}{space 4}-.0227252{col 67}{space 3} .0381438
{txt}{space 4}solvency {c |}{col 14}{res}{space 2}-6.55e-06{col 26}{space 2} .0001671{col 37}{space 1}   -0.04{col 46}{space 3}0.969{col 54}{space 4}-.0003341{col 67}{space 3}  .000321
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .5000597{col 26}{space 2} .1866619{col 37}{space 1}    2.68{col 46}{space 3}0.007{col 54}{space 4} .1342059{col 67}{space 3} .8659134
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-1.290541{col 26}{space 2} 1.228156{col 37}{space 1}   -1.05{col 46}{space 3}0.293{col 54}{space 4}-3.697703{col 67}{space 3} 1.116622
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-1.440343{col 26}{space 2} 1.261569{col 37}{space 1}   -1.14{col 46}{space 3}0.254{col 54}{space 4}-3.912995{col 67}{space 3} 1.032308
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-1.410321{col 26}{space 2} 1.274877{col 37}{space 1}   -1.11{col 46}{space 3}0.269{col 54}{space 4}-3.909055{col 67}{space 3} 1.088414
{txt}{space 7}2003  {c |}{col 14}{res}{space 2} -1.45893{col 26}{space 2} 1.278838{col 37}{space 1}   -1.14{col 46}{space 3}0.254{col 54}{space 4}-3.965429{col 67}{space 3} 1.047569
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.8150649{col 26}{space 2} 1.321103{col 37}{space 1}   -0.62{col 46}{space 3}0.537{col 54}{space 4}-3.404401{col 67}{space 3} 1.774271
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.4411911{col 26}{space 2} 1.291333{col 37}{space 1}   -0.34{col 46}{space 3}0.733{col 54}{space 4} -2.97218{col 67}{space 3} 2.089798
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}-.0141685{col 26}{space 2} 1.258595{col 37}{space 1}   -0.01{col 46}{space 3}0.991{col 54}{space 4}-2.480991{col 67}{space 3} 2.452654
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 1}year#mscode {c |}
{space 4}1999  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999  3  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999  4  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999  5  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  6  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  7  {c |}{col 14}{res}{space 2}-1.134597{col 26}{space 2}  1.30149{col 37}{space 1}   -0.87{col 46}{space 3}0.383{col 54}{space 4}-3.685492{col 67}{space 3} 1.416297
{txt}{space 4}1999  8  {c |}{col 14}{res}{space 2}-.1074297{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734698.6{col 67}{space 3} 734698.4
{txt}{space 4}1999  9  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 10  {c |}{col 14}{res}{space 2} -4.14755{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734702.6{col 67}{space 3} 734694.3
{txt}{space 4}1999 11  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 12  {c |}{col 14}{res}{space 2}-3.022892{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734701.5{col 67}{space 3} 734695.5
{txt}{space 4}1999 13  {c |}{col 14}{res}{space 2}-1.411839{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734699.9{col 67}{space 3} 734697.1
{txt}{space 4}1999 14  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 15  {c |}{col 14}{res}{space 2}-5.289567{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734703.8{col 67}{space 3} 734693.2
{txt}{space 4}1999 16  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 17  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 18  {c |}{col 14}{res}{space 2}-1.274366{col 26}{space 2} 1.714764{col 37}{space 1}   -0.74{col 46}{space 3}0.457{col 54}{space 4}-4.635271{col 67}{space 3} 2.086539
{txt}{space 4}1999 19  {c |}{col 14}{res}{space 2}-3.278059{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734701.8{col 67}{space 3} 734695.2
{txt}{space 4}1999 20  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 21  {c |}{col 14}{res}{space 2}-1.399192{col 26}{space 2} 1.708157{col 37}{space 1}   -0.82{col 46}{space 3}0.413{col 54}{space 4}-4.747146{col 67}{space 3} 1.948762
{txt}{space 4}1999 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 23  {c |}{col 14}{res}{space 2}-2.681355{col 26}{space 2} 1.782118{col 37}{space 1}   -1.50{col 46}{space 3}0.132{col 54}{space 4}-6.174272{col 67}{space 3} .8115624
{txt}{space 4}1999 24  {c |}{col 14}{res}{space 2}-1.162571{col 26}{space 2} 1.674627{col 37}{space 1}   -0.69{col 46}{space 3}0.488{col 54}{space 4}-4.444808{col 67}{space 3} 2.119666
{txt}{space 4}1999 25  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 26  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 27  {c |}{col 14}{res}{space 2} .2695375{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734698.2{col 67}{space 3} 734698.8
{txt}{space 4}2000  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000  3  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000  4  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000  5  {c |}{col 14}{res}{space 2}-2.200133{col 26}{space 2}   1.5008{col 37}{space 1}   -1.47{col 46}{space 3}0.143{col 54}{space 4}-5.141673{col 67}{space 3} .7414067
{txt}{space 4}2000  6  {c |}{col 14}{res}{space 2} -2.33652{col 26}{space 2} 1.292691{col 37}{space 1}   -1.81{col 46}{space 3}0.071{col 54}{space 4}-4.870169{col 67}{space 3} .1971291
{txt}{space 4}2000  7  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2000  8  {c |}{col 14}{res}{space 2}-.5694852{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734699.1{col 67}{space 3} 734697.9
{txt}{space 4}2000  9  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 10  {c |}{col 14}{res}{space 2}  -4.8398{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734703.3{col 67}{space 3} 734693.7
{txt}{space 4}2000 11  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 12  {c |}{col 14}{res}{space 2}-2.556001{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}  -734701{col 67}{space 3} 734695.9
{txt}{space 4}2000 13  {c |}{col 14}{res}{space 2}-.2232041{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734698.7{col 67}{space 3} 734698.3
{txt}{space 4}2000 14  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 15  {c |}{col 14}{res}{space 2}-5.703528{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734704.2{col 67}{space 3} 734692.8
{txt}{space 4}2000 16  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 17  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 18  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2000 19  {c |}{col 14}{res}{space 2}-2.811677{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734701.3{col 67}{space 3} 734695.7
{txt}{space 4}2000 20  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 21  {c |}{col 14}{res}{space 2}   .54192{col 26}{space 2} 1.659322{col 37}{space 1}    0.33{col 46}{space 3}0.744{col 54}{space 4} -2.71032{col 67}{space 3}  3.79416
{txt}{space 4}2000 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 23  {c |}{col 14}{res}{space 2}-1.493397{col 26}{space 2} 1.750452{col 37}{space 1}   -0.85{col 46}{space 3}0.394{col 54}{space 4} -4.92425{col 67}{space 3} 1.937456
{txt}{space 4}2000 24  {c |}{col 14}{res}{space 2}-1.868068{col 26}{space 2} 1.632829{col 37}{space 1}   -1.14{col 46}{space 3}0.253{col 54}{space 4}-5.068382{col 67}{space 3} 1.332246
{txt}{space 4}2000 25  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 26  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 27  {c |}{col 14}{res}{space 2}-5.504301{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}  -734704{col 67}{space 3}   734693
{txt}{space 4}2001  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001  3  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001  4  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001  5  {c |}{col 14}{res}{space 2}-3.355625{col 26}{space 2}  1.54398{col 37}{space 1}   -2.17{col 46}{space 3}0.030{col 54}{space 4}-6.381798{col 67}{space 3}-.3294532
{txt}{space 4}2001  6  {c |}{col 14}{res}{space 2}-1.728129{col 26}{space 2} 1.327528{col 37}{space 1}   -1.30{col 46}{space 3}0.193{col 54}{space 4}-4.330058{col 67}{space 3} .8738002
{txt}{space 4}2001  7  {c |}{col 14}{res}{space 2} .0539346{col 26}{space 2} 1.309391{col 37}{space 1}    0.04{col 46}{space 3}0.967{col 54}{space 4}-2.512448{col 67}{space 3} 2.620317
{txt}{space 4}2001  8  {c |}{col 14}{res}{space 2} .3311096{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734698.2{col 67}{space 3} 734698.8
{txt}{space 4}2001  9  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 10  {c |}{col 14}{res}{space 2}-5.239294{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734703.7{col 67}{space 3} 734693.3
{txt}{space 4}2001 11  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 12  {c |}{col 14}{res}{space 2}-2.891523{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734701.4{col 67}{space 3} 734695.6
{txt}{space 4}2001 13  {c |}{col 14}{res}{space 2}-.1556363{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734698.6{col 67}{space 3} 734698.3
{txt}{space 4}2001 14  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 15  {c |}{col 14}{res}{space 2} -4.76532{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734703.3{col 67}{space 3} 734693.7
{txt}{space 4}2001 16  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 17  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 18  {c |}{col 14}{res}{space 2}  .017571{col 26}{space 2} 1.882486{col 37}{space 1}    0.01{col 46}{space 3}0.993{col 54}{space 4}-3.672065{col 67}{space 3} 3.707207
{txt}{space 4}2001 19  {c |}{col 14}{res}{space 2}-2.453881{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734700.9{col 67}{space 3}   734696
{txt}{space 4}2001 20  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 21  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2001 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 23  {c |}{col 14}{res}{space 2}-1.268704{col 26}{space 2} 1.751206{col 37}{space 1}   -0.72{col 46}{space 3}0.469{col 54}{space 4}-4.701034{col 67}{space 3} 2.163626
{txt}{space 4}2001 24  {c |}{col 14}{res}{space 2}-1.445499{col 26}{space 2} 1.618751{col 37}{space 1}   -0.89{col 46}{space 3}0.372{col 54}{space 4} -4.61822{col 67}{space 3} 1.727222
{txt}{space 4}2001 25  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 26  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 27  {c |}{col 14}{res}{space 2}-5.241489{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734703.7{col 67}{space 3} 734693.3
{txt}{space 4}2002  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002  3  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002  4  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002  5  {c |}{col 14}{res}{space 2}-2.674629{col 26}{space 2} 1.570915{col 37}{space 1}   -1.70{col 46}{space 3}0.089{col 54}{space 4}-5.753592{col 67}{space 3} .4043346
{txt}{space 4}2002  6  {c |}{col 14}{res}{space 2} .3150885{col 26}{space 2} 1.346848{col 37}{space 1}    0.23{col 46}{space 3}0.815{col 54}{space 4}-2.324708{col 67}{space 3} 2.954885
{txt}{space 4}2002  7  {c |}{col 14}{res}{space 2} .0241161{col 26}{space 2} 1.332124{col 37}{space 1}    0.02{col 46}{space 3}0.986{col 54}{space 4}-2.586822{col 67}{space 3} 2.635054
{txt}{space 4}2002  8  {c |}{col 14}{res}{space 2}-.6726359{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734699.2{col 67}{space 3} 734697.8
{txt}{space 4}2002  9  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 10  {c |}{col 14}{res}{space 2}-7.280376{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734705.8{col 67}{space 3} 734691.2
{txt}{space 4}2002 11  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 12  {c |}{col 14}{res}{space 2}-2.531684{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}  -734701{col 67}{space 3}   734696
{txt}{space 4}2002 13  {c |}{col 14}{res}{space 2}-1.128151{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734699.6{col 67}{space 3} 734697.4
{txt}{space 4}2002 14  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 15  {c |}{col 14}{res}{space 2}-5.123911{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734703.6{col 67}{space 3} 734693.4
{txt}{space 4}2002 16  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 17  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 18  {c |}{col 14}{res}{space 2} .1822222{col 26}{space 2} 1.891194{col 37}{space 1}    0.10{col 46}{space 3}0.923{col 54}{space 4}-3.524482{col 67}{space 3} 3.888927
{txt}{space 4}2002 19  {c |}{col 14}{res}{space 2}-2.260416{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734700.8{col 67}{space 3} 734696.2
{txt}{space 4}2002 20  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 21  {c |}{col 14}{res}{space 2}-.4640967{col 26}{space 2} 1.709086{col 37}{space 1}   -0.27{col 46}{space 3}0.786{col 54}{space 4}-3.813872{col 67}{space 3} 2.885678
{txt}{space 4}2002 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 23  {c |}{col 14}{res}{space 2}-1.310303{col 26}{space 2} 1.682615{col 37}{space 1}   -0.78{col 46}{space 3}0.436{col 54}{space 4}-4.608196{col 67}{space 3}  1.98759
{txt}{space 4}2002 24  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2002 25  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 26  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 27  {c |}{col 14}{res}{space 2}-8.264548{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734706.8{col 67}{space 3} 734690.2
{txt}{space 4}2003  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003  3  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003  4  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003  5  {c |}{col 14}{res}{space 2}-.2535221{col 26}{space 2} 1.587765{col 37}{space 1}   -0.16{col 46}{space 3}0.873{col 54}{space 4}-3.365512{col 67}{space 3} 2.858468
{txt}{space 4}2003  6  {c |}{col 14}{res}{space 2} .8526454{col 26}{space 2}  1.35119{col 37}{space 1}    0.63{col 46}{space 3}0.528{col 54}{space 4}-1.795662{col 67}{space 3} 3.500953
{txt}{space 4}2003  7  {c |}{col 14}{res}{space 2}-.2555818{col 26}{space 2} 1.342696{col 37}{space 1}   -0.19{col 46}{space 3}0.849{col 54}{space 4} -2.88724{col 67}{space 3} 2.376076
{txt}{space 4}2003  8  {c |}{col 14}{res}{space 2}-.6046855{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734699.1{col 67}{space 3} 734697.9
{txt}{space 4}2003  9  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 10  {c |}{col 14}{res}{space 2}-5.937328{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734704.4{col 67}{space 3} 734692.6
{txt}{space 4}2003 11  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 12  {c |}{col 14}{res}{space 2}-2.180625{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734700.7{col 67}{space 3} 734696.3
{txt}{space 4}2003 13  {c |}{col 14}{res}{space 2}-1.530101{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}  -734700{col 67}{space 3}   734697
{txt}{space 4}2003 14  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 15  {c |}{col 14}{res}{space 2}-4.978067{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734703.5{col 67}{space 3} 734693.5
{txt}{space 4}2003 16  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 17  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 18  {c |}{col 14}{res}{space 2} .2242154{col 26}{space 2}  1.90356{col 37}{space 1}    0.12{col 46}{space 3}0.906{col 54}{space 4}-3.506727{col 67}{space 3} 3.955158
{txt}{space 4}2003 19  {c |}{col 14}{res}{space 2}-2.381221{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734700.9{col 67}{space 3} 734696.1
{txt}{space 4}2003 20  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 21  {c |}{col 14}{res}{space 2}-1.002497{col 26}{space 2} 1.797204{col 37}{space 1}   -0.56{col 46}{space 3}0.577{col 54}{space 4}-4.524983{col 67}{space 3} 2.519988
{txt}{space 4}2003 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 23  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2003 24  {c |}{col 14}{res}{space 2}-.2684947{col 26}{space 2} 1.611616{col 37}{space 1}   -0.17{col 46}{space 3}0.868{col 54}{space 4}-3.427231{col 67}{space 3} 2.890242
{txt}{space 4}2003 25  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 26  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 27  {c |}{col 14}{res}{space 2}-2.810777{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734701.3{col 67}{space 3} 734695.7
{txt}{space 4}2004  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2004  3  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004  4  {c |}{col 14}{res}{space 2}-15.85254{col 26}{space 2} 1.566659{col 37}{space 1}  -10.12{col 46}{space 3}0.000{col 54}{space 4}-18.92316{col 67}{space 3}-12.78192
{txt}{space 4}2004  5  {c |}{col 14}{res}{space 2} 3.791596{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734694.7{col 67}{space 3} 734702.3
{txt}{space 4}2004  6  {c |}{col 14}{res}{space 2} 4.369643{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734694.1{col 67}{space 3} 734702.9
{txt}{space 4}2004  7  {c |}{col 14}{res}{space 2} 2.139508{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734696.4{col 67}{space 3} 734700.6
{txt}{space 4}2004  8  {c |}{col 14}{res}{space 2} 2.213509{col 26}{space 2} 1.399056{col 37}{space 1}    1.58{col 46}{space 3}0.114{col 54}{space 4}-.5286136{col 67}{space 3} 4.955631
{txt}{space 4}2004  9  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004 10  {c |}{col 14}{res}{space 2}-3.771643{col 26}{space 2} 1.385386{col 37}{space 1}   -2.72{col 46}{space 3}0.006{col 54}{space 4}-6.486974{col 67}{space 3}-1.056313
{txt}{space 4}2004 11  {c |}{col 14}{res}{space 2}-12.31826{col 26}{space 2} 1.461549{col 37}{space 1}   -8.43{col 46}{space 3}0.000{col 54}{space 4}-15.18287{col 67}{space 3}-9.453655
{txt}{space 4}2004 12  {c |}{col 14}{res}{space 2}-.0503925{col 26}{space 2} 2.376401{col 37}{space 1}   -0.02{col 46}{space 3}0.983{col 54}{space 4}-4.708093{col 67}{space 3} 4.607308
{txt}{space 4}2004 13  {c |}{col 14}{res}{space 2}  .598048{col 26}{space 2} 1.374316{col 37}{space 1}    0.44{col 46}{space 3}0.663{col 54}{space 4}-2.095584{col 67}{space 3}  3.29168
{txt}{space 4}2004 14  {c |}{col 14}{res}{space 2}-23.99358{col 26}{space 2} 1.675757{col 37}{space 1}  -14.32{col 46}{space 3}0.000{col 54}{space 4}-27.27804{col 67}{space 3}-20.70913
{txt}{space 4}2004 15  {c |}{col 14}{res}{space 2}-1.632123{col 26}{space 2} 2.981289{col 37}{space 1}   -0.55{col 46}{space 3}0.584{col 54}{space 4}-7.475393{col 67}{space 3} 4.211147
{txt}{space 4}2004 16  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004 17  {c |}{col 14}{res}{space 2} .4261519{col 26}{space 2} 7.395433{col 37}{space 1}    0.06{col 46}{space 3}0.954{col 54}{space 4}-14.06875{col 67}{space 3} 14.92106
{txt}{space 4}2004 18  {c |}{col 14}{res}{space 2} 2.819798{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734695.7{col 67}{space 3} 734701.3
{txt}{space 4}2004 19  {c |}{col 14}{res}{space 2} .2329511{col 26}{space 2} 1.613999{col 37}{space 1}    0.14{col 46}{space 3}0.885{col 54}{space 4}-2.930457{col 67}{space 3} 3.396359
{txt}{space 4}2004 20  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004 21  {c |}{col 14}{res}{space 2} 1.116455{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734697.4{col 67}{space 3} 734699.6
{txt}{space 4}2004 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2004 23  {c |}{col 14}{res}{space 2} 2.908305{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734695.6{col 67}{space 3} 734701.4
{txt}{space 4}2004 24  {c |}{col 14}{res}{space 2} 4.543075{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}  -734694{col 67}{space 3}   734703
{txt}{space 4}2004 25  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004 26  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004 27  {c |}{col 14}{res}{space 2}-1.123584{col 26}{space 2} 1.533037{col 37}{space 1}   -0.73{col 46}{space 3}0.464{col 54}{space 4}-4.128307{col 67}{space 3} 1.881138
{txt}{space 4}2005  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2005  3  {c |}{col 14}{res}{space 2}-.5429446{col 26}{space 2} 3.153887{col 37}{space 1}   -0.17{col 46}{space 3}0.863{col 54}{space 4}-6.724504{col 67}{space 3} 5.638614
{txt}{space 4}2005  4  {c |}{col 14}{res}{space 2}-12.09826{col 26}{space 2} 1.516724{col 37}{space 1}   -7.98{col 46}{space 3}0.000{col 54}{space 4}-15.07101{col 67}{space 3} -9.12551
{txt}{space 4}2005  5  {c |}{col 14}{res}{space 2} 2.049049{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734696.4{col 67}{space 3} 734700.5
{txt}{space 4}2005  6  {c |}{col 14}{res}{space 2} 5.308524{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734693.2{col 67}{space 3} 734703.8
{txt}{space 4}2005  7  {c |}{col 14}{res}{space 2} 1.784273{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734696.7{col 67}{space 3} 734700.3
{txt}{space 4}2005  8  {c |}{col 14}{res}{space 2}  1.54782{col 26}{space 2} 1.367899{col 37}{space 1}    1.13{col 46}{space 3}0.258{col 54}{space 4}-1.133237{col 67}{space 3} 4.228876
{txt}{space 4}2005  9  {c |}{col 14}{res}{space 2}-5.328527{col 26}{space 2} 1.790254{col 37}{space 1}   -2.98{col 46}{space 3}0.003{col 54}{space 4} -8.83739{col 67}{space 3}-1.819664
{txt}{space 4}2005 10  {c |}{col 14}{res}{space 2}-2.421352{col 26}{space 2} 1.355419{col 37}{space 1}   -1.79{col 46}{space 3}0.074{col 54}{space 4}-5.077948{col 67}{space 3} .2352444
{txt}{space 4}2005 11  {c |}{col 14}{res}{space 2}-5.652294{col 26}{space 2} 1.432531{col 37}{space 1}   -3.95{col 46}{space 3}0.000{col 54}{space 4}-8.460027{col 67}{space 3}-2.844561
{txt}{space 4}2005 12  {c |}{col 14}{res}{space 2} .1757564{col 26}{space 2} 2.401988{col 37}{space 1}    0.07{col 46}{space 3}0.942{col 54}{space 4}-4.532094{col 67}{space 3} 4.883607
{txt}{space 4}2005 13  {c |}{col 14}{res}{space 2}  .492928{col 26}{space 2} 1.340796{col 37}{space 1}    0.37{col 46}{space 3}0.713{col 54}{space 4}-2.135007{col 67}{space 3} 3.120863
{txt}{space 4}2005 14  {c |}{col 14}{res}{space 2}-17.26918{col 26}{space 2} 1.586348{col 37}{space 1}  -10.89{col 46}{space 3}0.000{col 54}{space 4}-20.37839{col 67}{space 3}-14.15997
{txt}{space 4}2005 15  {c |}{col 14}{res}{space 2} -2.80101{col 26}{space 2} 3.121947{col 37}{space 1}   -0.90{col 46}{space 3}0.370{col 54}{space 4}-8.919967{col 67}{space 3} 3.317947
{txt}{space 4}2005 16  {c |}{col 14}{res}{space 2} 9.637339{col 26}{space 2} 1.623214{col 37}{space 1}    5.94{col 46}{space 3}0.000{col 54}{space 4} 6.455872{col 67}{space 3} 12.81881
{txt}{space 4}2005 17  {c |}{col 14}{res}{space 2} .0966337{col 26}{space 2} 7.566344{col 37}{space 1}    0.01{col 46}{space 3}0.990{col 54}{space 4}-14.73326{col 67}{space 3} 14.92652
{txt}{space 4}2005 18  {c |}{col 14}{res}{space 2}  2.55057{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734695.9{col 67}{space 3}   734701
{txt}{space 4}2005 19  {c |}{col 14}{res}{space 2} .2970537{col 26}{space 2} 1.577483{col 37}{space 1}    0.19{col 46}{space 3}0.851{col 54}{space 4}-2.794783{col 67}{space 3} 3.388891
{txt}{space 4}2005 20  {c |}{col 14}{res}{space 2}-.3725019{col 26}{space 2}  1.28955{col 37}{space 1}   -0.29{col 46}{space 3}0.773{col 54}{space 4}-2.899995{col 67}{space 3} 2.154991
{txt}{space 4}2005 21  {c |}{col 14}{res}{space 2}-.1904471{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734698.7{col 67}{space 3} 734698.3
{txt}{space 4}2005 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2005 23  {c |}{col 14}{res}{space 2} 2.914775{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734695.6{col 67}{space 3} 734701.4
{txt}{space 4}2005 24  {c |}{col 14}{res}{space 2} 4.714889{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734693.8{col 67}{space 3} 734703.2
{txt}{space 4}2005 25  {c |}{col 14}{res}{space 2} 12.63635{col 26}{space 2} 1.610607{col 37}{space 1}    7.85{col 46}{space 3}0.000{col 54}{space 4}  9.47959{col 67}{space 3} 15.79311
{txt}{space 4}2005 26  {c |}{col 14}{res}{space 2}-.0344906{col 26}{space 2} 2.868625{col 37}{space 1}   -0.01{col 46}{space 3}0.990{col 54}{space 4}-5.656942{col 67}{space 3}  5.58796
{txt}{space 4}2005 27  {c |}{col 14}{res}{space 2} 1.460064{col 26}{space 2} 1.498045{col 37}{space 1}    0.97{col 46}{space 3}0.330{col 54}{space 4}-1.476075{col 67}{space 3} 4.396202
{txt}{space 4}2006  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2006  3  {c |}{col 14}{res}{space 2}-.8764129{col 26}{space 2} 3.215736{col 37}{space 1}   -0.27{col 46}{space 3}0.785{col 54}{space 4}-7.179194{col 67}{space 3} 5.426368
{txt}{space 4}2006  4  {c |}{col 14}{res}{space 2}-1.704573{col 26}{space 2} 1.467526{col 37}{space 1}   -1.16{col 46}{space 3}0.245{col 54}{space 4}-4.580897{col 67}{space 3}  1.17175
{txt}{space 4}2006  5  {c |}{col 14}{res}{space 2} 4.095283{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734694.4{col 67}{space 3} 734702.6
{txt}{space 4}2006  6  {c |}{col 14}{res}{space 2}  8.58348{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734689.9{col 67}{space 3} 734707.1
{txt}{space 4}2006  7  {c |}{col 14}{res}{space 2} 1.493637{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}  -734697{col 67}{space 3}   734700
{txt}{space 4}2006  8  {c |}{col 14}{res}{space 2} .8262452{col 26}{space 2}  1.33551{col 37}{space 1}    0.62{col 46}{space 3}0.536{col 54}{space 4}-1.791328{col 67}{space 3} 3.443819
{txt}{space 4}2006  9  {c |}{col 14}{res}{space 2} 3.734583{col 26}{space 2} 1.837739{col 37}{space 1}    2.03{col 46}{space 3}0.042{col 54}{space 4} .1326501{col 67}{space 3} 7.336517
{txt}{space 4}2006 10  {c |}{col 14}{res}{space 2}-1.534363{col 26}{space 2} 1.322503{col 37}{space 1}   -1.16{col 46}{space 3}0.246{col 54}{space 4}-4.126444{col 67}{space 3} 1.057719
{txt}{space 4}2006 11  {c |}{col 14}{res}{space 2}-.8334719{col 26}{space 2} 1.401546{col 37}{space 1}   -0.59{col 46}{space 3}0.552{col 54}{space 4}-3.580476{col 67}{space 3} 1.913532
{txt}{space 4}2006 12  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2006 13  {c |}{col 14}{res}{space 2} .7351421{col 26}{space 2} 1.307718{col 37}{space 1}    0.56{col 46}{space 3}0.574{col 54}{space 4}-1.827961{col 67}{space 3} 3.298245
{txt}{space 4}2006 14  {c |}{col 14}{res}{space 2}-5.795394{col 26}{space 2} 1.533994{col 37}{space 1}   -3.78{col 46}{space 3}0.000{col 54}{space 4}-8.801994{col 67}{space 3}-2.788794
{txt}{space 4}2006 15  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2006 16  {c |}{col 14}{res}{space 2} 15.51977{col 26}{space 2} 1.656879{col 37}{space 1}    9.37{col 46}{space 3}0.000{col 54}{space 4} 12.27232{col 67}{space 3} 18.76722
{txt}{space 4}2006 17  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2006 18  {c |}{col 14}{res}{space 2}  1.52297{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}  -734697{col 67}{space 3}   734700
{txt}{space 4}2006 19  {c |}{col 14}{res}{space 2}  .824755{col 26}{space 2} 1.543437{col 37}{space 1}    0.53{col 46}{space 3}0.593{col 54}{space 4}-2.200353{col 67}{space 3} 3.849863
{txt}{space 4}2006 20  {c |}{col 14}{res}{space 2} .4376014{col 26}{space 2} 1.318006{col 37}{space 1}    0.33{col 46}{space 3}0.740{col 54}{space 4}-2.145664{col 67}{space 3} 3.020867
{txt}{space 4}2006 21  {c |}{col 14}{res}{space 2}-.5718217{col 26}{space 2} 374849.8{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-734699.1{col 67}{space 3} 734697.9
{txt}{space 4}2006 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2006 23  {c |}{col 14}{res}{space 2}  3.96599{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734694.5{col 67}{space 3} 734702.5
{txt}{space 4}2006 24  {c |}{col 14}{res}{space 2} 4.631473{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734693.9{col 67}{space 3} 734703.1
{txt}{space 4}2006 25  {c |}{col 14}{res}{space 2} 27.84867{col 26}{space 2} 1.718095{col 37}{space 1}   16.21{col 46}{space 3}0.000{col 54}{space 4} 24.48123{col 67}{space 3}  31.2161
{txt}{space 4}2006 26  {c |}{col 14}{res}{space 2}-.3667566{col 26}{space 2}  2.99551{col 37}{space 1}   -0.12{col 46}{space 3}0.903{col 54}{space 4}-6.237898{col 67}{space 3} 5.504385
{txt}{space 4}2006 27  {c |}{col 14}{res}{space 2}-.3338802{col 26}{space 2} 1.464479{col 37}{space 1}   -0.23{col 46}{space 3}0.820{col 54}{space 4}-3.204231{col 67}{space 3}  2.53647
{txt}{space 4}2007  2  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  3  {c |}{col 14}{res}{space 2}-.7941557{col 26}{space 2} 3.362059{col 37}{space 1}   -0.24{col 46}{space 3}0.813{col 54}{space 4}-7.383727{col 67}{space 3} 5.795416
{txt}{space 4}2007  4  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  5  {c |}{col 14}{res}{space 2} 38.40096{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734660.1{col 67}{space 3} 734736.9
{txt}{space 4}2007  6  {c |}{col 14}{res}{space 2} 1.498232{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}  -734697{col 67}{space 3}   734700
{txt}{space 4}2007  7  {c |}{col 14}{res}{space 2} 1.601144{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734696.9{col 67}{space 3} 734700.1
{txt}{space 4}2007  8  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  9  {c |}{col 14}{res}{space 2} 14.84105{col 26}{space 2} 1.882634{col 37}{space 1}    7.88{col 46}{space 3}0.000{col 54}{space 4} 11.15112{col 67}{space 3} 18.53098
{txt}{space 4}2007 10  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 11  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 12  {c |}{col 14}{res}{space 2} .5736625{col 26}{space 2} 2.395145{col 37}{space 1}    0.24{col 46}{space 3}0.811{col 54}{space 4}-4.120775{col 67}{space 3}   5.2681
{txt}{space 4}2007 13  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 14  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 15  {c |}{col 14}{res}{space 2} .2492024{col 26}{space 2} 3.110976{col 37}{space 1}    0.08{col 46}{space 3}0.936{col 54}{space 4}-5.848252{col 67}{space 3} 6.346657
{txt}{space 4}2007 16  {c |}{col 14}{res}{space 2} 15.23104{col 26}{space 2} 1.888197{col 37}{space 1}    8.07{col 46}{space 3}0.000{col 54}{space 4} 11.53021{col 67}{space 3} 18.93187
{txt}{space 4}2007 17  {c |}{col 14}{res}{space 2}-.1262276{col 26}{space 2} 8.461673{col 37}{space 1}   -0.01{col 46}{space 3}0.988{col 54}{space 4}-16.71095{col 67}{space 3} 16.45849
{txt}{space 4}2007 18  {c |}{col 14}{res}{space 2}  1.63477{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734696.9{col 67}{space 3} 734700.1
{txt}{space 4}2007 19  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 20  {c |}{col 14}{res}{space 2}  1.78113{col 26}{space 2} 1.368478{col 37}{space 1}    1.30{col 46}{space 3}0.193{col 54}{space 4}-.9010617{col 67}{space 3} 4.463321
{txt}{space 4}2007 21  {c |}{col 14}{res}{space 2} .3271257{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734698.2{col 67}{space 3} 734698.8
{txt}{space 4}2007 22  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 23  {c |}{col 14}{res}{space 2} 2.634398{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-734695.9{col 67}{space 3} 734701.1
{txt}{space 4}2007 24  {c |}{col 14}{res}{space 2} 5.485753{col 26}{space 2} 374849.8{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}  -734693{col 67}{space 3}   734704
{txt}{space 4}2007 25  {c |}{col 14}{res}{space 2} 20.06452{col 26}{space 2} 1.817024{col 37}{space 1}   11.04{col 46}{space 3}0.000{col 54}{space 4} 16.50319{col 67}{space 3} 23.62586
{txt}{space 4}2007 26  {c |}{col 14}{res}{space 2} 1.068096{col 26}{space 2} 3.011126{col 37}{space 1}    0.35{col 46}{space 3}0.723{col 54}{space 4}-4.833653{col 67}{space 3} 6.969844
{txt}{space 4}2007 27  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 9.526886{col 26}{space 2} 256718.3{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-503153.4{col 67}{space 3} 503172.5
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 68.740337
{txt}     sigma_e {c |} {res}  14.04342
{txt}         rho {c |} {res} .95993508{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}66482{txt}, {res}140510{txt}) = {res}   32.13       {txt}Prob > F = {res}0.0000

{com}. clear

. exit
{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 4 May 2012, 15:52:16
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(107021 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. 
. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(18118 real changes made)

{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(186422 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(20709 real changes made)

{com}. replace trend=2 if year==2001
{txt}(20808 real changes made)

{com}. replace trend=3 if year==2002
{txt}(19566 real changes made)

{com}. replace trend=4 if year==2003
{txt}(18318 real changes made)

{com}. replace trend=5 if year==2004
{txt}(26601 real changes made)

{com}. replace trend=6 if year==2005
{txt}(26666 real changes made)

{com}. replace trend=7 if year==2006
{txt}(26190 real changes made)

{com}. replace trend=8 if year==2007
{txt}(27564 real changes made)

{com}. 
. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(18 missing values generated)

{com}. *Correct for negative and 0 FFI in order to take log
. gen ffi_tmp = familyfarmincome
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<=0 
{txt}(24638 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(207193 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}(1 missing value generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(24 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. asfjkal;
{err}unrecognized command:  asfjkal
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. xtreg osrape_prop energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity trend, fe

{txt}Fixed-effects (within) regression               Number of obs      = {res}   207150
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    66483

{txt}R-sq:  within  = {res}0.0022                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0099                                        {txt}avg = {res}      3.1
{txt}       overall = {res}0.0141                                        {txt}max = {res}        9

                                                {txt}F({res}10{txt},{res}140657{txt})       = {res}    30.92
{txt}corr(u_i, Xb)  = {res}-0.2210                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2} .0018237{col 26}{space 2} .0006899{col 37}{space 1}    2.64{col 46}{space 3}0.008{col 54}{space 4} .0004714{col 67}{space 3}  .003176
{txt}farmsrepre~d {c |}{col 14}{res}{space 2} 1.91e-06{col 26}{space 2} 2.99e-06{col 37}{space 1}    0.64{col 46}{space 3}0.522{col 54}{space 4}-3.94e-06{col 67}{space 3} 7.77e-06
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0031583{col 26}{space 2} .0003998{col 37}{space 1}   -7.90{col 46}{space 3}0.000{col 54}{space 4} -.003942{col 67}{space 3}-.0023747
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0003202{col 26}{space 2} .0000224{col 37}{space 1}  -14.29{col 46}{space 3}0.000{col 54}{space 4}-.0003641{col 67}{space 3}-.0002763
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .0031929{col 26}{space 2}  .000785{col 37}{space 1}    4.07{col 46}{space 3}0.000{col 54}{space 4} .0016544{col 67}{space 3} .0047314
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2} .0000162{col 26}{space 2} .0000718{col 37}{space 1}    0.23{col 46}{space 3}0.821{col 54}{space 4}-.0001244{col 67}{space 3} .0001569
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} 3.79e-09{col 26}{space 2} 7.89e-07{col 37}{space 1}    0.00{col 46}{space 3}0.996{col 54}{space 4}-1.54e-06{col 67}{space 3} 1.55e-06
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0031075{col 26}{space 2}  .000879{col 37}{space 1}    3.54{col 46}{space 3}0.000{col 54}{space 4} .0013847{col 67}{space 3} .0048303
{txt}{space 3}intensity {c |}{col 14}{res}{space 2} -.002196{col 26}{space 2} .0055089{col 37}{space 1}   -0.40{col 46}{space 3}0.690{col 54}{space 4}-.0129933{col 67}{space 3} .0086013
{txt}{space 7}trend {c |}{col 14}{res}{space 2}-.0002253{col 26}{space 2} .0001401{col 37}{space 1}   -1.61{col 46}{space 3}0.108{col 54}{space 4}-.0004999{col 67}{space 3} .0000493
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0654573{col 26}{space 2} .0066113{col 37}{space 1}    9.90{col 46}{space 3}0.000{col 54}{space 4} .0524993{col 67}{space 3} .0784154
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .11405199
{txt}     sigma_e {c |} {res} .06642151
{txt}         rho {c |} {res} .74673361{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}66482{txt}, {res}140657{txt}) = {res}    7.49       {txt}Prob > F = {res}0.0000

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 4 May 2012, 15:57:12
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(107021 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. 
. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(18118 real changes made)

{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(186422 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(20709 real changes made)

{com}. replace trend=2 if year==2001
{txt}(20808 real changes made)

{com}. replace trend=3 if year==2002
{txt}(19566 real changes made)

{com}. replace trend=4 if year==2003
{txt}(18318 real changes made)

{com}. replace trend=5 if year==2004
{txt}(26601 real changes made)

{com}. replace trend=6 if year==2005
{txt}(26666 real changes made)

{com}. replace trend=7 if year==2006
{txt}(26190 real changes made)

{com}. replace trend=8 if year==2007
{txt}(27564 real changes made)

{com}. 
. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(18 missing values generated)

{com}. *Correct for negative and 0 FFI in order to take log
. gen ffi_tmp = familyfarmincome
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<=0 
{txt}(24638 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(207193 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}(1 missing value generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(24 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. asfjkal;
{err}unrecognized command:  asfjkal
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. codebook intensity

{txt}{hline}
{res}intensity{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric ({res}float{txt})

{col 18}range:  [{res}-.00770674{txt},{res}.93695426{txt}]{col 55}units:  {res}1.000e-13
{col 10}{txt}unique values:  {res}202390{col 51}{txt}missing .:  {res}0{txt}/{res}207193

{txt}{col 19}mean:{res}{col 26} .165785
{txt}{col 15}std. dev:{res}{col 26} .100329

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27} .045207{col 37} .089796{col 47} .154293{col 57} .226723{col 67} .300949

{com}. xtreg osrape_prop energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity, fe

{txt}Fixed-effects (within) regression               Number of obs      = {res}   207150
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    66483

{txt}R-sq:  within  = {res}0.0023                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0156                                        {txt}avg = {res}      3.1
{txt}       overall = {res}0.0207                                        {txt}max = {res}        9

                                                {txt}F({res}9{txt},{res}140658{txt})        = {res}    35.52
{txt}corr(u_i, Xb)  = {res}-0.2492                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2} .0009855{col 26}{space 2}  .000446{col 37}{space 1}    2.21{col 46}{space 3}0.027{col 54}{space 4} .0001113{col 67}{space 3} .0018598
{txt}farmsrepre~d {c |}{col 14}{res}{space 2} 1.78e-06{col 26}{space 2} 2.99e-06{col 37}{space 1}    0.60{col 46}{space 3}0.550{col 54}{space 4}-4.07e-06{col 67}{space 3} 7.64e-06
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0031224{col 26}{space 2} .0003996{col 37}{space 1}   -7.81{col 46}{space 3}0.000{col 54}{space 4}-.0039055{col 67}{space 3}-.0023392
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0003212{col 26}{space 2} .0000224{col 37}{space 1}  -14.33{col 46}{space 3}0.000{col 54}{space 4}-.0003651{col 67}{space 3}-.0002773
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .0031875{col 26}{space 2} .0007808{col 37}{space 1}    4.08{col 46}{space 3}0.000{col 54}{space 4}  .001657{col 67}{space 3} .0047179
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2} .0000234{col 26}{space 2} .0000717{col 37}{space 1}    0.33{col 46}{space 3}0.745{col 54}{space 4}-.0001172{col 67}{space 3} .0001639
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} 2.83e-08{col 26}{space 2} 7.89e-07{col 37}{space 1}    0.04{col 46}{space 3}0.971{col 54}{space 4}-1.52e-06{col 67}{space 3} 1.58e-06
{txt}{space 2}specialise {c |}{col 14}{res}{space 2}  .003252{col 26}{space 2} .0008798{col 37}{space 1}    3.70{col 46}{space 3}0.000{col 54}{space 4} .0015277{col 67}{space 3} .0049763
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0142903{col 26}{space 2} .0039367{col 37}{space 1}   -3.63{col 46}{space 3}0.000{col 54}{space 4}-.0220062{col 67}{space 3}-.0065743
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0667855{col 26}{space 2} .0065796{col 37}{space 1}   10.15{col 46}{space 3}0.000{col 54}{space 4} .0538897{col 67}{space 3} .0796814
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .11438417
{txt}     sigma_e {c |} {res} .06641882
{txt}         rho {c |} {res}  .7478474{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}66482{txt}, {res}140658{txt}) = {res}    7.11       {txt}Prob > F = {res}0.0000

{com}. 
. xtreg osrape_prop energydum sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity, fe

{txt}Fixed-effects (within) regression               Number of obs      = {res}   207150
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    66483

{txt}R-sq:  within  = {res}0.0023                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0158                                        {txt}avg = {res}      3.1
{txt}       overall = {res}0.0209                                        {txt}max = {res}        9

                                                {txt}F({res}8{txt},{res}140659{txt})        = {res}    39.91
{txt}corr(u_i, Xb)  = {res}-0.2502                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2} .0009912{col 26}{space 2} .0004459{col 37}{space 1}    2.22{col 46}{space 3}0.026{col 54}{space 4} .0001172{col 67}{space 3} .0018652
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0031802{col 26}{space 2} .0003877{col 37}{space 1}   -8.20{col 46}{space 3}0.000{col 54}{space 4}  -.00394{col 67}{space 3}-.0024204
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0003211{col 26}{space 2} .0000224{col 37}{space 1}  -14.33{col 46}{space 3}0.000{col 54}{space 4}-.0003651{col 67}{space 3}-.0002772
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .0031846{col 26}{space 2} .0007808{col 37}{space 1}    4.08{col 46}{space 3}0.000{col 54}{space 4} .0016542{col 67}{space 3} .0047151
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}  .000023{col 26}{space 2} .0000717{col 37}{space 1}    0.32{col 46}{space 3}0.748{col 54}{space 4}-.0001175{col 67}{space 3} .0001636
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} 2.95e-08{col 26}{space 2} 7.89e-07{col 37}{space 1}    0.04{col 46}{space 3}0.970{col 54}{space 4}-1.52e-06{col 67}{space 3} 1.58e-06
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0032521{col 26}{space 2} .0008798{col 37}{space 1}    3.70{col 46}{space 3}0.000{col 54}{space 4} .0015278{col 67}{space 3} .0049764
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0143033{col 26}{space 2} .0039367{col 37}{space 1}   -3.63{col 46}{space 3}0.000{col 54}{space 4}-.0220191{col 67}{space 3}-.0065875
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0673068{col 26}{space 2} .0065215{col 37}{space 1}   10.32{col 46}{space 3}0.000{col 54}{space 4} .0545249{col 67}{space 3} .0800888
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .11439531
{txt}     sigma_e {c |} {res} .06641867
{txt}         rho {c |} {res} .74788498{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}66482{txt}, {res}140659{txt}) = {res}    7.11       {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop energydum sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity i.year, fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}   207150
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    66483

{txt}R-sq:  within  = {res}0.0125                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0145                                        {txt}avg = {res}      3.1
{txt}       overall = {res}0.0107                                        {txt}max = {res}        9

                                                {txt}F({res}15{txt},{res}140652{txt})       = {res}   118.84
{txt}corr(u_i, Xb)  = {res}-0.2216                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}-.0042031{col 26}{space 2} .0008321{col 37}{space 1}   -5.05{col 46}{space 3}0.000{col 54}{space 4}-.0058341{col 67}{space 3}-.0025721
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} -.003107{col 26}{space 2} .0003862{col 37}{space 1}   -8.05{col 46}{space 3}0.000{col 54}{space 4}-.0038638{col 67}{space 3}-.0023501
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0002989{col 26}{space 2} .0000223{col 37}{space 1}  -13.39{col 46}{space 3}0.000{col 54}{space 4}-.0003427{col 67}{space 3}-.0002552
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .0009904{col 26}{space 2} .0007847{col 37}{space 1}    1.26{col 46}{space 3}0.207{col 54}{space 4}-.0005476{col 67}{space 3} .0025285
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0001718{col 26}{space 2}  .000072{col 37}{space 1}   -2.39{col 46}{space 3}0.017{col 54}{space 4}-.0003129{col 67}{space 3}-.0000308
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} 1.26e-07{col 26}{space 2} 7.85e-07{col 37}{space 1}    0.16{col 46}{space 3}0.873{col 54}{space 4}-1.41e-06{col 67}{space 3} 1.66e-06
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0022282{col 26}{space 2} .0008777{col 37}{space 1}    2.54{col 46}{space 3}0.011{col 54}{space 4} .0005078{col 67}{space 3} .0039485
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0142892{col 26}{space 2} .0039178{col 37}{space 1}   -3.65{col 46}{space 3}0.000{col 54}{space 4}-.0219681{col 67}{space 3}-.0066103
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0102937{col 26}{space 2} .0006992{col 37}{space 1}  -14.72{col 46}{space 3}0.000{col 54}{space 4}-.0116641{col 67}{space 3}-.0089233
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0107358{col 26}{space 2} .0007286{col 37}{space 1}  -14.73{col 46}{space 3}0.000{col 54}{space 4}-.0121638{col 67}{space 3}-.0093077
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0205441{col 26}{space 2} .0007656{col 37}{space 1}  -26.83{col 46}{space 3}0.000{col 54}{space 4}-.0220446{col 67}{space 3}-.0190436
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0165797{col 26}{space 2} .0008047{col 37}{space 1}  -20.60{col 46}{space 3}0.000{col 54}{space 4}-.0181569{col 67}{space 3}-.0150026
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0147095{col 26}{space 2} .0006728{col 37}{space 1}  -21.86{col 46}{space 3}0.000{col 54}{space 4}-.0160281{col 67}{space 3}-.0133909
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0113469{col 26}{space 2}  .000659{col 37}{space 1}  -17.22{col 46}{space 3}0.000{col 54}{space 4}-.0126385{col 67}{space 3}-.0100553
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}-.0016116{col 26}{space 2} .0006385{col 37}{space 1}   -2.52{col 46}{space 3}0.012{col 54}{space 4}-.0028631{col 67}{space 3}-.0003602
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .0985813{col 26}{space 2} .0066029{col 37}{space 1}   14.93{col 46}{space 3}0.000{col 54}{space 4} .0856396{col 67}{space 3} .1115229
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .11434619
{txt}     sigma_e {c |} {res} .06607824
{txt}         rho {c |} {res} .74965672{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}66482{txt}, {res}140652{txt}) = {res}    7.16       {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop energydum sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity i.year year#mscode, fe
{txt}note: 2007.year omitted because of collinearity
note: 1999b.year#5.mscode omitted because of collinearity
note: 1999b.year#6.mscode omitted because of collinearity
note: 2000.year#7.mscode omitted because of collinearity
note: 2000.year#18.mscode omitted because of collinearity
note: 2001.year#21.mscode omitted because of collinearity
note: 2002.year#24.mscode omitted because of collinearity
note: 2003.year#23.mscode omitted because of collinearity
note: 2004.year#3.mscode omitted because of collinearity
note: 2004.year#9.mscode omitted because of collinearity
note: 2004.year#20.mscode omitted because of collinearity
note: 2004.year#25.mscode omitted because of collinearity
note: 2004.year#26.mscode omitted because of collinearity
note: 2006.year#12.mscode omitted because of collinearity
note: 2006.year#15.mscode omitted because of collinearity
note: 2007.year#2.mscode omitted because of collinearity
note: 2007.year#4.mscode omitted because of collinearity
note: 2007.year#8.mscode omitted because of collinearity
note: 2007.year#10.mscode omitted because of collinearity
note: 2007.year#11.mscode omitted because of collinearity
note: 2007.year#13.mscode omitted because of collinearity
note: 2007.year#14.mscode omitted because of collinearity
note: 2007.year#16.mscode omitted because of collinearity
note: 2007.year#17.mscode omitted because of collinearity
note: 2007.year#19.mscode omitted because of collinearity
note: 2007.year#22.mscode omitted because of collinearity
note: 2007.year#27.mscode omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}   207150
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    66483

{txt}R-sq:  within  = {res}0.0293                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0129                                        {txt}avg = {res}      3.1
{txt}       overall = {res}0.0107                                        {txt}max = {res}        9

                                                {txt}F({res}157{txt},{res}140510{txt})      = {res}    27.06
{txt}corr(u_i, Xb)  = {res}-0.3419                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}-.0471082{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.113{col 67}{space 3} 3431.018
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0035822{col 26}{space 2} .0003886{col 37}{space 1}   -9.22{col 46}{space 3}0.000{col 54}{space 4}-.0043438{col 67}{space 3}-.0028206
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0003208{col 26}{space 2} .0000224{col 37}{space 1}  -14.30{col 46}{space 3}0.000{col 54}{space 4}-.0003647{col 67}{space 3}-.0002768
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .0006389{col 26}{space 2} .0007974{col 37}{space 1}    0.80{col 46}{space 3}0.423{col 54}{space 4} -.000924{col 67}{space 3} .0022017
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0001598{col 26}{space 2} .0000725{col 37}{space 1}   -2.20{col 46}{space 3}0.028{col 54}{space 4}-.0003019{col 67}{space 3}-.0000177
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} 4.16e-09{col 26}{space 2} 7.80e-07{col 37}{space 1}    0.01{col 46}{space 3}0.996{col 54}{space 4}-1.52e-06{col 67}{space 3} 1.53e-06
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0015264{col 26}{space 2} .0008726{col 37}{space 1}    1.75{col 46}{space 3}0.080{col 54}{space 4}-.0001839{col 67}{space 3} .0032368
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0176701{col 26}{space 2} .0039286{col 37}{space 1}   -4.50{col 46}{space 3}0.000{col 54}{space 4}  -.02537{col 67}{space 3}-.0099702
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0169572{col 26}{space 2} .0057323{col 37}{space 1}   -2.96{col 46}{space 3}0.003{col 54}{space 4}-.0281924{col 67}{space 3} -.005722
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0192815{col 26}{space 2} .0058882{col 37}{space 1}   -3.27{col 46}{space 3}0.001{col 54}{space 4}-.0308223{col 67}{space 3}-.0077407
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0193709{col 26}{space 2} .0059503{col 37}{space 1}   -3.26{col 46}{space 3}0.001{col 54}{space 4}-.0310334{col 67}{space 3}-.0077083
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0201598{col 26}{space 2} .0059688{col 37}{space 1}   -3.38{col 46}{space 3}0.001{col 54}{space 4}-.0318585{col 67}{space 3}-.0084611
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0069821{col 26}{space 2} .0061661{col 37}{space 1}   -1.13{col 46}{space 3}0.257{col 54}{space 4}-.0190675{col 67}{space 3} .0051033
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0053502{col 26}{space 2} .0060271{col 37}{space 1}   -0.89{col 46}{space 3}0.375{col 54}{space 4}-.0171632{col 67}{space 3} .0064629
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}-.0003731{col 26}{space 2} .0058744{col 37}{space 1}   -0.06{col 46}{space 3}0.949{col 54}{space 4}-.0118867{col 67}{space 3} .0111406
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 1}year#mscode {c |}
{space 4}1999  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999  3  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999  4  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999  5  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  6  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  7  {c |}{col 14}{res}{space 2}-.0110243{col 26}{space 2} .0060746{col 37}{space 1}   -1.81{col 46}{space 3}0.070{col 54}{space 4}-.0229304{col 67}{space 3} .0008818
{txt}{space 4}1999  8  {c |}{col 14}{res}{space 2}-.0280111{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.093{col 67}{space 3} 3431.037
{txt}{space 4}1999  9  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 10  {c |}{col 14}{res}{space 2} -.041133{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.107{col 67}{space 3} 3431.024
{txt}{space 4}1999 11  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 12  {c |}{col 14}{res}{space 2}-.0430949{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.109{col 67}{space 3} 3431.022
{txt}{space 4}1999 13  {c |}{col 14}{res}{space 2}-.0134104{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.079{col 67}{space 3} 3431.052
{txt}{space 4}1999 14  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 15  {c |}{col 14}{res}{space 2}-.0518845{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.117{col 67}{space 3} 3431.014
{txt}{space 4}1999 16  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 17  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 18  {c |}{col 14}{res}{space 2}  -.01742{col 26}{space 2} .0080037{col 37}{space 1}   -2.18{col 46}{space 3}0.030{col 54}{space 4}-.0331072{col 67}{space 3}-.0017328
{txt}{space 4}1999 19  {c |}{col 14}{res}{space 2}-.0337349{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.099{col 67}{space 3} 3431.032
{txt}{space 4}1999 20  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 21  {c |}{col 14}{res}{space 2}-.0191026{col 26}{space 2} .0079724{col 37}{space 1}   -2.40{col 46}{space 3}0.017{col 54}{space 4}-.0347283{col 67}{space 3}-.0034769
{txt}{space 4}1999 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 23  {c |}{col 14}{res}{space 2}-.0228725{col 26}{space 2}  .008318{col 37}{space 1}   -2.75{col 46}{space 3}0.006{col 54}{space 4}-.0391755{col 67}{space 3}-.0065695
{txt}{space 4}1999 24  {c |}{col 14}{res}{space 2}-.0150292{col 26}{space 2} .0078161{col 37}{space 1}   -1.92{col 46}{space 3}0.055{col 54}{space 4}-.0303486{col 67}{space 3} .0002903
{txt}{space 4}1999 25  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 26  {c |}{col 14}{res}  (empty)  
{txt}{space 4}1999 27  {c |}{col 14}{res}{space 2}-.0257584{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.091{col 67}{space 3}  3431.04
{txt}{space 4}2000  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000  3  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000  4  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000  5  {c |}{col 14}{res}{space 2}-.0102862{col 26}{space 2} .0070049{col 37}{space 1}   -1.47{col 46}{space 3}0.142{col 54}{space 4}-.0240157{col 67}{space 3} .0034432
{txt}{space 4}2000  6  {c |}{col 14}{res}{space 2} .0017437{col 26}{space 2} .0060335{col 37}{space 1}    0.29{col 46}{space 3}0.773{col 54}{space 4}-.0100818{col 67}{space 3} .0135691
{txt}{space 4}2000  7  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2000  8  {c |}{col 14}{res}{space 2}-.0236984{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.089{col 67}{space 3} 3431.042
{txt}{space 4}2000  9  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 10  {c |}{col 14}{res}{space 2} -.038439{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.104{col 67}{space 3} 3431.027
{txt}{space 4}2000 11  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 12  {c |}{col 14}{res}{space 2}-.0305332{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.096{col 67}{space 3} 3431.035
{txt}{space 4}2000 13  {c |}{col 14}{res}{space 2} .0042706{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.061{col 67}{space 3}  3431.07
{txt}{space 4}2000 14  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 15  {c |}{col 14}{res}{space 2}-.0559293{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.121{col 67}{space 3} 3431.009
{txt}{space 4}2000 16  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 17  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 18  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2000 19  {c |}{col 14}{res}{space 2}-.0344441{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}  -3431.1{col 67}{space 3} 3431.031
{txt}{space 4}2000 20  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 21  {c |}{col 14}{res}{space 2} .0028881{col 26}{space 2} .0077446{col 37}{space 1}    0.37{col 46}{space 3}0.709{col 54}{space 4}-.0122912{col 67}{space 3} .0180674
{txt}{space 4}2000 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 23  {c |}{col 14}{res}{space 2}-.0078325{col 26}{space 2}   .00817{col 37}{space 1}   -0.96{col 46}{space 3}0.338{col 54}{space 4}-.0238455{col 67}{space 3} .0081805
{txt}{space 4}2000 24  {c |}{col 14}{res}{space 2}-.0148523{col 26}{space 2} .0076211{col 37}{space 1}   -1.95{col 46}{space 3}0.051{col 54}{space 4}-.0297895{col 67}{space 3}  .000085
{txt}{space 4}2000 25  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 26  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2000 27  {c |}{col 14}{res}{space 2}-.0451546{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.111{col 67}{space 3}  3431.02
{txt}{space 4}2001  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001  3  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001  4  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001  5  {c |}{col 14}{res}{space 2}-.0176092{col 26}{space 2} .0072063{col 37}{space 1}   -2.44{col 46}{space 3}0.015{col 54}{space 4}-.0317335{col 67}{space 3}-.0034849
{txt}{space 4}2001  6  {c |}{col 14}{res}{space 2} .0036171{col 26}{space 2} .0061961{col 37}{space 1}    0.58{col 46}{space 3}0.559{col 54}{space 4}-.0085271{col 67}{space 3} .0157613
{txt}{space 4}2001  7  {c |}{col 14}{res}{space 2}-.0008552{col 26}{space 2} .0061114{col 37}{space 1}   -0.14{col 46}{space 3}0.889{col 54}{space 4}-.0128334{col 67}{space 3} .0111231
{txt}{space 4}2001  8  {c |}{col 14}{res}{space 2}-.0167663{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.082{col 67}{space 3} 3431.049
{txt}{space 4}2001  9  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 10  {c |}{col 14}{res}{space 2}-.0425852{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.108{col 67}{space 3} 3431.023
{txt}{space 4}2001 11  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 12  {c |}{col 14}{res}{space 2}-.0381255{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.104{col 67}{space 3} 3431.027
{txt}{space 4}2001 13  {c |}{col 14}{res}{space 2} .0084826{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.057{col 67}{space 3} 3431.074
{txt}{space 4}2001 14  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 15  {c |}{col 14}{res}{space 2}-.0457439{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.111{col 67}{space 3}  3431.02
{txt}{space 4}2001 16  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 17  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 18  {c |}{col 14}{res}{space 2} .0001387{col 26}{space 2} .0087868{col 37}{space 1}    0.02{col 46}{space 3}0.987{col 54}{space 4}-.0170833{col 67}{space 3} .0173606
{txt}{space 4}2001 19  {c |}{col 14}{res}{space 2}-.0282625{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.094{col 67}{space 3} 3431.037
{txt}{space 4}2001 20  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 21  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2001 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 23  {c |}{col 14}{res}{space 2}-.0065374{col 26}{space 2} .0081735{col 37}{space 1}   -0.80{col 46}{space 3}0.424{col 54}{space 4}-.0225573{col 67}{space 3} .0094826
{txt}{space 4}2001 24  {c |}{col 14}{res}{space 2}-.0121369{col 26}{space 2} .0075553{col 37}{space 1}   -1.61{col 46}{space 3}0.108{col 54}{space 4}-.0269452{col 67}{space 3} .0026714
{txt}{space 4}2001 25  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 26  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2001 27  {c |}{col 14}{res}{space 2}-.0429764{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.108{col 67}{space 3} 3431.022
{txt}{space 4}2002  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002  3  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002  4  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002  5  {c |}{col 14}{res}{space 2}-.0188488{col 26}{space 2}  .007332{col 37}{space 1}   -2.57{col 46}{space 3}0.010{col 54}{space 4}-.0332195{col 67}{space 3}-.0044782
{txt}{space 4}2002  6  {c |}{col 14}{res}{space 2}  .014479{col 26}{space 2} .0062862{col 37}{space 1}    2.30{col 46}{space 3}0.021{col 54}{space 4} .0021581{col 67}{space 3} .0267999
{txt}{space 4}2002  7  {c |}{col 14}{res}{space 2}-.0004936{col 26}{space 2} .0062173{col 37}{space 1}   -0.08{col 46}{space 3}0.937{col 54}{space 4}-.0126794{col 67}{space 3} .0116922
{txt}{space 4}2002  8  {c |}{col 14}{res}{space 2}-.0311832{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.097{col 67}{space 3} 3431.034
{txt}{space 4}2002  9  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 10  {c |}{col 14}{res}{space 2}-.0580568{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.123{col 67}{space 3} 3431.007
{txt}{space 4}2002 11  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 12  {c |}{col 14}{res}{space 2}-.0339939{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.099{col 67}{space 3} 3431.031
{txt}{space 4}2002 13  {c |}{col 14}{res}{space 2}  -.01802{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.083{col 67}{space 3} 3431.047
{txt}{space 4}2002 14  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 15  {c |}{col 14}{res}{space 2}-.0493321{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.115{col 67}{space 3} 3431.016
{txt}{space 4}2002 16  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 17  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 18  {c |}{col 14}{res}{space 2} .0000304{col 26}{space 2} .0088271{col 37}{space 1}    0.00{col 46}{space 3}0.997{col 54}{space 4}-.0172705{col 67}{space 3} .0173313
{txt}{space 4}2002 19  {c |}{col 14}{res}{space 2}-.0280527{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.093{col 67}{space 3} 3431.037
{txt}{space 4}2002 20  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 21  {c |}{col 14}{res}{space 2}-.0043555{col 26}{space 2} .0079766{col 37}{space 1}   -0.55{col 46}{space 3}0.585{col 54}{space 4}-.0199895{col 67}{space 3} .0112785
{txt}{space 4}2002 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 23  {c |}{col 14}{res}{space 2}-.0095823{col 26}{space 2} .0078534{col 37}{space 1}   -1.22{col 46}{space 3}0.222{col 54}{space 4}-.0249747{col 67}{space 3} .0058102
{txt}{space 4}2002 24  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2002 25  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 26  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2002 27  {c |}{col 14}{res}{space 2}-.0515484{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.117{col 67}{space 3} 3431.014
{txt}{space 4}2003  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003  3  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003  4  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003  5  {c |}{col 14}{res}{space 2}-.0084029{col 26}{space 2} .0074107{col 37}{space 1}   -1.13{col 46}{space 3}0.257{col 54}{space 4}-.0229277{col 67}{space 3} .0061219
{txt}{space 4}2003  6  {c |}{col 14}{res}{space 2} .0141767{col 26}{space 2} .0063067{col 37}{space 1}    2.25{col 46}{space 3}0.025{col 54}{space 4} .0018158{col 67}{space 3} .0265376
{txt}{space 4}2003  7  {c |}{col 14}{res}{space 2}-.0048071{col 26}{space 2} .0062666{col 37}{space 1}   -0.77{col 46}{space 3}0.443{col 54}{space 4}-.0170895{col 67}{space 3} .0074753
{txt}{space 4}2003  8  {c |}{col 14}{res}{space 2}-.0328993{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.098{col 67}{space 3} 3431.033
{txt}{space 4}2003  9  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 10  {c |}{col 14}{res}{space 2}-.0487451{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.114{col 67}{space 3} 3431.017
{txt}{space 4}2003 11  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 12  {c |}{col 14}{res}{space 2}-.0317407{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.097{col 67}{space 3} 3431.034
{txt}{space 4}2003 13  {c |}{col 14}{res}{space 2}-.0221254{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.088{col 67}{space 3} 3431.043
{txt}{space 4}2003 14  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 15  {c |}{col 14}{res}{space 2}-.0491843{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.115{col 67}{space 3} 3431.016
{txt}{space 4}2003 16  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 17  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 18  {c |}{col 14}{res}{space 2} .0011107{col 26}{space 2} .0088847{col 37}{space 1}    0.13{col 46}{space 3}0.901{col 54}{space 4}-.0163031{col 67}{space 3} .0185245
{txt}{space 4}2003 19  {c |}{col 14}{res}{space 2} -.031717{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.097{col 67}{space 3} 3431.034
{txt}{space 4}2003 20  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 21  {c |}{col 14}{res}{space 2}-.0062774{col 26}{space 2}  .008388{col 37}{space 1}   -0.75{col 46}{space 3}0.454{col 54}{space 4}-.0227177{col 67}{space 3} .0101629
{txt}{space 4}2003 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 23  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2003 24  {c |}{col 14}{res}{space 2}-.0030397{col 26}{space 2}  .007522{col 37}{space 1}   -0.40{col 46}{space 3}0.686{col 54}{space 4}-.0177827{col 67}{space 3} .0117033
{txt}{space 4}2003 25  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 26  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2003 27  {c |}{col 14}{res}{space 2} -.029723{col 26}{space 2} 1750.561{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.095{col 67}{space 3} 3431.036
{txt}{space 4}2004  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2004  3  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004  4  {c |}{col 14}{res}{space 2}-.0162234{col 26}{space 2} .0073122{col 37}{space 1}   -2.22{col 46}{space 3}0.027{col 54}{space 4}-.0305553{col 67}{space 3}-.0018916
{txt}{space 4}2004  5  {c |}{col 14}{res}{space 2} .0373932{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.028{col 67}{space 3} 3431.103
{txt}{space 4}2004  6  {c |}{col 14}{res}{space 2} .0519656{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.013{col 67}{space 3} 3431.117
{txt}{space 4}2004  7  {c |}{col 14}{res}{space 2} .0278744{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.038{col 67}{space 3} 3431.093
{txt}{space 4}2004  8  {c |}{col 14}{res}{space 2} .0027196{col 26}{space 2} .0065309{col 37}{space 1}    0.42{col 46}{space 3}0.677{col 54}{space 4}-.0100809{col 67}{space 3} .0155201
{txt}{space 4}2004  9  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004 10  {c |}{col 14}{res}{space 2}-.0174042{col 26}{space 2} .0064661{col 37}{space 1}   -2.69{col 46}{space 3}0.007{col 54}{space 4}-.0300777{col 67}{space 3}-.0047307
{txt}{space 4}2004 11  {c |}{col 14}{res}{space 2}-.0321595{col 26}{space 2} .0068217{col 37}{space 1}   -4.71{col 46}{space 3}0.000{col 54}{space 4}  -.04553{col 67}{space 3} -.018789
{txt}{space 4}2004 12  {c |}{col 14}{res}{space 2}-.0009982{col 26}{space 2} .0110917{col 37}{space 1}   -0.09{col 46}{space 3}0.928{col 54}{space 4}-.0227378{col 67}{space 3} .0207414
{txt}{space 4}2004 13  {c |}{col 14}{res}{space 2} .0062798{col 26}{space 2} .0064145{col 37}{space 1}    0.98{col 46}{space 3}0.328{col 54}{space 4}-.0062925{col 67}{space 3} .0188521
{txt}{space 4}2004 14  {c |}{col 14}{res}{space 2}-.0408259{col 26}{space 2} .0078232{col 37}{space 1}   -5.22{col 46}{space 3}0.000{col 54}{space 4}-.0561592{col 67}{space 3}-.0254926
{txt}{space 4}2004 15  {c |}{col 14}{res}{space 2} .0037371{col 26}{space 2} .0139149{col 37}{space 1}    0.27{col 46}{space 3}0.788{col 54}{space 4}-.0235359{col 67}{space 3} .0310101
{txt}{space 4}2004 16  {c |}{col 14}{res}{space 2}-.0198867{col 26}{space 2} .0088129{col 37}{space 1}   -2.26{col 46}{space 3}0.024{col 54}{space 4}-.0371599{col 67}{space 3}-.0026136
{txt}{space 4}2004 17  {c |}{col 14}{res}{space 2}  .008972{col 26}{space 2} .0390006{col 37}{space 1}    0.23{col 46}{space 3}0.818{col 54}{space 4}-.0674685{col 67}{space 3} .0854126
{txt}{space 4}2004 18  {c |}{col 14}{res}{space 2}  .035187{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4} -3431.03{col 67}{space 3} 3431.101
{txt}{space 4}2004 19  {c |}{col 14}{res}{space 2} .0023716{col 26}{space 2} .0075331{col 37}{space 1}    0.31{col 46}{space 3}0.753{col 54}{space 4}-.0123932{col 67}{space 3} .0171363
{txt}{space 4}2004 20  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004 21  {c |}{col 14}{res}{space 2} .0250859{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4} -3431.04{col 67}{space 3} 3431.091
{txt}{space 4}2004 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2004 23  {c |}{col 14}{res}{space 2} .0416291{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.024{col 67}{space 3} 3431.107
{txt}{space 4}2004 24  {c |}{col 14}{res}{space 2} .0467685{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.019{col 67}{space 3} 3431.112
{txt}{space 4}2004 25  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004 26  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2004 27  {c |}{col 14}{res}{space 2} .0012069{col 26}{space 2} .0071553{col 37}{space 1}    0.17{col 46}{space 3}0.866{col 54}{space 4}-.0128173{col 67}{space 3} .0152312
{txt}{space 4}2005  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2005  3  {c |}{col 14}{res}{space 2}-.0172574{col 26}{space 2} .0147204{col 37}{space 1}   -1.17{col 46}{space 3}0.241{col 54}{space 4} -.046109{col 67}{space 3} .0115943
{txt}{space 4}2005  4  {c |}{col 14}{res}{space 2}-.0162528{col 26}{space 2} .0070791{col 37}{space 1}   -2.30{col 46}{space 3}0.022{col 54}{space 4}-.0301277{col 67}{space 3}-.0023779
{txt}{space 4}2005  5  {c |}{col 14}{res}{space 2} .0264816{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.039{col 67}{space 3} 3431.092
{txt}{space 4}2005  6  {c |}{col 14}{res}{space 2} .0512569{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.014{col 67}{space 3} 3431.117
{txt}{space 4}2005  7  {c |}{col 14}{res}{space 2} .0262115{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.039{col 67}{space 3} 3431.092
{txt}{space 4}2005  8  {c |}{col 14}{res}{space 2}-.0038257{col 26}{space 2} .0063846{col 37}{space 1}   -0.60{col 46}{space 3}0.549{col 54}{space 4}-.0163395{col 67}{space 3} .0086881
{txt}{space 4}2005  9  {c |}{col 14}{res}{space 2}-.0096774{col 26}{space 2} .0083558{col 37}{space 1}   -1.16{col 46}{space 3}0.247{col 54}{space 4}-.0260545{col 67}{space 3} .0066997
{txt}{space 4}2005 10  {c |}{col 14}{res}{space 2} -.010618{col 26}{space 2} .0063262{col 37}{space 1}   -1.68{col 46}{space 3}0.093{col 54}{space 4}-.0230173{col 67}{space 3} .0017813
{txt}{space 4}2005 11  {c |}{col 14}{res}{space 2}-.0016333{col 26}{space 2} .0066865{col 37}{space 1}   -0.24{col 46}{space 3}0.807{col 54}{space 4}-.0147388{col 67}{space 3} .0114722
{txt}{space 4}2005 12  {c |}{col 14}{res}{space 2} .0059189{col 26}{space 2} .0112109{col 37}{space 1}    0.53{col 46}{space 3}0.598{col 54}{space 4}-.0160543{col 67}{space 3} .0278921
{txt}{space 4}2005 13  {c |}{col 14}{res}{space 2} .0122477{col 26}{space 2}  .006258{col 37}{space 1}    1.96{col 46}{space 3}0.050{col 54}{space 4}-.0000178{col 67}{space 3} .0245133
{txt}{space 4}2005 14  {c |}{col 14}{res}{space 2}-.0457418{col 26}{space 2} .0074051{col 37}{space 1}   -6.18{col 46}{space 3}0.000{col 54}{space 4}-.0602557{col 67}{space 3}-.0312279
{txt}{space 4}2005 15  {c |}{col 14}{res}{space 2}-.0101126{col 26}{space 2} .0145715{col 37}{space 1}   -0.69{col 46}{space 3}0.488{col 54}{space 4}-.0386725{col 67}{space 3} .0184473
{txt}{space 4}2005 16  {c |}{col 14}{res}{space 2}-.0069771{col 26}{space 2} .0086181{col 37}{space 1}   -0.81{col 46}{space 3}0.418{col 54}{space 4}-.0238684{col 67}{space 3} .0099143
{txt}{space 4}2005 17  {c |}{col 14}{res}{space 2} .0075841{col 26}{space 2}  .038706{col 37}{space 1}    0.20{col 46}{space 3}0.845{col 54}{space 4}-.0682789{col 67}{space 3}  .083447
{txt}{space 4}2005 18  {c |}{col 14}{res}{space 2} .0341422{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.031{col 67}{space 3}   3431.1
{txt}{space 4}2005 19  {c |}{col 14}{res}{space 2} .0059834{col 26}{space 2} .0073627{col 37}{space 1}    0.81{col 46}{space 3}0.416{col 54}{space 4}-.0084473{col 67}{space 3} .0204141
{txt}{space 4}2005 20  {c |}{col 14}{res}{space 2}-.0046321{col 26}{space 2} .0060188{col 37}{space 1}   -0.77{col 46}{space 3}0.442{col 54}{space 4}-.0164289{col 67}{space 3} .0071647
{txt}{space 4}2005 21  {c |}{col 14}{res}{space 2} .0188764{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.047{col 67}{space 3} 3431.084
{txt}{space 4}2005 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2005 23  {c |}{col 14}{res}{space 2} .0411639{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.024{col 67}{space 3} 3431.107
{txt}{space 4}2005 24  {c |}{col 14}{res}{space 2} .0484058{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.017{col 67}{space 3} 3431.114
{txt}{space 4}2005 25  {c |}{col 14}{res}{space 2} .0168287{col 26}{space 2} .0075173{col 37}{space 1}    2.24{col 46}{space 3}0.025{col 54}{space 4} .0020948{col 67}{space 3} .0315625
{txt}{space 4}2005 26  {c |}{col 14}{res}{space 2}-.0047659{col 26}{space 2} .0133885{col 37}{space 1}   -0.36{col 46}{space 3}0.722{col 54}{space 4}-.0310071{col 67}{space 3} .0214754
{txt}{space 4}2005 27  {c |}{col 14}{res}{space 2} .0097919{col 26}{space 2} .0069919{col 37}{space 1}    1.40{col 46}{space 3}0.161{col 54}{space 4}-.0039121{col 67}{space 3}  .023496
{txt}{space 4}2006  2  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2006  3  {c |}{col 14}{res}{space 2}  -.02115{col 26}{space 2}  .015009{col 37}{space 1}   -1.41{col 46}{space 3}0.159{col 54}{space 4}-.0505674{col 67}{space 3} .0082674
{txt}{space 4}2006  4  {c |}{col 14}{res}{space 2}-.0064316{col 26}{space 2} .0068495{col 37}{space 1}   -0.94{col 46}{space 3}0.348{col 54}{space 4}-.0198565{col 67}{space 3} .0069933
{txt}{space 4}2006  5  {c |}{col 14}{res}{space 2} .0303224{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.035{col 67}{space 3} 3431.096
{txt}{space 4}2006  6  {c |}{col 14}{res}{space 2} .0642825{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.001{col 67}{space 3}  3431.13
{txt}{space 4}2006  7  {c |}{col 14}{res}{space 2} .0249919{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4} -3431.04{col 67}{space 3}  3431.09
{txt}{space 4}2006  8  {c |}{col 14}{res}{space 2}-.0109953{col 26}{space 2} .0062334{col 37}{space 1}   -1.76{col 46}{space 3}0.078{col 54}{space 4}-.0232127{col 67}{space 3} .0012221
{txt}{space 4}2006  9  {c |}{col 14}{res}{space 2} .0063458{col 26}{space 2} .0085774{col 37}{space 1}    0.74{col 46}{space 3}0.459{col 54}{space 4}-.0104658{col 67}{space 3} .0231573
{txt}{space 4}2006 10  {c |}{col 14}{res}{space 2} -.007024{col 26}{space 2} .0061726{col 37}{space 1}   -1.14{col 46}{space 3}0.255{col 54}{space 4}-.0191222{col 67}{space 3} .0050742
{txt}{space 4}2006 11  {c |}{col 14}{res}{space 2} .0078682{col 26}{space 2} .0065416{col 37}{space 1}    1.20{col 46}{space 3}0.229{col 54}{space 4}-.0049533{col 67}{space 3} .0206897
{txt}{space 4}2006 12  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2006 13  {c |}{col 14}{res}{space 2} .0109571{col 26}{space 2} .0061036{col 37}{space 1}    1.80{col 46}{space 3}0.073{col 54}{space 4}-.0010059{col 67}{space 3}   .02292
{txt}{space 4}2006 14  {c |}{col 14}{res}{space 2}-.0074515{col 26}{space 2} .0071599{col 37}{space 1}   -1.04{col 46}{space 3}0.298{col 54}{space 4}-.0214848{col 67}{space 3} .0065818
{txt}{space 4}2006 15  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2006 16  {c |}{col 14}{res}{space 2} .0002214{col 26}{space 2} .0083094{col 37}{space 1}    0.03{col 46}{space 3}0.979{col 54}{space 4}-.0160649{col 67}{space 3} .0165077
{txt}{space 4}2006 17  {c |}{col 14}{res}{space 2} .0006402{col 26}{space 2} .0394938{col 37}{space 1}    0.02{col 46}{space 3}0.987{col 54}{space 4}-.0767669{col 67}{space 3} .0780472
{txt}{space 4}2006 18  {c |}{col 14}{res}{space 2} .0292725{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.036{col 67}{space 3} 3431.095
{txt}{space 4}2006 19  {c |}{col 14}{res}{space 2}  .016631{col 26}{space 2} .0072038{col 37}{space 1}    2.31{col 46}{space 3}0.021{col 54}{space 4} .0025117{col 67}{space 3} .0307503
{txt}{space 4}2006 20  {c |}{col 14}{res}{space 2} .0056299{col 26}{space 2} .0061516{col 37}{space 1}    0.92{col 46}{space 3}0.360{col 54}{space 4}-.0064272{col 67}{space 3}  .017687
{txt}{space 4}2006 21  {c |}{col 14}{res}{space 2} .0120135{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.053{col 67}{space 3} 3431.077
{txt}{space 4}2006 22  {c |}{col 14}{res}  (empty)  
{txt}{space 4}2006 23  {c |}{col 14}{res}{space 2} .0524992{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.013{col 67}{space 3} 3431.118
{txt}{space 4}2006 24  {c |}{col 14}{res}{space 2} .0501617{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.015{col 67}{space 3} 3431.116
{txt}{space 4}2006 25  {c |}{col 14}{res}{space 2} .0489655{col 26}{space 2}  .008019{col 37}{space 1}    6.11{col 46}{space 3}0.000{col 54}{space 4} .0332484{col 67}{space 3} .0646825
{txt}{space 4}2006 26  {c |}{col 14}{res}{space 2} .0019326{col 26}{space 2} .0139808{col 37}{space 1}    0.14{col 46}{space 3}0.890{col 54}{space 4}-.0254696{col 67}{space 3} .0293347
{txt}{space 4}2006 27  {c |}{col 14}{res}{space 2}-.0000965{col 26}{space 2} .0068353{col 37}{space 1}   -0.01{col 46}{space 3}0.989{col 54}{space 4}-.0134936{col 67}{space 3} .0133006
{txt}{space 4}2007  2  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  3  {c |}{col 14}{res}{space 2}-.0241465{col 26}{space 2}  .015692{col 37}{space 1}   -1.54{col 46}{space 3}0.124{col 54}{space 4}-.0549024{col 67}{space 3} .0066095
{txt}{space 4}2007  4  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  5  {c |}{col 14}{res}{space 2} .1616813{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3430.904{col 67}{space 3} 3431.227
{txt}{space 4}2007  6  {c |}{col 14}{res}{space 2} .0460193{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.019{col 67}{space 3} 3431.111
{txt}{space 4}2007  7  {c |}{col 14}{res}{space 2} .0279177{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.037{col 67}{space 3} 3431.093
{txt}{space 4}2007  8  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  9  {c |}{col 14}{res}{space 2} .0360468{col 26}{space 2} .0087869{col 37}{space 1}    4.10{col 46}{space 3}0.000{col 54}{space 4} .0188247{col 67}{space 3} .0532688
{txt}{space 4}2007 10  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 11  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 12  {c |}{col 14}{res}{space 2} .0021457{col 26}{space 2}  .011179{col 37}{space 1}    0.19{col 46}{space 3}0.848{col 54}{space 4}-.0197649{col 67}{space 3} .0240564
{txt}{space 4}2007 13  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 14  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 15  {c |}{col 14}{res}{space 2} .0186613{col 26}{space 2} .0145201{col 37}{space 1}    1.29{col 46}{space 3}0.199{col 54}{space 4}-.0097979{col 67}{space 3} .0471205
{txt}{space 4}2007 16  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 17  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 18  {c |}{col 14}{res}{space 2}   .02988{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.036{col 67}{space 3} 3431.095
{txt}{space 4}2007 19  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 20  {c |}{col 14}{res}{space 2} .0251728{col 26}{space 2} .0063872{col 37}{space 1}    3.94{col 46}{space 3}0.000{col 54}{space 4} .0126541{col 67}{space 3} .0376916
{txt}{space 4}2007 21  {c |}{col 14}{res}{space 2}  .017216{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.048{col 67}{space 3} 3431.083
{txt}{space 4}2007 22  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 23  {c |}{col 14}{res}{space 2} .0352821{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4} -3431.03{col 67}{space 3} 3431.101
{txt}{space 4}2007 24  {c |}{col 14}{res}{space 2} .0499282{col 26}{space 2} 1750.561{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-3431.015{col 67}{space 3} 3431.115
{txt}{space 4}2007 25  {c |}{col 14}{res}{space 2} .0279644{col 26}{space 2} .0084808{col 37}{space 1}    3.30{col 46}{space 3}0.001{col 54}{space 4} .0113423{col 67}{space 3} .0445865
{txt}{space 4}2007 26  {c |}{col 14}{res}{space 2} .0256721{col 26}{space 2} .0140536{col 37}{space 1}    1.83{col 46}{space 3}0.068{col 54}{space 4}-.0018727{col 67}{space 3} .0532169
{txt}{space 4}2007 27  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .1292046{col 26}{space 2} 1198.883{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-2349.658{col 67}{space 3} 2349.916
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .11890935
{txt}     sigma_e {c |} {res} .06554581
{txt}         rho {c |} {res} .76695996{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}66482{txt}, {res}140510{txt}) = {res}    6.27       {txt}Prob > F = {res}0.0000

{com}. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 4 May 2012, 16:55:12
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 4 May 2012, 18:14:39
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(107021 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. 
. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(18118 real changes made)

{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(186422 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(20709 real changes made)

{com}. replace trend=2 if year==2001
{txt}(20808 real changes made)

{com}. replace trend=3 if year==2002
{txt}(19566 real changes made)

{com}. replace trend=4 if year==2003
{txt}(18318 real changes made)

{com}. replace trend=5 if year==2004
{txt}(26601 real changes made)

{com}. replace trend=6 if year==2005
{txt}(26666 real changes made)

{com}. replace trend=7 if year==2006
{txt}(26190 real changes made)

{com}. replace trend=8 if year==2007
{txt}(27564 real changes made)

{com}. 
. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(18 missing values generated)

{com}. *Correct for negative and 0 FFI in order to take log
. gen ffi_tmp = familyfarmincome
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<=0 
{txt}(24638 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(207193 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}(1 missing value generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(24 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. 
. 
. *xtreg osrape_prop energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity i.year, fe
. 
. *** Chow test
. gen edum_adop = energydum*adopter
{txt}
{com}. xtreg osrape_prop energydum edum_adop adopt farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity i.year
{txt}note: 2007.year omitted because of collinearity
{res}{err}{hline 2}Break{hline 2}
{txt}{search r(1):r(1);}

end of do-file
{err}{hline 2}Break{hline 2}
{txt}{search r(1):r(1);}

end of do-file

{err}{hline 2}Break{hline 2}
{txt}{search r(1):r(1);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 4 May 2012, 18:15:29
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(107021 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. 
. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(18118 real changes made)

{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(186422 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(20709 real changes made)

{com}. replace trend=2 if year==2001
{txt}(20808 real changes made)

{com}. replace trend=3 if year==2002
{txt}(19566 real changes made)

{com}. replace trend=4 if year==2003
{txt}(18318 real changes made)

{com}. replace trend=5 if year==2004
{txt}(26601 real changes made)

{com}. replace trend=6 if year==2005
{txt}(26666 real changes made)

{com}. replace trend=7 if year==2006
{txt}(26190 real changes made)

{com}. replace trend=8 if year==2007
{txt}(27564 real changes made)

{com}. 
. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(18 missing values generated)

{com}. *Correct for negative and 0 FFI in order to take log
. gen ffi_tmp = familyfarmincome
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<=0 
{txt}(24638 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(207193 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}(1 missing value generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(24 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. 
. 
. *xtreg osrape_prop energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity i.year, fe
. 
. *** Chow test
. gen edum_adop = energydum*adopter
{txt}
{com}. xtreg osrape_prop energydum edum_adop adopter farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity i.year
{txt}note: 2007.year omitted because of collinearity
{res}
{txt}Random-effects GLS regression                   Number of obs      = {res}   207150
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    66483

{txt}R-sq:  within  = {res}0.0053                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.1159                                        {txt}avg = {res}      3.1
{txt}       overall = {res}0.0977                                        {txt}max = {res}        9

{txt}Random effects u_i ~ {res}Gaussian                   {txt}Wald chi2({res}18{txt})      = {res}  8205.94
{txt}corr(u_i, X)       = {res}0{txt} (assumed)                Prob > chi2        =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}-.0005922{col 26}{space 2} .0007687{col 37}{space 1}   -0.77{col 46}{space 3}0.441{col 54}{space 4}-.0020988{col 67}{space 3} .0009143
{txt}{space 3}edum_adop {c |}{col 14}{res}{space 2} .0136913{col 26}{space 2} .0012018{col 37}{space 1}   11.39{col 46}{space 3}0.000{col 54}{space 4} .0113358{col 67}{space 3} .0160467
{txt}{space 5}adopter {c |}{col 14}{res}{space 2} .0674098{col 26}{space 2} .0019536{col 37}{space 1}   34.51{col 46}{space 3}0.000{col 54}{space 4} .0635808{col 67}{space 3} .0712388
{txt}farmsrepre~d {c |}{col 14}{res}{space 2} 8.94e-06{col 26}{space 2} 2.20e-06{col 37}{space 1}    4.06{col 46}{space 3}0.000{col 54}{space 4} 4.63e-06{col 67}{space 3} .0000133
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}  .005379{col 26}{space 2} .0002159{col 37}{space 1}   24.91{col 46}{space 3}0.000{col 54}{space 4} .0049558{col 67}{space 3} .0058022
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0000845{col 26}{space 2}  .000015{col 37}{space 1}   -5.62{col 46}{space 3}0.000{col 54}{space 4} -.000114{col 67}{space 3} -.000055
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .0085997{col 26}{space 2} .0004406{col 37}{space 1}   19.52{col 46}{space 3}0.000{col 54}{space 4} .0077362{col 67}{space 3} .0094632
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0006008{col 26}{space 2} .0000643{col 37}{space 1}   -9.34{col 46}{space 3}0.000{col 54}{space 4}-.0007269{col 67}{space 3}-.0004747
{txt}{space 4}solvency {c |}{col 14}{res}{space 2}-2.21e-07{col 26}{space 2} 7.22e-07{col 37}{space 1}   -0.31{col 46}{space 3}0.759{col 54}{space 4}-1.64e-06{col 67}{space 3} 1.19e-06
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0005955{col 26}{space 2} .0002172{col 37}{space 1}    2.74{col 46}{space 3}0.006{col 54}{space 4} .0001697{col 67}{space 3} .0010213
{txt}{space 3}intensity {c |}{col 14}{res}{space 2} .1230777{col 26}{space 2} .0029125{col 37}{space 1}   42.26{col 46}{space 3}0.000{col 54}{space 4} .1173694{col 67}{space 3} .1287861
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0093622{col 26}{space 2} .0006885{col 37}{space 1}  -13.60{col 46}{space 3}0.000{col 54}{space 4}-.0107117{col 67}{space 3}-.0080128
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0105336{col 26}{space 2} .0007093{col 37}{space 1}  -14.85{col 46}{space 3}0.000{col 54}{space 4}-.0119239{col 67}{space 3}-.0091434
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0195771{col 26}{space 2} .0007366{col 37}{space 1}  -26.58{col 46}{space 3}0.000{col 54}{space 4}-.0210209{col 67}{space 3}-.0181333
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}  -.01588{col 26}{space 2} .0007667{col 37}{space 1}  -20.71{col 46}{space 3}0.000{col 54}{space 4}-.0173827{col 67}{space 3}-.0143773
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0168316{col 26}{space 2} .0006432{col 37}{space 1}  -26.17{col 46}{space 3}0.000{col 54}{space 4}-.0180922{col 67}{space 3}-.0155711
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0133872{col 26}{space 2} .0006332{col 37}{space 1}  -21.14{col 46}{space 3}0.000{col 54}{space 4}-.0146283{col 67}{space 3}-.0121461
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}-.0040935{col 26}{space 2} .0006199{col 37}{space 1}   -6.60{col 46}{space 3}0.000{col 54}{space 4}-.0053085{col 67}{space 3}-.0028785
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-.0495844{col 26}{space 2} .0034682{col 37}{space 1}  -14.30{col 46}{space 3}0.000{col 54}{space 4} -.056382{col 67}{space 3}-.0427869
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .09269305
{txt}     sigma_e {c |} {res}  .0660306
{txt}         rho {c |} {res} .66337043{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. test _b[edum_adop]=0, notest

{p 0 7}{space 1}{text:( 1)}{space 1} {res}edum_adop = 0{p_end}
{txt}
{com}. test _b[adopter]=0, accum

{p 0 7}{space 1}{text:( 1)}{space 1} {res}edum_adop = 0{p_end}
{p 0 7}{space 1}{text:( 2)}{space 1} adopter = 0{p_end}

{txt}{col 12}chi2(  2) ={res} 1990.96
{txt}{col 10}Prob > chi2 =  {res}  0.0000
{txt}
{com}. 
. asd;fjal;
{err}unrecognized command:  asd
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. help egen

. help egen

. gen year_max = max(year)
{err}invalid syntax
{txt}{search r(198):r(198);}

{com}. egen year_max = max(year)

. egen year_min = min(year)

. keep if year_min<=02 & year_max>=06
{txt}(207193 observations deleted)

{com}. clear

. use ../CountrySTATAFiles/databuilds/data9907

. egen year_max = max(year)

. egen year_min = min(year)

. keep if year_min<=03 & year_max>=05
{txt}(207193 observations deleted)

{com}. 
. clear

. use ../CountrySTATAFiles/databuilds/data9907

. egen year_max = max(year)

. egen year_min = min(year)

. 
. 
. count if year_min<=02 
{res}    0

{com}. 
. codebook year_min

{txt}{hline}
{res}year_min{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric ({res}float{txt})

{col 18}range:  [{res}1999{txt},{res}1999{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}1{col 51}{txt}missing .:  {res}0{txt}/{res}207193

{txt}{col 13}tabulation:  Freq.  Value
{col 24}{res} 2.1e+05{col 33}1999

{com}. count if year_min<=2002 
{res}207193

{com}. count if year_min<=02 & year_max >= 2005
{res}    0

{com}. count if year_min<=2002 & year_max >= 2005
{res}207193

{com}. count if [year_min<=2002 & year_max >= 2005]
{res}207193

{com}. keep if [year_min<=2002 & year_max>=2005]
{txt}(0 observations deleted)

{com}. describe, short

{txt}Contains data from {res}../CountrySTATAFiles/databuilds/data9907.dta
{txt}  obs:{res}       207,193                          
{txt} vars:{res}           191                          20 Apr 2012 13:37
{txt} size:{res}   212,787,211{txt} (86.5% of memory free)
Sorted by:  
{res}     Note:  dataset has changed since last saved

{com}. help tsset

. clear

. use ../CountrySTATAFiles/databuilds/data9907

. egen pid = group(country region subregion farmcode)

. 
. destring pid, replace
{txt}pid already numeric; no {res}replace

{com}. 
. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit

{com}. by pid: egen year_max = max(year)

. by pid: egen year_min = min(year)

. 
. count if year_min<=2002
{res}132060

{com}. count if year_max>=2006
{res}131814

{com}. count if [year_min<=2002 & year_max >= 2006]
{res}68445

{com}. keep if [year_min<=2002 & year_max >= 2006]
{txt}(138748 observations deleted)

{com}. ****************

. 
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)

. 
. ****************

. 
. gen energydum = 0

. 
. replace energydum = 1 if year > 2003 
{txt}(32584 real changes made)

{com}. 
. ****************

. 
. *** Encode country variable

. 
. ****************

. 
. encode country, gen(mscode)

. 
. 
. 
. ****************

. 
. *** Create adoption marker for each farm

. 
. ****************

. 
. by pid: egen tot_ecuaa = total(energycropsuaa)

. 
. gen adopter = 0

. 
. replace adopter = 1 if tot_ecuaa > 0
{txt}(12942 real changes made)

{com}. 
. ****************

. 
. *** Create Time Trend

. 
. ****************

. 
. generate trend=0 if year==1999
{txt}(62640 missing values generated)

{com}. 
. replace trend=1 if year==2000
{txt}(6398 real changes made)

{com}. 
. replace trend=2 if year==2001
{txt}(7442 real changes made)

{com}. 
. replace trend=3 if year==2002
{txt}(8271 real changes made)

{com}. 
. replace trend=4 if year==2003
{txt}(7945 real changes made)

{com}. 
. replace trend=5 if year==2004
{txt}(8218 real changes made)

{com}. 
. replace trend=6 if year==2005
{txt}(8267 real changes made)

{com}. 
. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. 
. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. 
. 
. 
. ****************

. 
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL

. 
. ****************

. 
. gen trXmsc = trend*mscode

. 
. gen solvency = totalliabilities/totalassets
{txt}(3 missing values generated)

{com}. 
. *Correct for negative and 0 FFI in order to take log

. 
. gen ffi_tmp = familyfarmincome

. 
. replace ffi_tmp = 0 if familyfarmincome<=0 
{txt}(8111 real changes made)

{com}. 
. replace ffi_tmp = ffi_tmp + 1
{txt}(68445 real changes made)

{com}. 
. gen ln_ffi = log(ffi_tmp)

. 
. gen ln_labour = log(labourinputhours)

. 
. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. 
. gen osrape_prop = oilseedrapeuaa/totaluaa

. *gen intensity = machininerybuildingcurrentcosts/totalinputs

. 
. gen intensity = (fertilisers + cropprotection)/totalinputs

. 
. 
. xtreg osrape_prop energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity i.year, fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    68432
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}     9118

{txt}R-sq:  within  = {res}0.0144                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0505                                        {txt}avg = {res}      7.5
{txt}       overall = {res}0.0192                                        {txt}max = {res}        9

                                                {txt}F({res}16{txt},{res}59298{txt})        = {res}    54.14
{txt}corr(u_i, Xb)  = {res}-0.2863                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}-.0105172{col 26}{space 2} .0010332{col 37}{space 1}  -10.18{col 46}{space 3}0.000{col 54}{space 4}-.0125423{col 67}{space 3}-.0084921
{txt}farmsrepre~d {c |}{col 14}{res}{space 2}-5.95e-06{col 26}{space 2} 5.09e-06{col 37}{space 1}   -1.17{col 46}{space 3}0.242{col 54}{space 4}-.0000159{col 67}{space 3} 4.02e-06
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0030974{col 26}{space 2} .0005551{col 37}{space 1}   -5.58{col 46}{space 3}0.000{col 54}{space 4}-.0041853{col 67}{space 3}-.0020094
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}  -.00038{col 26}{space 2} .0000276{col 37}{space 1}  -13.78{col 46}{space 3}0.000{col 54}{space 4} -.000434{col 67}{space 3}-.0003259
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} -.002106{col 26}{space 2} .0010399{col 37}{space 1}   -2.03{col 46}{space 3}0.043{col 54}{space 4}-.0041443{col 67}{space 3}-.0000678
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0000514{col 26}{space 2} .0000917{col 37}{space 1}   -0.56{col 46}{space 3}0.575{col 54}{space 4}-.0002312{col 67}{space 3} .0001284
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} .0002723{col 26}{space 2} .0017731{col 37}{space 1}    0.15{col 46}{space 3}0.878{col 54}{space 4}-.0032031{col 67}{space 3} .0037476
{txt}{space 2}specialise {c |}{col 14}{res}{space 2}  .001396{col 26}{space 2} .0008251{col 37}{space 1}    1.69{col 46}{space 3}0.091{col 54}{space 4}-.0002212{col 67}{space 3} .0030132
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0012606{col 26}{space 2} .0053946{col 37}{space 1}   -0.23{col 46}{space 3}0.815{col 54}{space 4}-.0118341{col 67}{space 3} .0093129
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0136901{col 26}{space 2} .0010377{col 37}{space 1}  -13.19{col 46}{space 3}0.000{col 54}{space 4}-.0157241{col 67}{space 3}-.0116561
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0144299{col 26}{space 2} .0010107{col 37}{space 1}  -14.28{col 46}{space 3}0.000{col 54}{space 4}-.0164109{col 67}{space 3}-.0124489
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0198878{col 26}{space 2} .0010006{col 37}{space 1}  -19.88{col 46}{space 3}0.000{col 54}{space 4}-.0218491{col 67}{space 3}-.0179266
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0174799{col 26}{space 2} .0010094{col 37}{space 1}  -17.32{col 46}{space 3}0.000{col 54}{space 4}-.0194584{col 67}{space 3}-.0155014
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0061766{col 26}{space 2} .0009265{col 37}{space 1}   -6.67{col 46}{space 3}0.000{col 54}{space 4}-.0079925{col 67}{space 3}-.0043606
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0047225{col 26}{space 2} .0009279{col 37}{space 1}   -5.09{col 46}{space 3}0.000{col 54}{space 4}-.0065412{col 67}{space 3}-.0029038
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} .0024692{col 26}{space 2} .0009146{col 37}{space 1}    2.70{col 46}{space 3}0.007{col 54}{space 4} .0006767{col 67}{space 3} .0042617
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .1290086{col 26}{space 2} .0088576{col 37}{space 1}   14.56{col 46}{space 3}0.000{col 54}{space 4} .1116476{col 67}{space 3} .1463696
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .09561549
{txt}     sigma_e {c |} {res} .05676432
{txt}         rho {c |} {res} .73940025{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}9117{txt}, {res}59298{txt}) = {res}   17.35         {txt}Prob > F = {res}0.0000

{com}. 
. gen edum_adop = energydum*adopter

. xtreg osrape_prop energydum edum_adop adopter farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity i.year
{txt}note: 2007.year omitted because of collinearity
{res}
{txt}Random-effects GLS regression                   Number of obs      = {res}    68432
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}     9118

{txt}R-sq:  within  = {res}0.0133                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.1766                                        {txt}avg = {res}      7.5
{txt}       overall = {res}0.1344                                        {txt}max = {res}        9

{txt}Random effects u_i ~ {res}Gaussian                   {txt}Wald chi2({res}18{txt})      = {res}  2841.68
{txt}corr(u_i, X)       = {res}0{txt} (assumed)                Prob > chi2        =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}-.0127804{col 26}{space 2} .0010529{col 37}{space 1}  -12.14{col 46}{space 3}0.000{col 54}{space 4}-.0148439{col 67}{space 3}-.0107168
{txt}{space 3}edum_adop {c |}{col 14}{res}{space 2} .0174639{col 26}{space 2} .0011333{col 37}{space 1}   15.41{col 46}{space 3}0.000{col 54}{space 4} .0152426{col 67}{space 3} .0196851
{txt}{space 5}adopter {c |}{col 14}{res}{space 2} .0760627{col 26}{space 2} .0023444{col 37}{space 1}   32.44{col 46}{space 3}0.000{col 54}{space 4} .0714678{col 67}{space 3} .0806577
{txt}farmsrepre~d {c |}{col 14}{res}{space 2} .0000131{col 26}{space 2} 4.96e-06{col 37}{space 1}    2.64{col 46}{space 3}0.008{col 54}{space 4} 3.35e-06{col 67}{space 3} .0000228
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .0041645{col 26}{space 2} .0004556{col 37}{space 1}    9.14{col 46}{space 3}0.000{col 54}{space 4} .0032716{col 67}{space 3} .0050574
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0001775{col 26}{space 2} .0000232{col 37}{space 1}   -7.65{col 46}{space 3}0.000{col 54}{space 4}-.0002229{col 67}{space 3} -.000132
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .0003055{col 26}{space 2} .0008489{col 37}{space 1}    0.36{col 46}{space 3}0.719{col 54}{space 4}-.0013584{col 67}{space 3} .0019695
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2} -.000194{col 26}{space 2} .0000895{col 37}{space 1}   -2.17{col 46}{space 3}0.030{col 54}{space 4}-.0003695{col 67}{space 3}-.0000186
{txt}{space 4}solvency {c |}{col 14}{res}{space 2}   .01128{col 26}{space 2} .0015893{col 37}{space 1}    7.10{col 46}{space 3}0.000{col 54}{space 4} .0081651{col 67}{space 3}  .014395
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0003809{col 26}{space 2} .0008042{col 37}{space 1}    0.47{col 46}{space 3}0.636{col 54}{space 4}-.0011953{col 67}{space 3} .0019572
{txt}{space 3}intensity {c |}{col 14}{res}{space 2} .0279336{col 26}{space 2} .0048514{col 37}{space 1}    5.76{col 46}{space 3}0.000{col 54}{space 4} .0184251{col 67}{space 3} .0374421
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0133894{col 26}{space 2}  .001043{col 37}{space 1}  -12.84{col 46}{space 3}0.000{col 54}{space 4}-.0154337{col 67}{space 3}-.0113451
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0148023{col 26}{space 2}  .001015{col 37}{space 1}  -14.58{col 46}{space 3}0.000{col 54}{space 4}-.0167916{col 67}{space 3} -.012813
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0203005{col 26}{space 2} .0010024{col 37}{space 1}  -20.25{col 46}{space 3}0.000{col 54}{space 4}-.0222651{col 67}{space 3}-.0183359
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0178865{col 26}{space 2} .0010113{col 37}{space 1}  -17.69{col 46}{space 3}0.000{col 54}{space 4}-.0198685{col 67}{space 3}-.0159045
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0074905{col 26}{space 2} .0009289{col 37}{space 1}   -8.06{col 46}{space 3}0.000{col 54}{space 4}-.0093111{col 67}{space 3}  -.00567
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0057691{col 26}{space 2} .0009304{col 37}{space 1}   -6.20{col 46}{space 3}0.000{col 54}{space 4}-.0075926{col 67}{space 3}-.0039457
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}  .001781{col 26}{space 2} .0009178{col 37}{space 1}    1.94{col 46}{space 3}0.052{col 54}{space 4}-.0000178{col 67}{space 3} .0035798
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}  .032135{col 26}{space 2} .0068652{col 37}{space 1}    4.68{col 46}{space 3}0.000{col 54}{space 4} .0186794{col 67}{space 3} .0455906
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .07774731
{txt}     sigma_e {c |} {res}  .0566466
{txt}         rho {c |} {res} .65322916{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. test _b[edum_adop]=0, notest

{p 0 7}{space 1}{text:( 1)}{space 1} {res}edum_adop = 0{p_end}

{com}. test _b[adopter]=0, accum

{p 0 7}{space 1}{text:( 1)}{space 1} {res}edum_adop = 0{p_end}
{p 0 7}{space 1}{text:( 2)}{space 1} adopter = 0{p_end}

{txt}{col 12}chi2(  2) ={res} 1612.30
{txt}{col 10}Prob > chi2 =  {res}  0.0000

{com}. 
. reg oilseedrapevalue cerealsvalue

      {txt}Source {c |}       SS       df       MS              Number of obs ={res}   68445
{txt}{hline 13}{char +}{hline 30}           F(  1, 68443) ={res}       .
    {txt}   Model {char |} {res} 4.2821e+13     1  4.2821e+13           {txt}Prob > F      = {res} 0.0000
    {txt}Residual {char |} {res} 2.2228e+13 68443   324764673           {txt}R-squared     = {res} 0.6583
{txt}{hline 13}{char +}{hline 30}           Adj R-squared = {res} 0.6583
    {txt}   Total {char |} {res} 6.5049e+13 68444   950392767           {txt}Root MSE      = {res}  18021

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}oilseedrap~e{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
cerealsvalue {c |}{col 14}{res}{space 2} .2547523{col 26}{space 2} .0007016{col 37}{space 1}  363.11{col 46}{space 3}0.000{col 54}{space 4} .2533772{col 67}{space 3} .2561274
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-2931.341{col 26}{space 2} 76.56532{col 37}{space 1}  -38.29{col 46}{space 3}0.000{col 54}{space 4}-3081.409{col 67}{space 3}-2781.273
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. xtreg oilseedrapevalue cerealsvalue, fe

{txt}Fixed-effects (within) regression               Number of obs      = {res}    68445
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}     9118

{txt}R-sq:  within  = {res}0.0334                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.7815                                        {txt}avg = {res}      7.5
{txt}       overall = {res}0.6583                                        {txt}max = {res}        9

                                                {txt}F({res}1{txt},{res}59326{txt})         = {res}  2050.27
{txt}corr(u_i, Xb)  = {res}0.7765                         {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}oilseedrap~e{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
cerealsvalue {c |}{col 14}{res}{space 2} .0680999{col 26}{space 2}  .001504{col 37}{space 1}   45.28{col 46}{space 3}0.000{col 54}{space 4} .0651521{col 67}{space 3} .0710477
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 5961.748{col 26}{space 2} 82.95704{col 37}{space 1}   71.87{col 46}{space 3}0.000{col 54}{space 4} 5799.152{col 67}{space 3} 6124.344
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res}  25473.43
{txt}     sigma_e {c |} {res} 10935.279
{txt}         rho {c |} {res} .84439289{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}9117{txt}, {res}59326{txt}) = {res}   13.88         {txt}Prob > F = {res}0.0000

{com}. reg oilseedrapevalue cerealsvalue

      {txt}Source {c |}       SS       df       MS              Number of obs ={res}   68445
{txt}{hline 13}{char +}{hline 30}           F(  1, 68443) ={res}       .
    {txt}   Model {char |} {res} 4.2821e+13     1  4.2821e+13           {txt}Prob > F      = {res} 0.0000
    {txt}Residual {char |} {res} 2.2228e+13 68443   324764673           {txt}R-squared     = {res} 0.6583
{txt}{hline 13}{char +}{hline 30}           Adj R-squared = {res} 0.6583
    {txt}   Total {char |} {res} 6.5049e+13 68444   950392767           {txt}Root MSE      = {res}  18021

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}oilseedrap~e{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
cerealsvalue {c |}{col 14}{res}{space 2} .2547523{col 26}{space 2} .0007016{col 37}{space 1}  363.11{col 46}{space 3}0.000{col 54}{space 4} .2533772{col 67}{space 3} .2561274
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}-2931.341{col 26}{space 2} 76.56532{col 37}{space 1}  -38.29{col 46}{space 3}0.000{col 54}{space 4}-3081.409{col 67}{space 3}-2781.273
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. gen cerprice = cerealsvalue/cerealsuaa
{txt}(3232 missing values generated)

{com}. xtreg osrape_prop energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity cerprice i.year, fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    65204
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}     8878

{txt}R-sq:  within  = {res}0.0156                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0275                                        {txt}avg = {res}      7.3
{txt}       overall = {res}0.0073                                        {txt}max = {res}        9

                                                {txt}F({res}17{txt},{res}56309{txt})        = {res}    52.41
{txt}corr(u_i, Xb)  = {res}-0.2202                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}-.0114939{col 26}{space 2} .0011254{col 37}{space 1}  -10.21{col 46}{space 3}0.000{col 54}{space 4}-.0136997{col 67}{space 3} -.009288
{txt}farmsrepre~d {c |}{col 14}{res}{space 2}-9.99e-06{col 26}{space 2} 5.20e-06{col 37}{space 1}   -1.92{col 46}{space 3}0.055{col 54}{space 4}-.0000202{col 67}{space 3} 2.11e-07
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0016304{col 26}{space 2} .0005763{col 37}{space 1}   -2.83{col 46}{space 3}0.005{col 54}{space 4}  -.00276{col 67}{space 3}-.0005008
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0003749{col 26}{space 2} .0000267{col 37}{space 1}  -14.04{col 46}{space 3}0.000{col 54}{space 4}-.0004272{col 67}{space 3}-.0003225
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0022171{col 26}{space 2} .0010447{col 37}{space 1}   -2.12{col 46}{space 3}0.034{col 54}{space 4}-.0042646{col 67}{space 3}-.0001695
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0000778{col 26}{space 2} .0000916{col 37}{space 1}   -0.85{col 46}{space 3}0.396{col 54}{space 4}-.0002573{col 67}{space 3} .0001017
{txt}{space 4}solvency {c |}{col 14}{res}{space 2}-.0003731{col 26}{space 2} .0017337{col 37}{space 1}   -0.22{col 46}{space 3}0.830{col 54}{space 4}-.0037712{col 67}{space 3}  .003025
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0012836{col 26}{space 2} .0008013{col 37}{space 1}    1.60{col 46}{space 3}0.109{col 54}{space 4}-.0002869{col 67}{space 3} .0028541
{txt}{space 3}intensity {c |}{col 14}{res}{space 2} .0118266{col 26}{space 2} .0054531{col 37}{space 1}    2.17{col 46}{space 3}0.030{col 54}{space 4} .0011385{col 67}{space 3} .0225148
{txt}{space 4}cerprice {c |}{col 14}{res}{space 2} 4.70e-06{col 26}{space 2} 1.15e-06{col 37}{space 1}    4.08{col 46}{space 3}0.000{col 54}{space 4} 2.44e-06{col 67}{space 3} 6.96e-06
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0136685{col 26}{space 2} .0010278{col 37}{space 1}  -13.30{col 46}{space 3}0.000{col 54}{space 4}-.0156831{col 67}{space 3} -.011654
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0144088{col 26}{space 2}  .001001{col 37}{space 1}  -14.39{col 46}{space 3}0.000{col 54}{space 4}-.0163708{col 67}{space 3}-.0124467
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0193327{col 26}{space 2} .0009938{col 37}{space 1}  -19.45{col 46}{space 3}0.000{col 54}{space 4}-.0212806{col 67}{space 3}-.0173849
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}  -.01691{col 26}{space 2} .0010015{col 37}{space 1}  -16.88{col 46}{space 3}0.000{col 54}{space 4} -.018873{col 67}{space 3}-.0149469
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0046106{col 26}{space 2} .0010477{col 37}{space 1}   -4.40{col 46}{space 3}0.000{col 54}{space 4} -.006664{col 67}{space 3}-.0025571
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0026545{col 26}{space 2}  .001081{col 37}{space 1}   -2.46{col 46}{space 3}0.014{col 54}{space 4}-.0047731{col 67}{space 3}-.0005358
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} .0044131{col 26}{space 2} .0010055{col 37}{space 1}    4.39{col 46}{space 3}0.000{col 54}{space 4} .0024423{col 67}{space 3}  .006384
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .1161838{col 26}{space 2} .0090058{col 37}{space 1}   12.90{col 46}{space 3}0.000{col 54}{space 4} .0985325{col 67}{space 3} .1338352
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .09496788
{txt}     sigma_e {c |} {res} .05480913
{txt}         rho {c |} {res}  .7501409{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}8877{txt}, {res}56309{txt}) = {res}   18.46         {txt}Prob > F = {res}0.0000

{com}. drop cerprice

. gen ln_cprice = log(cerealsvalue/cerealsuaa)
{txt}(3281 missing values generated)

{com}. gen cprice = cerealsvalue/cerealsuaa
{txt}(3232 missing values generated)

{com}. gen ln_cprice = log(cerealsvalue/(wheatyield*cerealsuaa))
{err}ln_cprice already defined
{txt}{search r(110):r(110);}

{com}. drop ln_cprice

. gen ln_cprice = log(cerealsvalue/(wheatyield*cerealsuaa))
{txt}(23800 missing values generated)

{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(3281 missing values generated)

{com}. xtreg osrape_prop energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity ln_c_ret_ha i.year, fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    65161
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}     8876

{txt}R-sq:  within  = {res}0.0155                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0247                                        {txt}avg = {res}      7.3
{txt}       overall = {res}0.0061                                        {txt}max = {res}        9

                                                {txt}F({res}17{txt},{res}56268{txt})        = {res}    51.97
{txt}corr(u_i, Xb)  = {res}-0.2099                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}-.0106015{col 26}{space 2} .0010978{col 37}{space 1}   -9.66{col 46}{space 3}0.000{col 54}{space 4}-.0127531{col 67}{space 3}-.0084498
{txt}farmsrepre~d {c |}{col 14}{res}{space 2}-.0000103{col 26}{space 2} 5.20e-06{col 37}{space 1}   -1.98{col 46}{space 3}0.047{col 54}{space 4}-.0000205{col 67}{space 3}-1.15e-07
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0016141{col 26}{space 2} .0005768{col 37}{space 1}   -2.80{col 46}{space 3}0.005{col 54}{space 4}-.0027446{col 67}{space 3}-.0004836
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0003728{col 26}{space 2} .0000267{col 37}{space 1}  -13.97{col 46}{space 3}0.000{col 54}{space 4}-.0004251{col 67}{space 3}-.0003205
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0022158{col 26}{space 2} .0010447{col 37}{space 1}   -2.12{col 46}{space 3}0.034{col 54}{space 4}-.0042635{col 67}{space 3}-.0001681
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0000667{col 26}{space 2}  .000092{col 37}{space 1}   -0.72{col 46}{space 3}0.469{col 54}{space 4}-.0002469{col 67}{space 3} .0001136
{txt}{space 4}solvency {c |}{col 14}{res}{space 2}-.0004288{col 26}{space 2} .0017329{col 37}{space 1}   -0.25{col 46}{space 3}0.805{col 54}{space 4}-.0038253{col 67}{space 3} .0029677
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0013168{col 26}{space 2} .0008019{col 37}{space 1}    1.64{col 46}{space 3}0.101{col 54}{space 4} -.000255{col 67}{space 3} .0028886
{txt}{space 3}intensity {c |}{col 14}{res}{space 2} .0121203{col 26}{space 2} .0054526{col 37}{space 1}    2.22{col 46}{space 3}0.026{col 54}{space 4} .0014331{col 67}{space 3} .0228074
{txt}{space 1}ln_c_ret_ha {c |}{col 14}{res}{space 2} .0020961{col 26}{space 2} .0008681{col 37}{space 1}    2.41{col 46}{space 3}0.016{col 54}{space 4} .0003946{col 67}{space 3} .0037977
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2} -.013865{col 26}{space 2} .0010287{col 37}{space 1}  -13.48{col 46}{space 3}0.000{col 54}{space 4}-.0158812{col 67}{space 3}-.0118488
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0144963{col 26}{space 2} .0010011{col 37}{space 1}  -14.48{col 46}{space 3}0.000{col 54}{space 4}-.0164586{col 67}{space 3}-.0125341
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0194922{col 26}{space 2} .0009936{col 37}{space 1}  -19.62{col 46}{space 3}0.000{col 54}{space 4}-.0214397{col 67}{space 3}-.0175448
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0170117{col 26}{space 2} .0010017{col 37}{space 1}  -16.98{col 46}{space 3}0.000{col 54}{space 4}-.0189751{col 67}{space 3}-.0150483
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0056978{col 26}{space 2} .0010016{col 37}{space 1}   -5.69{col 46}{space 3}0.000{col 54}{space 4}-.0076608{col 67}{space 3}-.0037347
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0037116{col 26}{space 2}  .001058{col 37}{space 1}   -3.51{col 46}{space 3}0.000{col 54}{space 4}-.0057853{col 67}{space 3} -.001638
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} .0035042{col 26}{space 2} .0009746{col 37}{space 1}    3.60{col 46}{space 3}0.000{col 54}{space 4} .0015941{col 67}{space 3} .0054144
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .1058933{col 26}{space 2} .0104415{col 37}{space 1}   10.14{col 46}{space 3}0.000{col 54}{space 4} .0854278{col 67}{space 3} .1263588
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .09483436
{txt}     sigma_e {c |} {res} .05477969
{txt}         rho {c |} {res} .74981476{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}8875{txt}, {res}56268{txt}) = {res}   18.50         {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity ln_c_ret_ha i.year year#mscode, fe
{txt}note: 2007.year omitted because of collinearity
note: 1999b.year#5.mscode omitted because of collinearity
note: 1999b.year#6.mscode omitted because of collinearity
note: 1999b.year#7.mscode omitted because of collinearity
note: 1999b.year#10.mscode omitted because of collinearity
note: 1999b.year#12.mscode omitted because of collinearity
note: 1999b.year#13.mscode omitted because of collinearity
note: 2000.year#3.mscode omitted because of collinearity
note: 2000.year#14.mscode omitted because of collinearity
note: 2003.year#2.mscode omitted because of collinearity
note: 2005.year#11.mscode omitted because of collinearity
note: 2007.year#4.mscode omitted because of collinearity
note: 2007.year#8.mscode omitted because of collinearity
note: 2007.year#9.mscode omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    65161
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}     8876

{txt}R-sq:  within  = {res}0.0379                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0426                                        {txt}avg = {res}      7.3
{txt}       overall = {res}0.0301                                        {txt}max = {res}        9

                                                {txt}F({res}121{txt},{res}56164{txt})       = {res}    18.29
{txt}corr(u_i, Xb)  = {res}-0.6433                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}  .114004{col 26}{space 2} .0576887{col 37}{space 1}    1.98{col 46}{space 3}0.048{col 54}{space 4} .0009337{col 67}{space 3} .2270743
{txt}farmsrepre~d {c |}{col 14}{res}{space 2}-1.42e-06{col 26}{space 2} 5.22e-06{col 37}{space 1}   -0.27{col 46}{space 3}0.786{col 54}{space 4}-.0000117{col 67}{space 3} 8.81e-06
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0009201{col 26}{space 2} .0005825{col 37}{space 1}   -1.58{col 46}{space 3}0.114{col 54}{space 4}-.0020618{col 67}{space 3} .0002216
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0003633{col 26}{space 2} .0000267{col 37}{space 1}  -13.58{col 46}{space 3}0.000{col 54}{space 4}-.0004157{col 67}{space 3}-.0003109
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0037941{col 26}{space 2} .0010739{col 37}{space 1}   -3.53{col 46}{space 3}0.000{col 54}{space 4}-.0058989{col 67}{space 3}-.0016893
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2} -.000084{col 26}{space 2} .0000924{col 37}{space 1}   -0.91{col 46}{space 3}0.363{col 54}{space 4} -.000265{col 67}{space 3} .0000971
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} .0002632{col 26}{space 2} .0017242{col 37}{space 1}    0.15{col 46}{space 3}0.879{col 54}{space 4}-.0031162{col 67}{space 3} .0036426
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0009035{col 26}{space 2} .0007943{col 37}{space 1}    1.14{col 46}{space 3}0.255{col 54}{space 4}-.0006534{col 67}{space 3} .0024603
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0036171{col 26}{space 2} .0055035{col 37}{space 1}   -0.66{col 46}{space 3}0.511{col 54}{space 4} -.014404{col 67}{space 3} .0071698
{txt}{space 1}ln_c_ret_ha {c |}{col 14}{res}{space 2}   .00206{col 26}{space 2} .0009003{col 37}{space 1}    2.29{col 46}{space 3}0.022{col 54}{space 4} .0002954{col 67}{space 3} .0038245
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0344172{col 26}{space 2} .0067387{col 37}{space 1}   -5.11{col 46}{space 3}0.000{col 54}{space 4} -.047625{col 67}{space 3}-.0212093
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}  -.04192{col 26}{space 2} .0064234{col 37}{space 1}   -6.53{col 46}{space 3}0.000{col 54}{space 4}-.0545098{col 67}{space 3}-.0293302
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0431277{col 26}{space 2} .0062778{col 37}{space 1}   -6.87{col 46}{space 3}0.000{col 54}{space 4}-.0554321{col 67}{space 3}-.0308232
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0282243{col 26}{space 2} .0063489{col 37}{space 1}   -4.45{col 46}{space 3}0.000{col 54}{space 4}-.0406682{col 67}{space 3}-.0157804
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.1309284{col 26}{space 2} .0575836{col 37}{space 1}   -2.27{col 46}{space 3}0.023{col 54}{space 4}-.2437925{col 67}{space 3}-.0180642
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.1437688{col 26}{space 2} .0575832{col 37}{space 1}   -2.50{col 46}{space 3}0.013{col 54}{space 4}-.2566323{col 67}{space 3}-.0309053
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} -.130785{col 26}{space 2} .0575737{col 37}{space 1}   -2.27{col 46}{space 3}0.023{col 54}{space 4}-.2436299{col 67}{space 3}-.0179401
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 1}year#mscode {c |}
{space 4}1999  2  {c |}{col 14}{res}{space 2}-.0233083{col 26}{space 2} .0067126{col 37}{space 1}   -3.47{col 46}{space 3}0.001{col 54}{space 4}-.0364651{col 67}{space 3}-.0101515
{txt}{space 4}1999  3  {c |}{col 14}{res}{space 2}-.0317735{col 26}{space 2} .0074166{col 37}{space 1}   -4.28{col 46}{space 3}0.000{col 54}{space 4}  -.04631{col 67}{space 3} -.017237
{txt}{space 4}1999  4  {c |}{col 14}{res}{space 2} .1331081{col 26}{space 2} .0577358{col 37}{space 1}    2.31{col 46}{space 3}0.021{col 54}{space 4} .0199456{col 67}{space 3} .2462706
{txt}{space 4}1999  5  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  6  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  7  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  8  {c |}{col 14}{res}{space 2} .1047913{col 26}{space 2} .0598363{col 37}{space 1}    1.75{col 46}{space 3}0.080{col 54}{space 4}-.0124882{col 67}{space 3} .2220708
{txt}{space 4}1999  9  {c |}{col 14}{res}{space 2} .1159908{col 26}{space 2} .0582272{col 37}{space 1}    1.99{col 46}{space 3}0.046{col 54}{space 4} .0018651{col 67}{space 3} .2301164
{txt}{space 4}1999 10  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999 11  {c |}{col 14}{res}{space 2}-.0090989{col 26}{space 2} .0118768{col 37}{space 1}   -0.77{col 46}{space 3}0.444{col 54}{space 4}-.0323775{col 67}{space 3} .0141798
{txt}{space 4}1999 12  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999 13  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999 14  {c |}{col 14}{res}{space 2}-.0257293{col 26}{space 2} .0112243{col 37}{space 1}   -2.29{col 46}{space 3}0.022{col 54}{space 4}-.0477289{col 67}{space 3}-.0037296
{txt}{space 4}2000  2  {c |}{col 14}{res}{space 2}-.0057382{col 26}{space 2} .0060948{col 37}{space 1}   -0.94{col 46}{space 3}0.346{col 54}{space 4}-.0176841{col 67}{space 3} .0062076
{txt}{space 4}2000  3  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2000  4  {c |}{col 14}{res}{space 2} .1523884{col 26}{space 2} .0576842{col 37}{space 1}    2.64{col 46}{space 3}0.008{col 54}{space 4}  .039327{col 67}{space 3} .2654498
{txt}{space 4}2000  5  {c |}{col 14}{res}{space 2} .0191033{col 26}{space 2} .0070563{col 37}{space 1}    2.71{col 46}{space 3}0.007{col 54}{space 4} .0052729{col 67}{space 3} .0329336
{txt}{space 4}2000  6  {c |}{col 14}{res}{space 2}  .030916{col 26}{space 2} .0139026{col 37}{space 1}    2.22{col 46}{space 3}0.026{col 54}{space 4} .0036668{col 67}{space 3} .0581651
{txt}{space 4}2000  7  {c |}{col 14}{res}{space 2} .0225244{col 26}{space 2} .0082291{col 37}{space 1}    2.74{col 46}{space 3}0.006{col 54}{space 4} .0063953{col 67}{space 3} .0386534
{txt}{space 4}2000  8  {c |}{col 14}{res}{space 2} .1158877{col 26}{space 2} .0595217{col 37}{space 1}    1.95{col 46}{space 3}0.052{col 54}{space 4}-.0007753{col 67}{space 3} .2325506
{txt}{space 4}2000  9  {c |}{col 14}{res}{space 2} .1506359{col 26}{space 2}  .058181{col 37}{space 1}    2.59{col 46}{space 3}0.010{col 54}{space 4} .0366009{col 67}{space 3}  .264671
{txt}{space 4}2000 10  {c |}{col 14}{res}{space 2} .0159208{col 26}{space 2} .0079577{col 37}{space 1}    2.00{col 46}{space 3}0.045{col 54}{space 4} .0003236{col 67}{space 3}  .031518
{txt}{space 4}2000 11  {c |}{col 14}{res}{space 2} .0308487{col 26}{space 2} .0111744{col 37}{space 1}    2.76{col 46}{space 3}0.006{col 54}{space 4} .0089469{col 67}{space 3} .0527506
{txt}{space 4}2000 12  {c |}{col 14}{res}{space 2} .0299836{col 26}{space 2} .0088448{col 37}{space 1}    3.39{col 46}{space 3}0.001{col 54}{space 4} .0126477{col 67}{space 3} .0473194
{txt}{space 4}2000 13  {c |}{col 14}{res}{space 2} .0177149{col 26}{space 2} .0087228{col 37}{space 1}    2.03{col 46}{space 3}0.042{col 54}{space 4} .0006182{col 67}{space 3} .0348117
{txt}{space 4}2000 14  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2001  2  {c |}{col 14}{res}{space 2} .0021192{col 26}{space 2} .0055199{col 37}{space 1}    0.38{col 46}{space 3}0.701{col 54}{space 4}-.0086999{col 67}{space 3} .0129382
{txt}{space 4}2001  3  {c |}{col 14}{res}{space 2} .0021836{col 26}{space 2} .0064897{col 37}{space 1}    0.34{col 46}{space 3}0.737{col 54}{space 4}-.0105362{col 67}{space 3} .0149035
{txt}{space 4}2001  4  {c |}{col 14}{res}{space 2} .1674787{col 26}{space 2} .0576457{col 37}{space 1}    2.91{col 46}{space 3}0.004{col 54}{space 4} .0544929{col 67}{space 3} .2804646
{txt}{space 4}2001  5  {c |}{col 14}{res}{space 2} .0210595{col 26}{space 2} .0067473{col 37}{space 1}    3.12{col 46}{space 3}0.002{col 54}{space 4} .0078347{col 67}{space 3} .0342843
{txt}{space 4}2001  6  {c |}{col 14}{res}{space 2} .0300399{col 26}{space 2} .0136076{col 37}{space 1}    2.21{col 46}{space 3}0.027{col 54}{space 4} .0033689{col 67}{space 3} .0567109
{txt}{space 4}2001  7  {c |}{col 14}{res}{space 2}   .03632{col 26}{space 2} .0078274{col 37}{space 1}    4.64{col 46}{space 3}0.000{col 54}{space 4} .0209783{col 67}{space 3} .0516617
{txt}{space 4}2001  8  {c |}{col 14}{res}{space 2} .1249845{col 26}{space 2} .0592404{col 37}{space 1}    2.11{col 46}{space 3}0.035{col 54}{space 4}  .008873{col 67}{space 3} .2410961
{txt}{space 4}2001  9  {c |}{col 14}{res}{space 2}  .155435{col 26}{space 2} .0580057{col 37}{space 1}    2.68{col 46}{space 3}0.007{col 54}{space 4} .0417434{col 67}{space 3} .2691265
{txt}{space 4}2001 10  {c |}{col 14}{res}{space 2} .0265091{col 26}{space 2}   .00765{col 37}{space 1}    3.47{col 46}{space 3}0.001{col 54}{space 4}  .011515{col 67}{space 3} .0415031
{txt}{space 4}2001 11  {c |}{col 14}{res}{space 2} .0335512{col 26}{space 2}  .010843{col 37}{space 1}    3.09{col 46}{space 3}0.002{col 54}{space 4} .0122989{col 67}{space 3} .0548035
{txt}{space 4}2001 12  {c |}{col 14}{res}{space 2} .0378488{col 26}{space 2} .0086121{col 37}{space 1}    4.39{col 46}{space 3}0.000{col 54}{space 4} .0209691{col 67}{space 3} .0547286
{txt}{space 4}2001 13  {c |}{col 14}{res}{space 2} .0209093{col 26}{space 2} .0084183{col 37}{space 1}    2.48{col 46}{space 3}0.013{col 54}{space 4} .0044094{col 67}{space 3} .0374092
{txt}{space 4}2001 14  {c |}{col 14}{res}{space 2}-.0094881{col 26}{space 2} .0093578{col 37}{space 1}   -1.01{col 46}{space 3}0.311{col 54}{space 4}-.0278293{col 67}{space 3} .0088532
{txt}{space 4}2002  2  {c |}{col 14}{res}{space 2} .0146609{col 26}{space 2} .0051467{col 37}{space 1}    2.85{col 46}{space 3}0.004{col 54}{space 4} .0045733{col 67}{space 3} .0247485
{txt}{space 4}2002  3  {c |}{col 14}{res}{space 2} .0047041{col 26}{space 2} .0063536{col 37}{space 1}    0.74{col 46}{space 3}0.459{col 54}{space 4} -.007749{col 67}{space 3} .0171572
{txt}{space 4}2002  4  {c |}{col 14}{res}{space 2} .1568116{col 26}{space 2} .0576241{col 37}{space 1}    2.72{col 46}{space 3}0.007{col 54}{space 4} .0438679{col 67}{space 3} .2697553
{txt}{space 4}2002  5  {c |}{col 14}{res}{space 2} .0062806{col 26}{space 2} .0066002{col 37}{space 1}    0.95{col 46}{space 3}0.341{col 54}{space 4}-.0066558{col 67}{space 3}  .019217
{txt}{space 4}2002  6  {c |}{col 14}{res}{space 2} .0333024{col 26}{space 2}  .012919{col 37}{space 1}    2.58{col 46}{space 3}0.010{col 54}{space 4}  .007981{col 67}{space 3} .0586238
{txt}{space 4}2002  7  {c |}{col 14}{res}{space 2} .0093208{col 26}{space 2} .0076242{col 37}{space 1}    1.22{col 46}{space 3}0.222{col 54}{space 4}-.0056227{col 67}{space 3} .0242643
{txt}{space 4}2002  8  {c |}{col 14}{res}{space 2} .1166912{col 26}{space 2} .0588629{col 37}{space 1}    1.98{col 46}{space 3}0.047{col 54}{space 4} .0013196{col 67}{space 3} .2320629
{txt}{space 4}2002  9  {c |}{col 14}{res}{space 2} .1567912{col 26}{space 2} .0579715{col 37}{space 1}    2.70{col 46}{space 3}0.007{col 54}{space 4} .0431667{col 67}{space 3} .2704157
{txt}{space 4}2002 10  {c |}{col 14}{res}{space 2} .0299912{col 26}{space 2} .0075645{col 37}{space 1}    3.96{col 46}{space 3}0.000{col 54}{space 4} .0151646{col 67}{space 3} .0448177
{txt}{space 4}2002 11  {c |}{col 14}{res}{space 2} .0293244{col 26}{space 2} .0103567{col 37}{space 1}    2.83{col 46}{space 3}0.005{col 54}{space 4} .0090251{col 67}{space 3} .0496236
{txt}{space 4}2002 12  {c |}{col 14}{res}{space 2} .0355464{col 26}{space 2} .0084006{col 37}{space 1}    4.23{col 46}{space 3}0.000{col 54}{space 4} .0190811{col 67}{space 3} .0520117
{txt}{space 4}2002 13  {c |}{col 14}{res}{space 2} .0409322{col 26}{space 2} .0083317{col 37}{space 1}    4.91{col 46}{space 3}0.000{col 54}{space 4} .0246022{col 67}{space 3} .0572623
{txt}{space 4}2002 14  {c |}{col 14}{res}{space 2}-.0183768{col 26}{space 2} .0091943{col 37}{space 1}   -2.00{col 46}{space 3}0.046{col 54}{space 4}-.0363976{col 67}{space 3} -.000356
{txt}{space 4}2003  2  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2003  3  {c |}{col 14}{res}{space 2}-.0151758{col 26}{space 2}  .006415{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-.0277492{col 67}{space 3}-.0026024
{txt}{space 4}2003  4  {c |}{col 14}{res}{space 2} .1393775{col 26}{space 2} .0576306{col 37}{space 1}    2.42{col 46}{space 3}0.016{col 54}{space 4} .0264212{col 67}{space 3} .2523339
{txt}{space 4}2003  5  {c |}{col 14}{res}{space 2}-.0012005{col 26}{space 2} .0066699{col 37}{space 1}   -0.18{col 46}{space 3}0.857{col 54}{space 4}-.0142735{col 67}{space 3} .0118726
{txt}{space 4}2003  6  {c |}{col 14}{res}{space 2} .0204273{col 26}{space 2} .0130273{col 37}{space 1}    1.57{col 46}{space 3}0.117{col 54}{space 4}-.0051063{col 67}{space 3}  .045961
{txt}{space 4}2003  7  {c |}{col 14}{res}{space 2}-.0027613{col 26}{space 2} .0082346{col 37}{space 1}   -0.34{col 46}{space 3}0.737{col 54}{space 4}-.0189011{col 67}{space 3} .0133786
{txt}{space 4}2003  8  {c |}{col 14}{res}{space 2} .1084368{col 26}{space 2} .0588593{col 37}{space 1}    1.84{col 46}{space 3}0.065{col 54}{space 4}-.0069278{col 67}{space 3} .2238014
{txt}{space 4}2003  9  {c |}{col 14}{res}{space 2} .1421246{col 26}{space 2} .0579818{col 37}{space 1}    2.45{col 46}{space 3}0.014{col 54}{space 4} .0284798{col 67}{space 3} .2557693
{txt}{space 4}2003 10  {c |}{col 14}{res}{space 2} .0101245{col 26}{space 2} .0076454{col 37}{space 1}    1.32{col 46}{space 3}0.185{col 54}{space 4}-.0048606{col 67}{space 3} .0251096
{txt}{space 4}2003 11  {c |}{col 14}{res}{space 2} .0169842{col 26}{space 2} .0103923{col 37}{space 1}    1.63{col 46}{space 3}0.102{col 54}{space 4}-.0033847{col 67}{space 3} .0373531
{txt}{space 4}2003 12  {c |}{col 14}{res}{space 2}  .034373{col 26}{space 2} .0084373{col 37}{space 1}    4.07{col 46}{space 3}0.000{col 54}{space 4} .0178358{col 67}{space 3} .0509101
{txt}{space 4}2003 13  {c |}{col 14}{res}{space 2} .0156451{col 26}{space 2} .0083771{col 37}{space 1}    1.87{col 46}{space 3}0.062{col 54}{space 4}-.0007742{col 67}{space 3} .0320643
{txt}{space 4}2003 14  {c |}{col 14}{res}{space 2} -.011068{col 26}{space 2} .0092298{col 37}{space 1}   -1.20{col 46}{space 3}0.230{col 54}{space 4}-.0291585{col 67}{space 3} .0070226
{txt}{space 4}2004  2  {c |}{col 14}{res}{space 2}-.0090715{col 26}{space 2} .0051628{col 37}{space 1}   -1.76{col 46}{space 3}0.079{col 54}{space 4}-.0191907{col 67}{space 3} .0010477
{txt}{space 4}2004  3  {c |}{col 14}{res}{space 2}-.0295324{col 26}{space 2} .0063506{col 37}{space 1}   -4.65{col 46}{space 3}0.000{col 54}{space 4}-.0419797{col 67}{space 3}-.0170851
{txt}{space 4}2004  4  {c |}{col 14}{res}{space 2} .1293632{col 26}{space 2} .0576247{col 37}{space 1}    2.24{col 46}{space 3}0.025{col 54}{space 4} .0164185{col 67}{space 3} .2423079
{txt}{space 4}2004  5  {c |}{col 14}{res}{space 2}-.0141593{col 26}{space 2} .0066003{col 37}{space 1}   -2.15{col 46}{space 3}0.032{col 54}{space 4}-.0270959{col 67}{space 3}-.0012226
{txt}{space 4}2004  6  {c |}{col 14}{res}{space 2} .0055604{col 26}{space 2} .0129175{col 37}{space 1}    0.43{col 46}{space 3}0.667{col 54}{space 4} -.019758{col 67}{space 3} .0308788
{txt}{space 4}2004  7  {c |}{col 14}{res}{space 2}-.0149591{col 26}{space 2} .0077904{col 37}{space 1}   -1.92{col 46}{space 3}0.055{col 54}{space 4}-.0302283{col 67}{space 3}   .00031
{txt}{space 4}2004  8  {c |}{col 14}{res}{space 2} .1085421{col 26}{space 2} .0588307{col 37}{space 1}    1.84{col 46}{space 3}0.065{col 54}{space 4}-.0067665{col 67}{space 3} .2238507
{txt}{space 4}2004  9  {c |}{col 14}{res}{space 2} .1319342{col 26}{space 2} .0579767{col 37}{space 1}    2.28{col 46}{space 3}0.023{col 54}{space 4} .0182995{col 67}{space 3}  .245569
{txt}{space 4}2004 10  {c |}{col 14}{res}{space 2}-.0034353{col 26}{space 2} .0075428{col 37}{space 1}   -0.46{col 46}{space 3}0.649{col 54}{space 4}-.0182193{col 67}{space 3} .0113487
{txt}{space 4}2004 11  {c |}{col 14}{res}{space 2}-.0019711{col 26}{space 2} .0103486{col 37}{space 1}   -0.19{col 46}{space 3}0.849{col 54}{space 4}-.0222544{col 67}{space 3} .0183121
{txt}{space 4}2004 12  {c |}{col 14}{res}{space 2} .0270769{col 26}{space 2} .0083901{col 37}{space 1}    3.23{col 46}{space 3}0.001{col 54}{space 4} .0106322{col 67}{space 3} .0435215
{txt}{space 4}2004 13  {c |}{col 14}{res}{space 2} .0241259{col 26}{space 2} .0082994{col 37}{space 1}    2.91{col 46}{space 3}0.004{col 54}{space 4} .0078589{col 67}{space 3} .0403928
{txt}{space 4}2004 14  {c |}{col 14}{res}{space 2}-.0235899{col 26}{space 2} .0091661{col 37}{space 1}   -2.57{col 46}{space 3}0.010{col 54}{space 4}-.0415554{col 67}{space 3}-.0056243
{txt}{space 4}2005  2  {c |}{col 14}{res}{space 2} .0054697{col 26}{space 2} .0051641{col 37}{space 1}    1.06{col 46}{space 3}0.290{col 54}{space 4}-.0046521{col 67}{space 3} .0155914
{txt}{space 4}2005  3  {c |}{col 14}{res}{space 2}-.0156428{col 26}{space 2} .0063407{col 37}{space 1}   -2.47{col 46}{space 3}0.014{col 54}{space 4}-.0280706{col 67}{space 3} -.003215
{txt}{space 4}2005  4  {c |}{col 14}{res}{space 2} .1368225{col 26}{space 2} .0576276{col 37}{space 1}    2.37{col 46}{space 3}0.018{col 54}{space 4}  .023872{col 67}{space 3}  .249773
{txt}{space 4}2005  5  {c |}{col 14}{res}{space 2} .0075928{col 26}{space 2}  .006583{col 37}{space 1}    1.15{col 46}{space 3}0.249{col 54}{space 4}-.0053099{col 67}{space 3} .0204955
{txt}{space 4}2005  6  {c |}{col 14}{res}{space 2} .0234111{col 26}{space 2} .0129335{col 37}{space 1}    1.81{col 46}{space 3}0.070{col 54}{space 4}-.0019386{col 67}{space 3} .0487608
{txt}{space 4}2005  7  {c |}{col 14}{res}{space 2}-.0036346{col 26}{space 2} .0077607{col 37}{space 1}   -0.47{col 46}{space 3}0.640{col 54}{space 4}-.0188455{col 67}{space 3} .0115764
{txt}{space 4}2005  8  {c |}{col 14}{res}{space 2} .1163907{col 26}{space 2} .0589606{col 37}{space 1}    1.97{col 46}{space 3}0.048{col 54}{space 4} .0008275{col 67}{space 3} .2319538
{txt}{space 4}2005  9  {c |}{col 14}{res}{space 2} .1447328{col 26}{space 2} .0579726{col 37}{space 1}    2.50{col 46}{space 3}0.013{col 54}{space 4} .0311062{col 67}{space 3} .2583595
{txt}{space 4}2005 10  {c |}{col 14}{res}{space 2} .0150632{col 26}{space 2} .0075232{col 37}{space 1}    2.00{col 46}{space 3}0.045{col 54}{space 4} .0003178{col 67}{space 3} .0298087
{txt}{space 4}2005 11  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2005 12  {c |}{col 14}{res}{space 2} .0401529{col 26}{space 2} .0083615{col 37}{space 1}    4.80{col 46}{space 3}0.000{col 54}{space 4} .0237643{col 67}{space 3} .0565415
{txt}{space 4}2005 13  {c |}{col 14}{res}{space 2} .0429295{col 26}{space 2} .0083079{col 37}{space 1}    5.17{col 46}{space 3}0.000{col 54}{space 4} .0266459{col 67}{space 3}  .059213
{txt}{space 4}2005 14  {c |}{col 14}{res}{space 2}-.0015638{col 26}{space 2} .0091544{col 37}{space 1}   -0.17{col 46}{space 3}0.864{col 54}{space 4}-.0195066{col 67}{space 3}  .016379
{txt}{space 4}2006  2  {c |}{col 14}{res}{space 2}  .010121{col 26}{space 2} .0050472{col 37}{space 1}    2.01{col 46}{space 3}0.045{col 54}{space 4} .0002285{col 67}{space 3} .0200135
{txt}{space 4}2006  3  {c |}{col 14}{res}{space 2}-.0257847{col 26}{space 2} .0062224{col 37}{space 1}   -4.14{col 46}{space 3}0.000{col 54}{space 4}-.0379807{col 67}{space 3}-.0135887
{txt}{space 4}2006  4  {c |}{col 14}{res}{space 2} .1202232{col 26}{space 2} .0576152{col 37}{space 1}    2.09{col 46}{space 3}0.037{col 54}{space 4}  .007297{col 67}{space 3} .2331494
{txt}{space 4}2006  5  {c |}{col 14}{res}{space 2} .0017733{col 26}{space 2} .0064583{col 37}{space 1}    0.27{col 46}{space 3}0.784{col 54}{space 4} -.010885{col 67}{space 3} .0144316
{txt}{space 4}2006  6  {c |}{col 14}{res}{space 2} .0123622{col 26}{space 2} .0128464{col 37}{space 1}    0.96{col 46}{space 3}0.336{col 54}{space 4}-.0128168{col 67}{space 3} .0375412
{txt}{space 4}2006  7  {c |}{col 14}{res}{space 2}-.0061936{col 26}{space 2} .0075264{col 37}{space 1}   -0.82{col 46}{space 3}0.411{col 54}{space 4}-.0209454{col 67}{space 3} .0085582
{txt}{space 4}2006  8  {c |}{col 14}{res}{space 2} .1182759{col 26}{space 2} .0588646{col 37}{space 1}    2.01{col 46}{space 3}0.045{col 54}{space 4}  .002901{col 67}{space 3} .2336508
{txt}{space 4}2006  9  {c |}{col 14}{res}{space 2} .1306341{col 26}{space 2} .0579577{col 37}{space 1}    2.25{col 46}{space 3}0.024{col 54}{space 4} .0170366{col 67}{space 3} .2442316
{txt}{space 4}2006 10  {c |}{col 14}{res}{space 2} .0179882{col 26}{space 2} .0073937{col 37}{space 1}    2.43{col 46}{space 3}0.015{col 54}{space 4} .0034965{col 67}{space 3} .0324799
{txt}{space 4}2006 11  {c |}{col 14}{res}{space 2}-.0164349{col 26}{space 2} .0103075{col 37}{space 1}   -1.59{col 46}{space 3}0.111{col 54}{space 4}-.0366377{col 67}{space 3} .0037679
{txt}{space 4}2006 12  {c |}{col 14}{res}{space 2} .0387193{col 26}{space 2} .0082628{col 37}{space 1}    4.69{col 46}{space 3}0.000{col 54}{space 4} .0225241{col 67}{space 3} .0549145
{txt}{space 4}2006 13  {c |}{col 14}{res}{space 2} .0377456{col 26}{space 2} .0082066{col 37}{space 1}    4.60{col 46}{space 3}0.000{col 54}{space 4} .0216607{col 67}{space 3} .0538305
{txt}{space 4}2006 14  {c |}{col 14}{res}{space 2}-.0172466{col 26}{space 2} .0090771{col 37}{space 1}   -1.90{col 46}{space 3}0.057{col 54}{space 4}-.0350378{col 67}{space 3} .0005446
{txt}{space 4}2007  2  {c |}{col 14}{res}{space 2}-.1401228{col 26}{space 2} .0576214{col 37}{space 1}   -2.43{col 46}{space 3}0.015{col 54}{space 4}-.2530612{col 67}{space 3}-.0271844
{txt}{space 4}2007  3  {c |}{col 14}{res}{space 2}-.1560845{col 26}{space 2} .0577216{col 37}{space 1}   -2.70{col 46}{space 3}0.007{col 54}{space 4}-.2692193{col 67}{space 3}-.0429497
{txt}{space 4}2007  4  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  5  {c |}{col 14}{res}{space 2}-.1212329{col 26}{space 2} .0577301{col 37}{space 1}   -2.10{col 46}{space 3}0.036{col 54}{space 4}-.2343843{col 67}{space 3}-.0080815
{txt}{space 4}2007  6  {c |}{col 14}{res}{space 2}-.1164231{col 26}{space 2} .0588144{col 37}{space 1}   -1.98{col 46}{space 3}0.048{col 54}{space 4}-.2316997{col 67}{space 3}-.0011465
{txt}{space 4}2007  7  {c |}{col 14}{res}{space 2} -.156563{col 26}{space 2} .0578654{col 37}{space 1}   -2.71{col 46}{space 3}0.007{col 54}{space 4}-.2699797{col 67}{space 3}-.0431464
{txt}{space 4}2007  8  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  9  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 10  {c |}{col 14}{res}{space 2}-.1302718{col 26}{space 2} .0578417{col 37}{space 1}   -2.25{col 46}{space 3}0.024{col 54}{space 4} -.243642{col 67}{space 3}-.0169017
{txt}{space 4}2007 11  {c |}{col 14}{res}{space 2}-.1398397{col 26}{space 2} .0583558{col 37}{space 1}   -2.40{col 46}{space 3}0.017{col 54}{space 4}-.2542175{col 67}{space 3}-.0254619
{txt}{space 4}2007 12  {c |}{col 14}{res}{space 2}-.1067987{col 26}{space 2}  .057967{col 37}{space 1}   -1.84{col 46}{space 3}0.065{col 54}{space 4}-.2204143{col 67}{space 3}  .006817
{txt}{space 4}2007 13  {c |}{col 14}{res}{space 2}-.0966739{col 26}{space 2} .0579614{col 37}{space 1}   -1.67{col 46}{space 3}0.095{col 54}{space 4}-.2102785{col 67}{space 3} .0169308
{txt}{space 4}2007 14  {c |}{col 14}{res}{space 2}-.1509212{col 26}{space 2} .0581064{col 37}{space 1}   -2.60{col 46}{space 3}0.009{col 54}{space 4}-.2648101{col 67}{space 3}-.0370324
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .0986145{col 26}{space 2} .0162978{col 37}{space 1}    6.05{col 46}{space 3}0.000{col 54}{space 4} .0666706{col 67}{space 3} .1305584
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .11866729
{txt}     sigma_e {c |} {res} .05420141
{txt}         rho {c |} {res} .82738887{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}8875{txt}, {res}56164{txt}) = {res}   16.31         {txt}Prob > F = {res}0.0000

{com}. xtreg oilseedrapeuaa energydum farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity ln_c_ret_ha i.year year#mscode, fe
{txt}note: 2007.year omitted because of collinearity
note: 1999b.year#5.mscode omitted because of collinearity
note: 1999b.year#6.mscode omitted because of collinearity
note: 1999b.year#7.mscode omitted because of collinearity
note: 1999b.year#10.mscode omitted because of collinearity
note: 1999b.year#12.mscode omitted because of collinearity
note: 1999b.year#13.mscode omitted because of collinearity
note: 2000.year#3.mscode omitted because of collinearity
note: 2000.year#14.mscode omitted because of collinearity
note: 2003.year#2.mscode omitted because of collinearity
note: 2005.year#11.mscode omitted because of collinearity
note: 2007.year#4.mscode omitted because of collinearity
note: 2007.year#8.mscode omitted because of collinearity
note: 2007.year#9.mscode omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    65161
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}     8876

{txt}R-sq:  within  = {res}0.0549                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0706                                        {txt}avg = {res}      7.3
{txt}       overall = {res}0.0591                                        {txt}max = {res}        9

                                                {txt}F({res}121{txt},{res}56164{txt})       = {res}    26.98
{txt}corr(u_i, Xb)  = {res}-0.5566                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}oilseedrap~a{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2} 33.77251{col 26}{space 2} 12.01341{col 37}{space 1}    2.81{col 46}{space 3}0.005{col 54}{space 4} 10.22614{col 67}{space 3} 57.31887
{txt}farmsrepre~d {c |}{col 14}{res}{space 2} .0020562{col 26}{space 2} .0010872{col 37}{space 1}    1.89{col 46}{space 3}0.059{col 54}{space 4}-.0000748{col 67}{space 3} .0041872
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .9219568{col 26}{space 2}  .121305{col 37}{space 1}    7.60{col 46}{space 3}0.000{col 54}{space 4} .6841983{col 67}{space 3} 1.159715
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.2202946{col 26}{space 2} .0055685{col 37}{space 1}  -39.56{col 46}{space 3}0.000{col 54}{space 4} -.231209{col 67}{space 3}-.2093802
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .2513801{col 26}{space 2} .2236287{col 37}{space 1}    1.12{col 46}{space 3}0.261{col 54}{space 4}-.1869336{col 67}{space 3} .6896938
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0040603{col 26}{space 2} .0192355{col 37}{space 1}   -0.21{col 46}{space 3}0.833{col 54}{space 4}-.0417621{col 67}{space 3} .0336415
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} .3038626{col 26}{space 2} .3590518{col 37}{space 1}    0.85{col 46}{space 3}0.397{col 54}{space 4}-.3998813{col 67}{space 3} 1.007606
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .2434213{col 26}{space 2} .1654107{col 37}{space 1}    1.47{col 46}{space 3}0.141{col 54}{space 4}-.0807846{col 67}{space 3} .5676273
{txt}{space 3}intensity {c |}{col 14}{res}{space 2} 4.285996{col 26}{space 2}  1.14608{col 37}{space 1}    3.74{col 46}{space 3}0.000{col 54}{space 4} 2.039671{col 67}{space 3} 6.532321
{txt}{space 1}ln_c_ret_ha {c |}{col 14}{res}{space 2} .2709091{col 26}{space 2} .1874774{col 37}{space 1}    1.45{col 46}{space 3}0.148{col 54}{space 4}-.0965478{col 67}{space 3}  .638366
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-5.557106{col 26}{space 2} 1.403303{col 37}{space 1}   -3.96{col 46}{space 3}0.000{col 54}{space 4}-8.307589{col 67}{space 3}-2.806624
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-7.421989{col 26}{space 2} 1.337635{col 37}{space 1}   -5.55{col 46}{space 3}0.000{col 54}{space 4}-10.04376{col 67}{space 3}-4.800217
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-5.724836{col 26}{space 2} 1.307313{col 37}{space 1}   -4.38{col 46}{space 3}0.000{col 54}{space 4}-8.287178{col 67}{space 3}-3.162494
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-3.032672{col 26}{space 2} 1.322129{col 37}{space 1}   -2.29{col 46}{space 3}0.022{col 54}{space 4}-5.624054{col 67}{space 3}-.4412903
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-34.43277{col 26}{space 2} 11.99151{col 37}{space 1}   -2.87{col 46}{space 3}0.004{col 54}{space 4}-57.93621{col 67}{space 3}-10.92933
{txt}{space 7}2005  {c |}{col 14}{res}{space 2} -36.3607{col 26}{space 2} 11.99144{col 37}{space 1}   -3.03{col 46}{space 3}0.002{col 54}{space 4}  -59.864{col 67}{space 3}-12.85739
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}-34.02747{col 26}{space 2} 11.98946{col 37}{space 1}   -2.84{col 46}{space 3}0.005{col 54}{space 4}-57.52689{col 67}{space 3}-10.52804
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 1}year#mscode {c |}
{space 4}1999  2  {c |}{col 14}{res}{space 2} -1.41282{col 26}{space 2} 1.397875{col 37}{space 1}   -1.01{col 46}{space 3}0.312{col 54}{space 4}-4.152664{col 67}{space 3} 1.327024
{txt}{space 4}1999  3  {c |}{col 14}{res}{space 2}-5.457141{col 26}{space 2} 1.544463{col 37}{space 1}   -3.53{col 46}{space 3}0.000{col 54}{space 4}-8.484297{col 67}{space 3}-2.429984
{txt}{space 4}1999  4  {c |}{col 14}{res}{space 2} 36.76627{col 26}{space 2} 12.02321{col 37}{space 1}    3.06{col 46}{space 3}0.002{col 54}{space 4}  13.2007{col 67}{space 3} 60.33184
{txt}{space 4}1999  5  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  6  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  7  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  8  {c |}{col 14}{res}{space 2} 33.09952{col 26}{space 2} 12.46063{col 37}{space 1}    2.66{col 46}{space 3}0.008{col 54}{space 4} 8.676597{col 67}{space 3} 57.52243
{txt}{space 4}1999  9  {c |}{col 14}{res}{space 2} 34.26739{col 26}{space 2} 12.12555{col 37}{space 1}    2.83{col 46}{space 3}0.005{col 54}{space 4} 10.50124{col 67}{space 3} 58.03353
{txt}{space 4}1999 10  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999 11  {c |}{col 14}{res}{space 2}-.3263403{col 26}{space 2} 2.473295{col 37}{space 1}   -0.13{col 46}{space 3}0.895{col 54}{space 4}-5.174013{col 67}{space 3} 4.521333
{txt}{space 4}1999 12  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999 13  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999 14  {c |}{col 14}{res}{space 2}-3.574573{col 26}{space 2} 2.337404{col 37}{space 1}   -1.53{col 46}{space 3}0.126{col 54}{space 4}-8.155898{col 67}{space 3} 1.006753
{txt}{space 4}2000  2  {c |}{col 14}{res}{space 2}-.7071896{col 26}{space 2} 1.269214{col 37}{space 1}   -0.56{col 46}{space 3}0.577{col 54}{space 4}-3.194856{col 67}{space 3} 1.780477
{txt}{space 4}2000  3  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2000  4  {c |}{col 14}{res}{space 2} 40.99809{col 26}{space 2} 12.01247{col 37}{space 1}    3.41{col 46}{space 3}0.001{col 54}{space 4} 17.45358{col 67}{space 3}  64.5426
{txt}{space 4}2000  5  {c |}{col 14}{res}{space 2}  3.48806{col 26}{space 2} 1.469439{col 37}{space 1}    2.37{col 46}{space 3}0.018{col 54}{space 4} .6079512{col 67}{space 3} 6.368169
{txt}{space 4}2000  6  {c |}{col 14}{res}{space 2} 5.168488{col 26}{space 2} 2.895149{col 37}{space 1}    1.79{col 46}{space 3}0.074{col 54}{space 4}-.5060211{col 67}{space 3}   10.843
{txt}{space 4}2000  7  {c |}{col 14}{res}{space 2} 5.112829{col 26}{space 2} 1.713669{col 37}{space 1}    2.98{col 46}{space 3}0.003{col 54}{space 4} 1.754026{col 67}{space 3} 8.471631
{txt}{space 4}2000  8  {c |}{col 14}{res}{space 2} 36.08213{col 26}{space 2} 12.39513{col 37}{space 1}    2.91{col 46}{space 3}0.004{col 54}{space 4} 11.78761{col 67}{space 3} 60.37666
{txt}{space 4}2000  9  {c |}{col 14}{res}{space 2} 39.72896{col 26}{space 2} 12.11592{col 37}{space 1}    3.28{col 46}{space 3}0.001{col 54}{space 4} 15.98169{col 67}{space 3} 63.47623
{txt}{space 4}2000 10  {c |}{col 14}{res}{space 2} 4.766562{col 26}{space 2} 1.657158{col 37}{space 1}    2.88{col 46}{space 3}0.004{col 54}{space 4} 1.518522{col 67}{space 3} 8.014601
{txt}{space 4}2000 11  {c |}{col 14}{res}{space 2} 6.422943{col 26}{space 2} 2.327011{col 37}{space 1}    2.76{col 46}{space 3}0.006{col 54}{space 4} 1.861987{col 67}{space 3}  10.9839
{txt}{space 4}2000 12  {c |}{col 14}{res}{space 2} 5.515369{col 26}{space 2} 1.841885{col 37}{space 1}    2.99{col 46}{space 3}0.003{col 54}{space 4} 1.905264{col 67}{space 3} 9.125475
{txt}{space 4}2000 13  {c |}{col 14}{res}{space 2} 3.973619{col 26}{space 2} 1.816484{col 37}{space 1}    2.19{col 46}{space 3}0.029{col 54}{space 4} .4132992{col 67}{space 3} 7.533938
{txt}{space 4}2000 14  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2001  2  {c |}{col 14}{res}{space 2} 1.740794{col 26}{space 2} 1.149496{col 37}{space 1}    1.51{col 46}{space 3}0.130{col 54}{space 4}-.5122243{col 67}{space 3} 3.993813
{txt}{space 4}2001  3  {c |}{col 14}{res}{space 2} 1.623867{col 26}{space 2} 1.351452{col 37}{space 1}    1.20{col 46}{space 3}0.230{col 54}{space 4}-1.024987{col 67}{space 3} 4.272722
{txt}{space 4}2001  4  {c |}{col 14}{res}{space 2} 43.79744{col 26}{space 2} 12.00445{col 37}{space 1}    3.65{col 46}{space 3}0.000{col 54}{space 4} 20.26865{col 67}{space 3} 67.32623
{txt}{space 4}2001  5  {c |}{col 14}{res}{space 2} 4.800292{col 26}{space 2} 1.405103{col 37}{space 1}    3.42{col 46}{space 3}0.001{col 54}{space 4} 2.046281{col 67}{space 3} 7.554303
{txt}{space 4}2001  6  {c |}{col 14}{res}{space 2}  6.85628{col 26}{space 2}  2.83372{col 37}{space 1}    2.42{col 46}{space 3}0.016{col 54}{space 4} 1.302171{col 67}{space 3} 12.41039
{txt}{space 4}2001  7  {c |}{col 14}{res}{space 2} 6.750004{col 26}{space 2} 1.630017{col 37}{space 1}    4.14{col 46}{space 3}0.000{col 54}{space 4} 3.555161{col 67}{space 3} 9.944847
{txt}{space 4}2001  8  {c |}{col 14}{res}{space 2} 38.42576{col 26}{space 2} 12.33654{col 37}{space 1}    3.11{col 46}{space 3}0.002{col 54}{space 4} 14.24605{col 67}{space 3} 62.60546
{txt}{space 4}2001  9  {c |}{col 14}{res}{space 2} 41.44088{col 26}{space 2} 12.07942{col 37}{space 1}    3.43{col 46}{space 3}0.001{col 54}{space 4} 17.76514{col 67}{space 3} 65.11662
{txt}{space 4}2001 10  {c |}{col 14}{res}{space 2} 6.792599{col 26}{space 2} 1.593077{col 37}{space 1}    4.26{col 46}{space 3}0.000{col 54}{space 4} 3.670158{col 67}{space 3}  9.91504
{txt}{space 4}2001 11  {c |}{col 14}{res}{space 2} 7.817037{col 26}{space 2} 2.258002{col 37}{space 1}    3.46{col 46}{space 3}0.001{col 54}{space 4} 3.391339{col 67}{space 3} 12.24274
{txt}{space 4}2001 12  {c |}{col 14}{res}{space 2} 7.259051{col 26}{space 2} 1.793429{col 37}{space 1}    4.05{col 46}{space 3}0.000{col 54}{space 4} 3.743918{col 67}{space 3} 10.77418
{txt}{space 4}2001 13  {c |}{col 14}{res}{space 2} 5.489815{col 26}{space 2} 1.753072{col 37}{space 1}    3.13{col 46}{space 3}0.002{col 54}{space 4} 2.053783{col 67}{space 3} 8.925848
{txt}{space 4}2001 14  {c |}{col 14}{res}{space 2}-1.004384{col 26}{space 2} 1.948712{col 37}{space 1}   -0.52{col 46}{space 3}0.606{col 54}{space 4}-4.823871{col 67}{space 3} 2.815103
{txt}{space 4}2002  2  {c |}{col 14}{res}{space 2} 2.062239{col 26}{space 2} 1.071782{col 37}{space 1}    1.92{col 46}{space 3}0.054{col 54}{space 4}-.0384602{col 67}{space 3} 4.162939
{txt}{space 4}2002  3  {c |}{col 14}{res}{space 2}-.1150502{col 26}{space 2} 1.323111{col 37}{space 1}   -0.09{col 46}{space 3}0.931{col 54}{space 4}-2.708357{col 67}{space 3} 2.478257
{txt}{space 4}2002  4  {c |}{col 14}{res}{space 2} 41.30893{col 26}{space 2} 11.99996{col 37}{space 1}    3.44{col 46}{space 3}0.001{col 54}{space 4} 17.78892{col 67}{space 3} 64.82893
{txt}{space 4}2002  5  {c |}{col 14}{res}{space 2}  1.18442{col 26}{space 2} 1.374463{col 37}{space 1}    0.86{col 46}{space 3}0.389{col 54}{space 4}-1.509536{col 67}{space 3} 3.878376
{txt}{space 4}2002  6  {c |}{col 14}{res}{space 2} 5.344626{col 26}{space 2} 2.690332{col 37}{space 1}    1.99{col 46}{space 3}0.047{col 54}{space 4} .0715592{col 67}{space 3} 10.61769
{txt}{space 4}2002  7  {c |}{col 14}{res}{space 2} 3.399528{col 26}{space 2} 1.587704{col 37}{space 1}    2.14{col 46}{space 3}0.032{col 54}{space 4} .2876173{col 67}{space 3} 6.511438
{txt}{space 4}2002  8  {c |}{col 14}{res}{space 2}   36.278{col 26}{space 2} 12.25793{col 37}{space 1}    2.96{col 46}{space 3}0.003{col 54}{space 4} 12.25237{col 67}{space 3} 60.30362
{txt}{space 4}2002  9  {c |}{col 14}{res}{space 2} 39.92864{col 26}{space 2}  12.0723{col 37}{space 1}    3.31{col 46}{space 3}0.001{col 54}{space 4} 16.26686{col 67}{space 3} 63.59042
{txt}{space 4}2002 10  {c |}{col 14}{res}{space 2} 5.417497{col 26}{space 2} 1.575277{col 37}{space 1}    3.44{col 46}{space 3}0.001{col 54}{space 4} 2.329944{col 67}{space 3}  8.50505
{txt}{space 4}2002 11  {c |}{col 14}{res}{space 2} 5.174213{col 26}{space 2} 2.156743{col 37}{space 1}    2.40{col 46}{space 3}0.016{col 54}{space 4} .9469827{col 67}{space 3} 9.401443
{txt}{space 4}2002 12  {c |}{col 14}{res}{space 2} 5.668628{col 26}{space 2} 1.749392{col 37}{space 1}    3.24{col 46}{space 3}0.001{col 54}{space 4} 2.239809{col 67}{space 3} 9.097448
{txt}{space 4}2002 13  {c |}{col 14}{res}{space 2}  6.28758{col 26}{space 2} 1.735028{col 37}{space 1}    3.62{col 46}{space 3}0.000{col 54}{space 4} 2.886913{col 67}{space 3} 9.688246
{txt}{space 4}2002 14  {c |}{col 14}{res}{space 2}-6.019935{col 26}{space 2} 1.914662{col 37}{space 1}   -3.14{col 46}{space 3}0.002{col 54}{space 4}-9.772685{col 67}{space 3}-2.267185
{txt}{space 4}2003  2  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2003  3  {c |}{col 14}{res}{space 2}-3.147018{col 26}{space 2} 1.335889{col 37}{space 1}   -2.36{col 46}{space 3}0.018{col 54}{space 4}-5.765368{col 67}{space 3}-.5286674
{txt}{space 4}2003  4  {c |}{col 14}{res}{space 2} 38.42256{col 26}{space 2} 12.00131{col 37}{space 1}    3.20{col 46}{space 3}0.001{col 54}{space 4} 14.89991{col 67}{space 3}  61.9452
{txt}{space 4}2003  5  {c |}{col 14}{res}{space 2}-.3500301{col 26}{space 2} 1.388976{col 37}{space 1}   -0.25{col 46}{space 3}0.801{col 54}{space 4}-3.072431{col 67}{space 3} 2.372371
{txt}{space 4}2003  6  {c |}{col 14}{res}{space 2} 3.088336{col 26}{space 2} 2.712881{col 37}{space 1}    1.14{col 46}{space 3}0.255{col 54}{space 4}-2.228928{col 67}{space 3} 8.405599
{txt}{space 4}2003  7  {c |}{col 14}{res}{space 2}-1.096801{col 26}{space 2} 1.714817{col 37}{space 1}   -0.64{col 46}{space 3}0.522{col 54}{space 4}-4.457852{col 67}{space 3}  2.26425
{txt}{space 4}2003  8  {c |}{col 14}{res}{space 2} 34.07185{col 26}{space 2} 12.25718{col 37}{space 1}    2.78{col 46}{space 3}0.005{col 54}{space 4}  10.0477{col 67}{space 3}   58.096
{txt}{space 4}2003  9  {c |}{col 14}{res}{space 2}  37.1933{col 26}{space 2} 12.07445{col 37}{space 1}    3.08{col 46}{space 3}0.002{col 54}{space 4}  13.5273{col 67}{space 3}  60.8593
{txt}{space 4}2003 10  {c |}{col 14}{res}{space 2} 2.580338{col 26}{space 2} 1.592128{col 37}{space 1}    1.62{col 46}{space 3}0.105{col 54}{space 4}-.5402427{col 67}{space 3} 5.700918
{txt}{space 4}2003 11  {c |}{col 14}{res}{space 2} 2.715192{col 26}{space 2} 2.164142{col 37}{space 1}    1.25{col 46}{space 3}0.210{col 54}{space 4} -1.52654{col 67}{space 3} 6.956924
{txt}{space 4}2003 12  {c |}{col 14}{res}{space 2} 4.451054{col 26}{space 2} 1.757029{col 37}{space 1}    2.53{col 46}{space 3}0.011{col 54}{space 4} 1.007267{col 67}{space 3} 7.894842
{txt}{space 4}2003 13  {c |}{col 14}{res}{space 2} 2.497281{col 26}{space 2} 1.744498{col 37}{space 1}    1.43{col 46}{space 3}0.152{col 54}{space 4}-.9219463{col 67}{space 3} 5.916509
{txt}{space 4}2003 14  {c |}{col 14}{res}{space 2}-4.075959{col 26}{space 2} 1.922073{col 37}{space 1}   -2.12{col 46}{space 3}0.034{col 54}{space 4}-7.843234{col 67}{space 3}-.3086831
{txt}{space 4}2004  2  {c |}{col 14}{res}{space 2}-1.466987{col 26}{space 2} 1.075139{col 37}{space 1}   -1.36{col 46}{space 3}0.172{col 54}{space 4}-3.574266{col 67}{space 3} .6402929
{txt}{space 4}2004  3  {c |}{col 14}{res}{space 2} -5.71407{col 26}{space 2} 1.322491{col 37}{space 1}   -4.32{col 46}{space 3}0.000{col 54}{space 4} -8.30616{col 67}{space 3} -3.12198
{txt}{space 4}2004  4  {c |}{col 14}{res}{space 2} 36.15393{col 26}{space 2} 12.00007{col 37}{space 1}    3.01{col 46}{space 3}0.003{col 54}{space 4} 12.63371{col 67}{space 3} 59.67415
{txt}{space 4}2004  5  {c |}{col 14}{res}{space 2}-2.998823{col 26}{space 2} 1.374483{col 37}{space 1}   -2.18{col 46}{space 3}0.029{col 54}{space 4}-5.692818{col 67}{space 3}-.3048269
{txt}{space 4}2004  6  {c |}{col 14}{res}{space 2} .3618049{col 26}{space 2} 2.690012{col 37}{space 1}    0.13{col 46}{space 3}0.893{col 54}{space 4}-4.910635{col 67}{space 3} 5.634245
{txt}{space 4}2004  7  {c |}{col 14}{res}{space 2}-1.715019{col 26}{space 2} 1.622306{col 37}{space 1}   -1.06{col 46}{space 3}0.290{col 54}{space 4}-4.894748{col 67}{space 3}  1.46471
{txt}{space 4}2004  8  {c |}{col 14}{res}{space 2} 32.58425{col 26}{space 2} 12.25123{col 37}{space 1}    2.66{col 46}{space 3}0.008{col 54}{space 4} 8.571762{col 67}{space 3} 56.59673
{txt}{space 4}2004  9  {c |}{col 14}{res}{space 2} 35.00023{col 26}{space 2} 12.07339{col 37}{space 1}    2.90{col 46}{space 3}0.004{col 54}{space 4} 11.33632{col 67}{space 3} 58.66414
{txt}{space 4}2004 10  {c |}{col 14}{res}{space 2} .1680386{col 26}{space 2} 1.570758{col 37}{space 1}    0.11{col 46}{space 3}0.915{col 54}{space 4}-2.910657{col 67}{space 3} 3.246735
{txt}{space 4}2004 11  {c |}{col 14}{res}{space 2}-.3307423{col 26}{space 2} 2.155039{col 37}{space 1}   -0.15{col 46}{space 3}0.878{col 54}{space 4}-4.554633{col 67}{space 3} 3.893148
{txt}{space 4}2004 12  {c |}{col 14}{res}{space 2} 2.462068{col 26}{space 2} 1.747198{col 37}{space 1}    1.41{col 46}{space 3}0.159{col 54}{space 4}-.9624514{col 67}{space 3} 5.886588
{txt}{space 4}2004 13  {c |}{col 14}{res}{space 2} 2.737578{col 26}{space 2} 1.728322{col 37}{space 1}    1.58{col 46}{space 3}0.113{col 54}{space 4}-.6499438{col 67}{space 3} 6.125099
{txt}{space 4}2004 14  {c |}{col 14}{res}{space 2}-7.040966{col 26}{space 2} 1.908793{col 37}{space 1}   -3.69{col 46}{space 3}0.000{col 54}{space 4}-10.78221{col 67}{space 3}-3.299721
{txt}{space 4}2005  2  {c |}{col 14}{res}{space 2} 2.361762{col 26}{space 2} 1.075408{col 37}{space 1}    2.20{col 46}{space 3}0.028{col 54}{space 4} .2539559{col 67}{space 3} 4.469568
{txt}{space 4}2005  3  {c |}{col 14}{res}{space 2}-3.704736{col 26}{space 2} 1.320422{col 37}{space 1}   -2.81{col 46}{space 3}0.005{col 54}{space 4}-6.292771{col 67}{space 3}  -1.1167
{txt}{space 4}2005  4  {c |}{col 14}{res}{space 2} 38.06089{col 26}{space 2} 12.00069{col 37}{space 1}    3.17{col 46}{space 3}0.002{col 54}{space 4} 14.53947{col 67}{space 3} 61.58231
{txt}{space 4}2005  5  {c |}{col 14}{res}{space 2} .6575023{col 26}{space 2} 1.370877{col 37}{space 1}    0.48{col 46}{space 3}0.631{col 54}{space 4}-2.029426{col 67}{space 3} 3.344431
{txt}{space 4}2005  6  {c |}{col 14}{res}{space 2} 2.717766{col 26}{space 2}  2.69334{col 37}{space 1}    1.01{col 46}{space 3}0.313{col 54}{space 4}-2.561196{col 67}{space 3} 7.996729
{txt}{space 4}2005  7  {c |}{col 14}{res}{space 2} .3525858{col 26}{space 2} 1.616127{col 37}{space 1}    0.22{col 46}{space 3}0.827{col 54}{space 4}-2.815034{col 67}{space 3} 3.520205
{txt}{space 4}2005  8  {c |}{col 14}{res}{space 2} 33.64033{col 26}{space 2} 12.27827{col 37}{space 1}    2.74{col 46}{space 3}0.006{col 54}{space 4} 9.574838{col 67}{space 3} 57.70582
{txt}{space 4}2005  9  {c |}{col 14}{res}{space 2} 37.08097{col 26}{space 2} 12.07253{col 37}{space 1}    3.07{col 46}{space 3}0.002{col 54}{space 4} 13.41874{col 67}{space 3}  60.7432
{txt}{space 4}2005 10  {c |}{col 14}{res}{space 2} 2.589878{col 26}{space 2} 1.566666{col 37}{space 1}    1.65{col 46}{space 3}0.098{col 54}{space 4}-.4807971{col 67}{space 3} 5.660553
{txt}{space 4}2005 11  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2005 12  {c |}{col 14}{res}{space 2} 4.708232{col 26}{space 2} 1.741245{col 37}{space 1}    2.70{col 46}{space 3}0.007{col 54}{space 4}  1.29538{col 67}{space 3} 8.121083
{txt}{space 4}2005 13  {c |}{col 14}{res}{space 2}  5.64777{col 26}{space 2} 1.730084{col 37}{space 1}    3.26{col 46}{space 3}0.001{col 54}{space 4} 2.256794{col 67}{space 3} 9.038745
{txt}{space 4}2005 14  {c |}{col 14}{res}{space 2}-2.011905{col 26}{space 2} 1.906371{col 37}{space 1}   -1.06{col 46}{space 3}0.291{col 54}{space 4}-5.748404{col 67}{space 3} 1.724593
{txt}{space 4}2006  2  {c |}{col 14}{res}{space 2} 3.218633{col 26}{space 2}  1.05105{col 37}{space 1}    3.06{col 46}{space 3}0.002{col 54}{space 4} 1.158569{col 67}{space 3} 5.278698
{txt}{space 4}2006  3  {c |}{col 14}{res}{space 2}-5.965298{col 26}{space 2} 1.295791{col 37}{space 1}   -4.60{col 46}{space 3}0.000{col 54}{space 4}-8.505057{col 67}{space 3} -3.42554
{txt}{space 4}2006  4  {c |}{col 14}{res}{space 2} 35.42025{col 26}{space 2} 11.99811{col 37}{space 1}    2.95{col 46}{space 3}0.003{col 54}{space 4} 11.90389{col 67}{space 3} 58.93661
{txt}{space 4}2006  5  {c |}{col 14}{res}{space 2}-.4156884{col 26}{space 2}  1.34491{col 37}{space 1}   -0.31{col 46}{space 3}0.757{col 54}{space 4} -3.05172{col 67}{space 3} 2.220343
{txt}{space 4}2006  6  {c |}{col 14}{res}{space 2}  .645632{col 26}{space 2}   2.6752{col 37}{space 1}    0.24{col 46}{space 3}0.809{col 54}{space 4}-4.597778{col 67}{space 3} 5.889041
{txt}{space 4}2006  7  {c |}{col 14}{res}{space 2} .1212719{col 26}{space 2}  1.56734{col 37}{space 1}    0.08{col 46}{space 3}0.938{col 54}{space 4}-2.950724{col 67}{space 3} 3.193268
{txt}{space 4}2006  8  {c |}{col 14}{res}{space 2} 34.75442{col 26}{space 2} 12.25828{col 37}{space 1}    2.84{col 46}{space 3}0.005{col 54}{space 4} 10.72812{col 67}{space 3} 58.78072
{txt}{space 4}2006  9  {c |}{col 14}{res}{space 2} 33.99821{col 26}{space 2} 12.06943{col 37}{space 1}    2.82{col 46}{space 3}0.005{col 54}{space 4} 10.34205{col 67}{space 3} 57.65437
{txt}{space 4}2006 10  {c |}{col 14}{res}{space 2} 1.221036{col 26}{space 2} 1.539707{col 37}{space 1}    0.79{col 46}{space 3}0.428{col 54}{space 4}-1.796799{col 67}{space 3} 4.238871
{txt}{space 4}2006 11  {c |}{col 14}{res}{space 2} -3.24874{col 26}{space 2} 2.146491{col 37}{space 1}   -1.51{col 46}{space 3}0.130{col 54}{space 4}-7.455876{col 67}{space 3} .9583949
{txt}{space 4}2006 12  {c |}{col 14}{res}{space 2} 3.845012{col 26}{space 2} 1.720698{col 37}{space 1}    2.23{col 46}{space 3}0.025{col 54}{space 4} .4724334{col 67}{space 3} 7.217591
{txt}{space 4}2006 13  {c |}{col 14}{res}{space 2} 3.836011{col 26}{space 2} 1.708978{col 37}{space 1}    2.24{col 46}{space 3}0.025{col 54}{space 4} .4864032{col 67}{space 3} 7.185619
{txt}{space 4}2006 14  {c |}{col 14}{res}{space 2}-4.863447{col 26}{space 2}  1.89027{col 37}{space 1}   -2.57{col 46}{space 3}0.010{col 54}{space 4}-8.568388{col 67}{space 3}-1.158506
{txt}{space 4}2007  2  {c |}{col 14}{res}{space 2}-37.52596{col 26}{space 2}  11.9994{col 37}{space 1}   -3.13{col 46}{space 3}0.002{col 54}{space 4}-61.04486{col 67}{space 3}-14.00706
{txt}{space 4}2007  3  {c |}{col 14}{res}{space 2}-39.94487{col 26}{space 2} 12.02027{col 37}{space 1}   -3.32{col 46}{space 3}0.001{col 54}{space 4}-63.50467{col 67}{space 3}-16.38507
{txt}{space 4}2007  4  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  5  {c |}{col 14}{res}{space 2}-32.80907{col 26}{space 2} 12.02203{col 37}{space 1}   -2.73{col 46}{space 3}0.006{col 54}{space 4}-56.37233{col 67}{space 3}-9.245816
{txt}{space 4}2007  6  {c |}{col 14}{res}{space 2}-32.77724{col 26}{space 2} 12.24783{col 37}{space 1}   -2.68{col 46}{space 3}0.007{col 54}{space 4}-56.78306{col 67}{space 3}-8.771413
{txt}{space 4}2007  7  {c |}{col 14}{res}{space 2}-36.14949{col 26}{space 2} 12.05021{col 37}{space 1}   -3.00{col 46}{space 3}0.003{col 54}{space 4}-59.76798{col 67}{space 3}  -12.531
{txt}{space 4}2007  8  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  9  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 10  {c |}{col 14}{res}{space 2}-33.79088{col 26}{space 2} 12.04528{col 37}{space 1}   -2.81{col 46}{space 3}0.005{col 54}{space 4} -57.3997{col 67}{space 3}-10.18207
{txt}{space 4}2007 11  {c |}{col 14}{res}{space 2}-35.14374{col 26}{space 2} 12.15233{col 37}{space 1}   -2.89{col 46}{space 3}0.004{col 54}{space 4}-58.96239{col 67}{space 3}-11.32509
{txt}{space 4}2007 12  {c |}{col 14}{res}{space 2}-31.59718{col 26}{space 2} 12.07136{col 37}{space 1}   -2.62{col 46}{space 3}0.009{col 54}{space 4}-55.25712{col 67}{space 3}-7.937243
{txt}{space 4}2007 13  {c |}{col 14}{res}{space 2}-29.51782{col 26}{space 2} 12.07019{col 37}{space 1}   -2.45{col 46}{space 3}0.014{col 54}{space 4}-53.17547{col 67}{space 3}-5.860176
{txt}{space 4}2007 14  {c |}{col 14}{res}{space 2}-38.90946{col 26}{space 2} 12.10039{col 37}{space 1}   -3.22{col 46}{space 3}0.001{col 54}{space 4} -62.6263{col 67}{space 3}-15.19263
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-1.025374{col 26}{space 2} 3.393952{col 37}{space 1}   -0.30{col 46}{space 3}0.763{col 54}{space 4}-7.677541{col 67}{space 3} 5.626793
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 49.137569
{txt}     sigma_e {c |} {res} 11.287195
{txt}         rho {c |} {res} .94987974{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}8875{txt}, {res}56164{txt}) = {res}   51.37         {txt}Prob > F = {res}0.0000

{com}. gen edum_adop = energydum*adopter
{err}edum_adop already defined
{txt}{search r(110):r(110);}

{com}. xtreg osrape_prop energydum edum_adop adopter farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity ln_c_ret_ha i.year year#mscode
{txt}note: 2007.year omitted because of collinearity
{res}
{txt}Random-effects GLS regression                   Number of obs      = {res}    65161
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}     8876

{txt}R-sq:  within  = {res}0.0375                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.2740                                        {txt}avg = {res}      7.3
{txt}       overall = {res}0.2149                                        {txt}max = {res}        9

{txt}Random effects u_i ~ {res}Gaussian                   {txt}Wald chi2({res}136{txt})     = {res}  5678.72
{txt}corr(u_i, X)       = {res}0{txt} (assumed)                Prob > chi2        =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2} .0952362{col 26}{space 2} .0577534{col 37}{space 1}    1.65{col 46}{space 3}0.099{col 54}{space 4}-.0179583{col 67}{space 3} .2084307
{txt}{space 3}edum_adop {c |}{col 14}{res}{space 2} .0129859{col 26}{space 2} .0012047{col 37}{space 1}   10.78{col 46}{space 3}0.000{col 54}{space 4} .0106248{col 67}{space 3}  .015347
{txt}{space 5}adopter {c |}{col 14}{res}{space 2} .0495786{col 26}{space 2} .0024003{col 37}{space 1}   20.66{col 46}{space 3}0.000{col 54}{space 4} .0448741{col 67}{space 3}  .054283
{txt}farmsrepre~d {c |}{col 14}{res}{space 2} 6.86e-06{col 26}{space 2} 5.10e-06{col 37}{space 1}    1.35{col 46}{space 3}0.179{col 54}{space 4}-3.13e-06{col 67}{space 3} .0000168
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .0012939{col 26}{space 2} .0005086{col 37}{space 1}    2.54{col 46}{space 3}0.011{col 54}{space 4} .0002971{col 67}{space 3} .0022908
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0001902{col 26}{space 2} .0000225{col 37}{space 1}   -8.47{col 46}{space 3}0.000{col 54}{space 4}-.0002343{col 67}{space 3}-.0001462
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0020234{col 26}{space 2} .0008785{col 37}{space 1}   -2.30{col 46}{space 3}0.021{col 54}{space 4}-.0037452{col 67}{space 3}-.0003017
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0001776{col 26}{space 2}   .00009{col 37}{space 1}   -1.97{col 46}{space 3}0.048{col 54}{space 4} -.000354{col 67}{space 3}-1.24e-06
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} .0038385{col 26}{space 2} .0015852{col 37}{space 1}    2.42{col 46}{space 3}0.015{col 54}{space 4} .0007315{col 67}{space 3} .0069455
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0023239{col 26}{space 2} .0007781{col 37}{space 1}    2.99{col 46}{space 3}0.003{col 54}{space 4} .0007988{col 67}{space 3} .0038489
{txt}{space 3}intensity {c |}{col 14}{res}{space 2} .0415925{col 26}{space 2} .0050105{col 37}{space 1}    8.30{col 46}{space 3}0.000{col 54}{space 4} .0317721{col 67}{space 3} .0514129
{txt}{space 1}ln_c_ret_ha {c |}{col 14}{res}{space 2} .0007311{col 26}{space 2} .0008129{col 37}{space 1}    0.90{col 46}{space 3}0.368{col 54}{space 4}-.0008622{col 67}{space 3} .0023244
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0336106{col 26}{space 2} .0067544{col 37}{space 1}   -4.98{col 46}{space 3}0.000{col 54}{space 4} -.046849{col 67}{space 3}-.0203723
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0413686{col 26}{space 2} .0064249{col 37}{space 1}   -6.44{col 46}{space 3}0.000{col 54}{space 4}-.0539611{col 67}{space 3} -.028776
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0438994{col 26}{space 2} .0062722{col 37}{space 1}   -7.00{col 46}{space 3}0.000{col 54}{space 4}-.0561927{col 67}{space 3}-.0316061
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0284882{col 26}{space 2} .0063446{col 37}{space 1}   -4.49{col 46}{space 3}0.000{col 54}{space 4}-.0409235{col 67}{space 3} -.016053
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.1146951{col 26}{space 2} .0576441{col 37}{space 1}   -1.99{col 46}{space 3}0.047{col 54}{space 4}-.2276755{col 67}{space 3}-.0017147
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.1278215{col 26}{space 2} .0576437{col 37}{space 1}   -2.22{col 46}{space 3}0.027{col 54}{space 4}-.2408011{col 67}{space 3}-.0148419
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} -.114107{col 26}{space 2} .0576338{col 37}{space 1}   -1.98{col 46}{space 3}0.048{col 54}{space 4}-.2270671{col 67}{space 3}-.0011469
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 1}year#mscode {c |}
{space 4}1999  2  {c |}{col 14}{res}{space 2} .0252749{col 26}{space 2} .0072221{col 37}{space 1}    3.50{col 46}{space 3}0.000{col 54}{space 4} .0111197{col 67}{space 3}   .03943
{txt}{space 4}1999  3  {c |}{col 14}{res}{space 2}-.0635695{col 26}{space 2} .0077257{col 37}{space 1}   -8.23{col 46}{space 3}0.000{col 54}{space 4}-.0787117{col 67}{space 3}-.0484274
{txt}{space 4}1999  4  {c |}{col 14}{res}{space 2}-.0276984{col 26}{space 2} .0073817{col 37}{space 1}   -3.75{col 46}{space 3}0.000{col 54}{space 4}-.0421662{col 67}{space 3}-.0132305
{txt}{space 4}1999  5  {c |}{col 14}{res}{space 2} .0364824{col 26}{space 2} .0072185{col 37}{space 1}    5.05{col 46}{space 3}0.000{col 54}{space 4} .0223345{col 67}{space 3} .0506304
{txt}{space 4}1999  6  {c |}{col 14}{res}{space 2}-.0699844{col 26}{space 2} .0146222{col 37}{space 1}   -4.79{col 46}{space 3}0.000{col 54}{space 4}-.0986435{col 67}{space 3}-.0413253
{txt}{space 4}1999  7  {c |}{col 14}{res}{space 2} -.016081{col 26}{space 2} .0083473{col 37}{space 1}   -1.93{col 46}{space 3}0.054{col 54}{space 4}-.0324413{col 67}{space 3} .0002794
{txt}{space 4}1999  8  {c |}{col 14}{res}{space 2}-.0054427{col 26}{space 2} .0187337{col 37}{space 1}   -0.29{col 46}{space 3}0.771{col 54}{space 4}-.0421601{col 67}{space 3} .0312748
{txt}{space 4}1999  9  {c |}{col 14}{res}{space 2}-.0882977{col 26}{space 2} .0110033{col 37}{space 1}   -8.02{col 46}{space 3}0.000{col 54}{space 4}-.1098637{col 67}{space 3}-.0667316
{txt}{space 4}1999 10  {c |}{col 14}{res}{space 2}  .025311{col 26}{space 2} .0083651{col 37}{space 1}    3.03{col 46}{space 3}0.002{col 54}{space 4} .0089158{col 67}{space 3} .0417063
{txt}{space 4}1999 11  {c |}{col 14}{res}{space 2}-.0507411{col 26}{space 2} .0125238{col 37}{space 1}   -4.05{col 46}{space 3}0.000{col 54}{space 4}-.0752872{col 67}{space 3} -.026195
{txt}{space 4}1999 12  {c |}{col 14}{res}{space 2}-.0268527{col 26}{space 2} .0093839{col 37}{space 1}   -2.86{col 46}{space 3}0.004{col 54}{space 4}-.0452448{col 67}{space 3}-.0084605
{txt}{space 4}1999 13  {c |}{col 14}{res}{space 2}-.0346381{col 26}{space 2}  .009271{col 37}{space 1}   -3.74{col 46}{space 3}0.000{col 54}{space 4}-.0528089{col 67}{space 3}-.0164673
{txt}{space 4}1999 14  {c |}{col 14}{res}{space 2} .0010759{col 26}{space 2}  .010304{col 37}{space 1}    0.10{col 46}{space 3}0.917{col 54}{space 4}-.0191195{col 67}{space 3} .0212713
{txt}{space 4}2000  2  {c |}{col 14}{res}{space 2} .0417399{col 26}{space 2} .0066644{col 37}{space 1}    6.26{col 46}{space 3}0.000{col 54}{space 4}  .028678{col 67}{space 3} .0548018
{txt}{space 4}2000  3  {c |}{col 14}{res}{space 2}-.0324774{col 26}{space 2} .0072107{col 37}{space 1}   -4.50{col 46}{space 3}0.000{col 54}{space 4}-.0466102{col 67}{space 3}-.0183447
{txt}{space 4}2000  4  {c |}{col 14}{res}{space 2}-.0083309{col 26}{space 2} .0068354{col 37}{space 1}   -1.22{col 46}{space 3}0.223{col 54}{space 4}-.0217279{col 67}{space 3} .0050662
{txt}{space 4}2000  5  {c |}{col 14}{res}{space 2}  .055319{col 26}{space 2}  .006674{col 37}{space 1}    8.29{col 46}{space 3}0.000{col 54}{space 4} .0422383{col 67}{space 3} .0683998
{txt}{space 4}2000  6  {c |}{col 14}{res}{space 2}-.0395635{col 26}{space 2} .0140038{col 37}{space 1}   -2.83{col 46}{space 3}0.005{col 54}{space 4}-.0670104{col 67}{space 3}-.0121166
{txt}{space 4}2000  7  {c |}{col 14}{res}{space 2} .0061759{col 26}{space 2} .0078113{col 37}{space 1}    0.79{col 46}{space 3}0.429{col 54}{space 4} -.009134{col 67}{space 3} .0214858
{txt}{space 4}2000  8  {c |}{col 14}{res}{space 2} .0059565{col 26}{space 2} .0176076{col 37}{space 1}    0.34{col 46}{space 3}0.735{col 54}{space 4}-.0285537{col 67}{space 3} .0404667
{txt}{space 4}2000  9  {c |}{col 14}{res}{space 2}-.0556133{col 26}{space 2} .0106704{col 37}{space 1}   -5.21{col 46}{space 3}0.000{col 54}{space 4}-.0765268{col 67}{space 3}-.0346997
{txt}{space 4}2000 10  {c |}{col 14}{res}{space 2} .0407851{col 26}{space 2} .0078889{col 37}{space 1}    5.17{col 46}{space 3}0.000{col 54}{space 4} .0253232{col 67}{space 3}  .056247
{txt}{space 4}2000 11  {c |}{col 14}{res}{space 2}-.0124762{col 26}{space 2} .0119213{col 37}{space 1}   -1.05{col 46}{space 3}0.295{col 54}{space 4}-.0358415{col 67}{space 3} .0108891
{txt}{space 4}2000 12  {c |}{col 14}{res}{space 2} .0034801{col 26}{space 2} .0089021{col 37}{space 1}    0.39{col 46}{space 3}0.696{col 54}{space 4}-.0139678{col 67}{space 3}  .020928
{txt}{space 4}2000 13  {c |}{col 14}{res}{space 2} -.017522{col 26}{space 2} .0087479{col 37}{space 1}   -2.00{col 46}{space 3}0.045{col 54}{space 4}-.0346675{col 67}{space 3}-.0003766
{txt}{space 4}2000 14  {c |}{col 14}{res}{space 2} .0263659{col 26}{space 2} .0098471{col 37}{space 1}    2.68{col 46}{space 3}0.007{col 54}{space 4}  .007066{col 67}{space 3} .0456658
{txt}{space 4}2001  2  {c |}{col 14}{res}{space 2} .0490745{col 26}{space 2}   .00615{col 37}{space 1}    7.98{col 46}{space 3}0.000{col 54}{space 4} .0370206{col 67}{space 3} .0611283
{txt}{space 4}2001  3  {c |}{col 14}{res}{space 2}-.0298233{col 26}{space 2} .0066838{col 37}{space 1}   -4.46{col 46}{space 3}0.000{col 54}{space 4}-.0429234{col 67}{space 3}-.0167232
{txt}{space 4}2001  4  {c |}{col 14}{res}{space 2} .0060277{col 26}{space 2} .0063573{col 37}{space 1}    0.95{col 46}{space 3}0.343{col 54}{space 4}-.0064324{col 67}{space 3} .0184879
{txt}{space 4}2001  5  {c |}{col 14}{res}{space 2} .0567194{col 26}{space 2} .0061631{col 37}{space 1}    9.20{col 46}{space 3}0.000{col 54}{space 4}   .04464{col 67}{space 3} .0687988
{txt}{space 4}2001  6  {c |}{col 14}{res}{space 2}-.0408431{col 26}{space 2} .0135941{col 37}{space 1}   -3.00{col 46}{space 3}0.003{col 54}{space 4}-.0674871{col 67}{space 3}-.0141991
{txt}{space 4}2001  7  {c |}{col 14}{res}{space 2} .0192749{col 26}{space 2} .0071713{col 37}{space 1}    2.69{col 46}{space 3}0.007{col 54}{space 4} .0052194{col 67}{space 3} .0333304
{txt}{space 4}2001  8  {c |}{col 14}{res}{space 2} .0119281{col 26}{space 2} .0165882{col 37}{space 1}    0.72{col 46}{space 3}0.472{col 54}{space 4}-.0205843{col 67}{space 3} .0444404
{txt}{space 4}2001  9  {c |}{col 14}{res}{space 2}-.0492467{col 26}{space 2} .0095561{col 37}{space 1}   -5.15{col 46}{space 3}0.000{col 54}{space 4}-.0679762{col 67}{space 3}-.0305172
{txt}{space 4}2001 10  {c |}{col 14}{res}{space 2} .0510481{col 26}{space 2}   .00741{col 37}{space 1}    6.89{col 46}{space 3}0.000{col 54}{space 4} .0365247{col 67}{space 3} .0655715
{txt}{space 4}2001 11  {c |}{col 14}{res}{space 2}-.0105907{col 26}{space 2} .0115352{col 37}{space 1}   -0.92{col 46}{space 3}0.359{col 54}{space 4}-.0331992{col 67}{space 3} .0120179
{txt}{space 4}2001 12  {c |}{col 14}{res}{space 2} .0112496{col 26}{space 2} .0085392{col 37}{space 1}    1.32{col 46}{space 3}0.188{col 54}{space 4}-.0054869{col 67}{space 3} .0279861
{txt}{space 4}2001 13  {c |}{col 14}{res}{space 2}-.0148027{col 26}{space 2} .0082935{col 37}{space 1}   -1.78{col 46}{space 3}0.074{col 54}{space 4}-.0310577{col 67}{space 3} .0014523
{txt}{space 4}2001 14  {c |}{col 14}{res}{space 2} .0200045{col 26}{space 2} .0075464{col 37}{space 1}    2.65{col 46}{space 3}0.008{col 54}{space 4} .0052139{col 67}{space 3} .0347952
{txt}{space 4}2002  2  {c |}{col 14}{res}{space 2} .0630928{col 26}{space 2} .0058717{col 37}{space 1}   10.75{col 46}{space 3}0.000{col 54}{space 4} .0515845{col 67}{space 3} .0746011
{txt}{space 4}2002  3  {c |}{col 14}{res}{space 2}-.0265363{col 26}{space 2}   .00643{col 37}{space 1}   -4.13{col 46}{space 3}0.000{col 54}{space 4}-.0391388{col 67}{space 3}-.0139337
{txt}{space 4}2002  4  {c |}{col 14}{res}{space 2}-.0030043{col 26}{space 2}  .006114{col 37}{space 1}   -0.49{col 46}{space 3}0.623{col 54}{space 4}-.0149874{col 67}{space 3} .0089789
{txt}{space 4}2002  5  {c |}{col 14}{res}{space 2} .0439228{col 26}{space 2} .0059047{col 37}{space 1}    7.44{col 46}{space 3}0.000{col 54}{space 4} .0323498{col 67}{space 3} .0554957
{txt}{space 4}2002  6  {c |}{col 14}{res}{space 2}-.0376198{col 26}{space 2}  .012671{col 37}{space 1}   -2.97{col 46}{space 3}0.003{col 54}{space 4}-.0624545{col 67}{space 3}-.0127851
{txt}{space 4}2002  7  {c |}{col 14}{res}{space 2}-.0062292{col 26}{space 2} .0068271{col 37}{space 1}   -0.91{col 46}{space 3}0.362{col 54}{space 4}-.0196101{col 67}{space 3} .0071516
{txt}{space 4}2002  8  {c |}{col 14}{res}{space 2} .0060788{col 26}{space 2} .0151175{col 37}{space 1}    0.40{col 46}{space 3}0.688{col 54}{space 4}-.0235509{col 67}{space 3} .0357085
{txt}{space 4}2002  9  {c |}{col 14}{res}{space 2}-.0470839{col 26}{space 2} .0092927{col 37}{space 1}   -5.07{col 46}{space 3}0.000{col 54}{space 4}-.0652973{col 67}{space 3}-.0288705
{txt}{space 4}2002 10  {c |}{col 14}{res}{space 2} .0560546{col 26}{space 2} .0072554{col 37}{space 1}    7.73{col 46}{space 3}0.000{col 54}{space 4} .0418343{col 67}{space 3}  .070275
{txt}{space 4}2002 11  {c |}{col 14}{res}{space 2}-.0133971{col 26}{space 2}  .011092{col 37}{space 1}   -1.21{col 46}{space 3}0.227{col 54}{space 4} -.035137{col 67}{space 3} .0083428
{txt}{space 4}2002 12  {c |}{col 14}{res}{space 2} .0098379{col 26}{space 2} .0082235{col 37}{space 1}    1.20{col 46}{space 3}0.232{col 54}{space 4}-.0062799{col 67}{space 3} .0259556
{txt}{space 4}2002 13  {c |}{col 14}{res}{space 2} .0065344{col 26}{space 2} .0081318{col 37}{space 1}    0.80{col 46}{space 3}0.422{col 54}{space 4}-.0094036{col 67}{space 3} .0224724
{txt}{space 4}2002 14  {c |}{col 14}{res}{space 2} .0130607{col 26}{space 2} .0071986{col 37}{space 1}    1.81{col 46}{space 3}0.070{col 54}{space 4}-.0010483{col 67}{space 3} .0271697
{txt}{space 4}2003  2  {c |}{col 14}{res}{space 2} .0471667{col 26}{space 2} .0059627{col 37}{space 1}    7.91{col 46}{space 3}0.000{col 54}{space 4}   .03548{col 67}{space 3} .0588533
{txt}{space 4}2003  3  {c |}{col 14}{res}{space 2}-.0471915{col 26}{space 2}  .006498{col 37}{space 1}   -7.26{col 46}{space 3}0.000{col 54}{space 4}-.0599274{col 67}{space 3}-.0344556
{txt}{space 4}2003  4  {c |}{col 14}{res}{space 2}-.0211403{col 26}{space 2} .0061975{col 37}{space 1}   -3.41{col 46}{space 3}0.001{col 54}{space 4}-.0332872{col 67}{space 3}-.0089934
{txt}{space 4}2003  5  {c |}{col 14}{res}{space 2} .0363653{col 26}{space 2} .0059828{col 37}{space 1}    6.08{col 46}{space 3}0.000{col 54}{space 4} .0246391{col 67}{space 3} .0480914
{txt}{space 4}2003  6  {c |}{col 14}{res}{space 2}-.0507199{col 26}{space 2}  .012769{col 37}{space 1}   -3.97{col 46}{space 3}0.000{col 54}{space 4}-.0757467{col 67}{space 3} -.025693
{txt}{space 4}2003  7  {c |}{col 14}{res}{space 2}-.0185989{col 26}{space 2}  .007493{col 37}{space 1}   -2.48{col 46}{space 3}0.013{col 54}{space 4}-.0332849{col 67}{space 3}-.0039129
{txt}{space 4}2003  8  {c |}{col 14}{res}{space 2}-.0019216{col 26}{space 2} .0150834{col 37}{space 1}   -0.13{col 46}{space 3}0.899{col 54}{space 4}-.0314846{col 67}{space 3} .0276414
{txt}{space 4}2003  9  {c |}{col 14}{res}{space 2}-.0618995{col 26}{space 2} .0093884{col 37}{space 1}   -6.59{col 46}{space 3}0.000{col 54}{space 4}-.0803004{col 67}{space 3}-.0434986
{txt}{space 4}2003 10  {c |}{col 14}{res}{space 2} .0361715{col 26}{space 2} .0073381{col 37}{space 1}    4.93{col 46}{space 3}0.000{col 54}{space 4} .0217891{col 67}{space 3}  .050554
{txt}{space 4}2003 11  {c |}{col 14}{res}{space 2}-.0246152{col 26}{space 2} .0112886{col 37}{space 1}   -2.18{col 46}{space 3}0.029{col 54}{space 4}-.0467404{col 67}{space 3}-.0024901
{txt}{space 4}2003 12  {c |}{col 14}{res}{space 2}  .008214{col 26}{space 2} .0082852{col 37}{space 1}    0.99{col 46}{space 3}0.321{col 54}{space 4}-.0080248{col 67}{space 3} .0244528
{txt}{space 4}2003 13  {c |}{col 14}{res}{space 2}-.0189809{col 26}{space 2} .0081895{col 37}{space 1}   -2.32{col 46}{space 3}0.020{col 54}{space 4} -.035032{col 67}{space 3}-.0029298
{txt}{space 4}2003 14  {c |}{col 14}{res}{space 2} .0206572{col 26}{space 2} .0072496{col 37}{space 1}    2.85{col 46}{space 3}0.004{col 54}{space 4} .0064483{col 67}{space 3} .0348661
{txt}{space 4}2004  2  {c |}{col 14}{res}{space 2} .0368397{col 26}{space 2} .0058944{col 37}{space 1}    6.25{col 46}{space 3}0.000{col 54}{space 4} .0252869{col 67}{space 3} .0483925
{txt}{space 4}2004  3  {c |}{col 14}{res}{space 2} -.059899{col 26}{space 2}  .006413{col 37}{space 1}   -9.34{col 46}{space 3}0.000{col 54}{space 4}-.0724681{col 67}{space 3}-.0473298
{txt}{space 4}2004  4  {c |}{col 14}{res}{space 2}-.0289958{col 26}{space 2} .0061215{col 37}{space 1}   -4.74{col 46}{space 3}0.000{col 54}{space 4}-.0409937{col 67}{space 3} -.016998
{txt}{space 4}2004  5  {c |}{col 14}{res}{space 2} .0200543{col 26}{space 2} .0059137{col 37}{space 1}    3.39{col 46}{space 3}0.001{col 54}{space 4} .0084637{col 67}{space 3}  .031645
{txt}{space 4}2004  6  {c |}{col 14}{res}{space 2}-.0622249{col 26}{space 2} .0126698{col 37}{space 1}   -4.91{col 46}{space 3}0.000{col 54}{space 4}-.0870573{col 67}{space 3}-.0373924
{txt}{space 4}2004  7  {c |}{col 14}{res}{space 2}-.0285957{col 26}{space 2} .0070326{col 37}{space 1}   -4.07{col 46}{space 3}0.000{col 54}{space 4}-.0423793{col 67}{space 3} -.014812
{txt}{space 4}2004  8  {c |}{col 14}{res}{space 2}-.0054607{col 26}{space 2} .0149892{col 37}{space 1}   -0.36{col 46}{space 3}0.716{col 54}{space 4}-.0348391{col 67}{space 3} .0239176
{txt}{space 4}2004  9  {c |}{col 14}{res}{space 2}-.0729393{col 26}{space 2}  .009307{col 37}{space 1}   -7.84{col 46}{space 3}0.000{col 54}{space 4}-.0911806{col 67}{space 3}-.0546979
{txt}{space 4}2004 10  {c |}{col 14}{res}{space 2} .0213588{col 26}{space 2} .0072288{col 37}{space 1}    2.95{col 46}{space 3}0.003{col 54}{space 4} .0071907{col 67}{space 3} .0355269
{txt}{space 4}2004 11  {c |}{col 14}{res}{space 2}-.0420626{col 26}{space 2} .0112534{col 37}{space 1}   -3.74{col 46}{space 3}0.000{col 54}{space 4} -.064119{col 67}{space 3}-.0200063
{txt}{space 4}2004 12  {c |}{col 14}{res}{space 2} .0029536{col 26}{space 2} .0082376{col 37}{space 1}    0.36{col 46}{space 3}0.720{col 54}{space 4}-.0131918{col 67}{space 3} .0190991
{txt}{space 4}2004 13  {c |}{col 14}{res}{space 2}-.0099004{col 26}{space 2}  .008115{col 37}{space 1}   -1.22{col 46}{space 3}0.222{col 54}{space 4}-.0258054{col 67}{space 3} .0060046
{txt}{space 4}2004 14  {c |}{col 14}{res}{space 2} .0085991{col 26}{space 2} .0071775{col 37}{space 1}    1.20{col 46}{space 3}0.231{col 54}{space 4}-.0054685{col 67}{space 3} .0226668
{txt}{space 4}2005  2  {c |}{col 14}{res}{space 2} .0520076{col 26}{space 2} .0058855{col 37}{space 1}    8.84{col 46}{space 3}0.000{col 54}{space 4} .0404723{col 67}{space 3}  .063543
{txt}{space 4}2005  3  {c |}{col 14}{res}{space 2} -.045567{col 26}{space 2} .0064114{col 37}{space 1}   -7.11{col 46}{space 3}0.000{col 54}{space 4}-.0581332{col 67}{space 3}-.0330009
{txt}{space 4}2005  4  {c |}{col 14}{res}{space 2}-.0210088{col 26}{space 2} .0061443{col 37}{space 1}   -3.42{col 46}{space 3}0.001{col 54}{space 4}-.0330515{col 67}{space 3}-.0089661
{txt}{space 4}2005  5  {c |}{col 14}{res}{space 2} .0414487{col 26}{space 2} .0059085{col 37}{space 1}    7.02{col 46}{space 3}0.000{col 54}{space 4} .0298683{col 67}{space 3} .0530291
{txt}{space 4}2005  6  {c |}{col 14}{res}{space 2}-.0435064{col 26}{space 2} .0126989{col 37}{space 1}   -3.43{col 46}{space 3}0.001{col 54}{space 4}-.0683958{col 67}{space 3}-.0186171
{txt}{space 4}2005  7  {c |}{col 14}{res}{space 2}-.0167206{col 26}{space 2} .0070116{col 37}{space 1}   -2.38{col 46}{space 3}0.017{col 54}{space 4}-.0304632{col 67}{space 3}-.0029781
{txt}{space 4}2005  8  {c |}{col 14}{res}{space 2} .0019653{col 26}{space 2} .0155071{col 37}{space 1}    0.13{col 46}{space 3}0.899{col 54}{space 4} -.028428{col 67}{space 3} .0323586
{txt}{space 4}2005  9  {c |}{col 14}{res}{space 2}-.0599852{col 26}{space 2} .0093208{col 37}{space 1}   -6.44{col 46}{space 3}0.000{col 54}{space 4}-.0782536{col 67}{space 3}-.0417167
{txt}{space 4}2005 10  {c |}{col 14}{res}{space 2} .0400708{col 26}{space 2}  .007221{col 37}{space 1}    5.55{col 46}{space 3}0.000{col 54}{space 4} .0259178{col 67}{space 3} .0542238
{txt}{space 4}2005 11  {c |}{col 14}{res}{space 2}-.0379298{col 26}{space 2} .0116705{col 37}{space 1}   -3.25{col 46}{space 3}0.001{col 54}{space 4}-.0608035{col 67}{space 3} -.015056
{txt}{space 4}2005 12  {c |}{col 14}{res}{space 2} .0158892{col 26}{space 2} .0082288{col 37}{space 1}    1.93{col 46}{space 3}0.053{col 54}{space 4}-.0002389{col 67}{space 3} .0320173
{txt}{space 4}2005 13  {c |}{col 14}{res}{space 2} .0096595{col 26}{space 2} .0081426{col 37}{space 1}    1.19{col 46}{space 3}0.236{col 54}{space 4}-.0062998{col 67}{space 3} .0256188
{txt}{space 4}2005 14  {c |}{col 14}{res}{space 2} .0313529{col 26}{space 2} .0071648{col 37}{space 1}    4.38{col 46}{space 3}0.000{col 54}{space 4} .0173101{col 67}{space 3} .0453957
{txt}{space 4}2006  2  {c |}{col 14}{res}{space 2} .0559216{col 26}{space 2} .0057231{col 37}{space 1}    9.77{col 46}{space 3}0.000{col 54}{space 4} .0447046{col 67}{space 3} .0671385
{txt}{space 4}2006  3  {c |}{col 14}{res}{space 2}-.0556836{col 26}{space 2} .0062681{col 37}{space 1}   -8.88{col 46}{space 3}0.000{col 54}{space 4}-.0679688{col 67}{space 3}-.0433984
{txt}{space 4}2006  4  {c |}{col 14}{res}{space 2}-.0377134{col 26}{space 2}   .00595{col 37}{space 1}   -6.34{col 46}{space 3}0.000{col 54}{space 4}-.0493752{col 67}{space 3}-.0260517
{txt}{space 4}2006  5  {c |}{col 14}{res}{space 2} .0352552{col 26}{space 2} .0057623{col 37}{space 1}    6.12{col 46}{space 3}0.000{col 54}{space 4} .0239613{col 67}{space 3}  .046549
{txt}{space 4}2006  6  {c |}{col 14}{res}{space 2}-.0539617{col 26}{space 2} .0125884{col 37}{space 1}   -4.29{col 46}{space 3}0.000{col 54}{space 4}-.0786346{col 67}{space 3}-.0292888
{txt}{space 4}2006  7  {c |}{col 14}{res}{space 2}-.0202278{col 26}{space 2} .0067239{col 37}{space 1}   -3.01{col 46}{space 3}0.003{col 54}{space 4}-.0334064{col 67}{space 3}-.0070492
{txt}{space 4}2006  8  {c |}{col 14}{res}{space 2} .0048923{col 26}{space 2} .0150608{col 37}{space 1}    0.32{col 46}{space 3}0.745{col 54}{space 4}-.0246264{col 67}{space 3}  .034411
{txt}{space 4}2006  9  {c |}{col 14}{res}{space 2}-.0732126{col 26}{space 2} .0092196{col 37}{space 1}   -7.94{col 46}{space 3}0.000{col 54}{space 4}-.0912827{col 67}{space 3}-.0551425
{txt}{space 4}2006 10  {c |}{col 14}{res}{space 2} .0425039{col 26}{space 2}  .007068{col 37}{space 1}    6.01{col 46}{space 3}0.000{col 54}{space 4} .0286508{col 67}{space 3}  .056357
{txt}{space 4}2006 11  {c |}{col 14}{res}{space 2} -.056445{col 26}{space 2} .0111624{col 37}{space 1}   -5.06{col 46}{space 3}0.000{col 54}{space 4}-.0783229{col 67}{space 3}-.0345671
{txt}{space 4}2006 12  {c |}{col 14}{res}{space 2} .0149171{col 26}{space 2} .0081056{col 37}{space 1}    1.84{col 46}{space 3}0.066{col 54}{space 4}-.0009697{col 67}{space 3} .0308038
{txt}{space 4}2006 13  {c |}{col 14}{res}{space 2}   .00354{col 26}{space 2} .0080324{col 37}{space 1}    0.44{col 46}{space 3}0.659{col 54}{space 4}-.0122033{col 67}{space 3} .0192833
{txt}{space 4}2006 14  {c |}{col 14}{res}{space 2}  .015663{col 26}{space 2} .0070436{col 37}{space 1}    2.22{col 46}{space 3}0.026{col 54}{space 4} .0018578{col 67}{space 3} .0294683
{txt}{space 4}2007  2  {c |}{col 14}{res}{space 2}-.0776539{col 26}{space 2} .0577463{col 37}{space 1}   -1.34{col 46}{space 3}0.179{col 54}{space 4}-.1908345{col 67}{space 3} .0355268
{txt}{space 4}2007  3  {c |}{col 14}{res}{space 2} -.168264{col 26}{space 2} .0578127{col 37}{space 1}   -2.91{col 46}{space 3}0.004{col 54}{space 4}-.2815748{col 67}{space 3}-.0549532
{txt}{space 4}2007  4  {c |}{col 14}{res}{space 2}-.1387336{col 26}{space 2} .0577784{col 37}{space 1}   -2.40{col 46}{space 3}0.016{col 54}{space 4}-.2519771{col 67}{space 3}-.0254901
{txt}{space 4}2007  5  {c |}{col 14}{res}{space 2}-.0709428{col 26}{space 2} .0577541{col 37}{space 1}   -1.23{col 46}{space 3}0.219{col 54}{space 4}-.1841387{col 67}{space 3} .0422532
{txt}{space 4}2007  6  {c |}{col 14}{res}{space 2}-.1653108{col 26}{space 2} .0588587{col 37}{space 1}   -2.81{col 46}{space 3}0.005{col 54}{space 4}-.2806718{col 67}{space 3}-.0499499
{txt}{space 4}2007  7  {c |}{col 14}{res}{space 2}-.1533993{col 26}{space 2} .0578698{col 37}{space 1}   -2.65{col 46}{space 3}0.008{col 54}{space 4} -.266822{col 67}{space 3}-.0399767
{txt}{space 4}2007  8  {c |}{col 14}{res}{space 2}-.0978568{col 26}{space 2} .0594424{col 37}{space 1}   -1.65{col 46}{space 3}0.100{col 54}{space 4}-.2143618{col 67}{space 3} .0186481
{txt}{space 4}2007  9  {c |}{col 14}{res}{space 2}-.1869508{col 26}{space 2} .0582217{col 37}{space 1}   -3.21{col 46}{space 3}0.001{col 54}{space 4}-.3010633{col 67}{space 3}-.0728383
{txt}{space 4}2007 10  {c |}{col 14}{res}{space 2}-.0887631{col 26}{space 2} .0579016{col 37}{space 1}   -1.53{col 46}{space 3}0.125{col 54}{space 4}-.2022481{col 67}{space 3} .0247219
{txt}{space 4}2007 11  {c |}{col 14}{res}{space 2}-.1621367{col 26}{space 2} .0585878{col 37}{space 1}   -2.77{col 46}{space 3}0.006{col 54}{space 4}-.2769667{col 67}{space 3}-.0473067
{txt}{space 4}2007 12  {c |}{col 14}{res}{space 2}-.1125298{col 26}{space 2} .0580425{col 37}{space 1}   -1.94{col 46}{space 3}0.053{col 54}{space 4}-.2262911{col 67}{space 3} .0012315
{txt}{space 4}2007 13  {c |}{col 14}{res}{space 2}-.1133196{col 26}{space 2} .0580355{col 37}{space 1}   -1.95{col 46}{space 3}0.051{col 54}{space 4}-.2270672{col 67}{space 3}  .000428
{txt}{space 4}2007 14  {c |}{col 14}{res}{space 2}-.1007799{col 26}{space 2} .0579081{col 37}{space 1}   -1.74{col 46}{space 3}0.082{col 54}{space 4}-.2142777{col 67}{space 3} .0127179
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}  .074478{col 26}{space 2} .0109965{col 37}{space 1}    6.77{col 46}{space 3}0.000{col 54}{space 4} .0529252{col 67}{space 3} .0960308
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .07374386
{txt}     sigma_e {c |} {res}  .0541444
{txt}         rho {c |} {res} .64973764{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. test _b[edum_adop]=0, notest

{p 0 7}{space 1}{text:( 1)}{space 1} {res}edum_adop = 0{p_end}

{com}. test _b[adopter]=0, accum

{p 0 7}{space 1}{text:( 1)}{space 1} {res}edum_adop = 0{p_end}
{p 0 7}{space 1}{text:( 2)}{space 1} adopter = 0{p_end}

{txt}{col 12}chi2(  2) ={res}  692.85
{txt}{col 10}Prob > chi2 =  {res}  0.0000

{com}. 
. xtreg oilseedrapeuaa energydum edum_adop adopter farmsrepresented  sizeclass setasideuaa ln_labour ln_ffi solvency specialise intensity ln_c_ret_ha i.year year#mscode
{txt}note: 2007.year omitted because of collinearity
{res}
{txt}Random-effects GLS regression                   Number of obs      = {res}    65161
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}     8876

{txt}R-sq:  within  = {res}0.0364                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.1898                                        {txt}avg = {res}      7.3
{txt}       overall = {res}0.1753                                        {txt}max = {res}        9

{txt}Random effects u_i ~ {res}Gaussian                   {txt}Wald chi2({res}136{txt})     = {res}  5009.47
{txt}corr(u_i, X)       = {res}0{txt} (assumed)                Prob > chi2        =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}oilseedrap~a{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      z{col 46}   P>|z|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2} 25.83428{col 26}{space 2} 12.68822{col 37}{space 1}    2.04{col 46}{space 3}0.042{col 54}{space 4} .9658307{col 67}{space 3} 50.70273
{txt}{space 3}edum_adop {c |}{col 14}{res}{space 2} 3.682993{col 26}{space 2} .2642804{col 37}{space 1}   13.94{col 46}{space 3}0.000{col 54}{space 4} 3.165013{col 67}{space 3} 4.200974
{txt}{space 5}adopter {c |}{col 14}{res}{space 2} 18.73004{col 26}{space 2} .9391581{col 37}{space 1}   19.94{col 46}{space 3}0.000{col 54}{space 4} 16.88933{col 67}{space 3} 20.57076
{txt}farmsrepre~d {c |}{col 14}{res}{space 2} .0044953{col 26}{space 2} .0011392{col 37}{space 1}    3.95{col 46}{space 3}0.000{col 54}{space 4} .0022625{col 67}{space 3} .0067281
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} 1.441863{col 26}{space 2} .1220946{col 37}{space 1}   11.81{col 46}{space 3}0.000{col 54}{space 4} 1.202562{col 67}{space 3} 1.681164
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0698363{col 26}{space 2}  .005525{col 37}{space 1}  -12.64{col 46}{space 3}0.000{col 54}{space 4}-.0806651{col 67}{space 3}-.0590075
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}  5.45235{col 26}{space 2} .2190124{col 37}{space 1}   24.90{col 46}{space 3}0.000{col 54}{space 4} 5.023093{col 67}{space 3} 5.881606
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0297073{col 26}{space 2} .0201438{col 37}{space 1}   -1.47{col 46}{space 3}0.140{col 54}{space 4}-.0691884{col 67}{space 3} .0097738
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} 1.050543{col 26}{space 2} .3690157{col 37}{space 1}    2.85{col 46}{space 3}0.004{col 54}{space 4} .3272852{col 67}{space 3}   1.7738
{txt}{space 2}specialise {c |}{col 14}{res}{space 2}  .471793{col 26}{space 2} .1734732{col 37}{space 1}    2.72{col 46}{space 3}0.007{col 54}{space 4} .1317916{col 67}{space 3} .8117943
{txt}{space 3}intensity {c |}{col 14}{res}{space 2} 8.399921{col 26}{space 2} 1.173256{col 37}{space 1}    7.16{col 46}{space 3}0.000{col 54}{space 4} 6.100382{col 67}{space 3} 10.69946
{txt}{space 1}ln_c_ret_ha {c |}{col 14}{res}{space 2} .0240543{col 26}{space 2} .1914286{col 37}{space 1}    0.13{col 46}{space 3}0.900{col 54}{space 4}-.3511389{col 67}{space 3} .3992476
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-5.659022{col 26}{space 2} 1.482496{col 37}{space 1}   -3.82{col 46}{space 3}0.000{col 54}{space 4} -8.56466{col 67}{space 3}-2.753383
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-7.471907{col 26}{space 2}   1.4122{col 37}{space 1}   -5.29{col 46}{space 3}0.000{col 54}{space 4}-10.23977{col 67}{space 3}-4.704046
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-6.208292{col 26}{space 2} 1.379699{col 37}{space 1}   -4.50{col 46}{space 3}0.000{col 54}{space 4}-8.912452{col 67}{space 3}-3.504131
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-3.453556{col 26}{space 2}  1.39545{col 37}{space 1}   -2.47{col 46}{space 3}0.013{col 54}{space 4}-6.188587{col 67}{space 3}-.7185245
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-27.54673{col 26}{space 2} 12.66442{col 37}{space 1}   -2.18{col 46}{space 3}0.030{col 54}{space 4}-52.36855{col 67}{space 3}-2.724919
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-29.44915{col 26}{space 2} 12.66434{col 37}{space 1}   -2.33{col 46}{space 3}0.020{col 54}{space 4}-54.27079{col 67}{space 3}-4.627511
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}-26.89225{col 26}{space 2} 12.66222{col 37}{space 1}   -2.12{col 46}{space 3}0.034{col 54}{space 4}-51.70976{col 67}{space 3} -2.07475
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 1}year#mscode {c |}
{space 4}1999  2  {c |}{col 14}{res}{space 2} 18.96903{col 26}{space 2} 2.249018{col 37}{space 1}    8.43{col 46}{space 3}0.000{col 54}{space 4} 14.56104{col 67}{space 3} 23.37703
{txt}{space 4}1999  3  {c |}{col 14}{res}{space 2}-4.677036{col 26}{space 2} 2.403826{col 37}{space 1}   -1.95{col 46}{space 3}0.052{col 54}{space 4}-9.388449{col 67}{space 3} .0343769
{txt}{space 4}1999  4  {c |}{col 14}{res}{space 2}-2.519556{col 26}{space 2} 2.301214{col 37}{space 1}   -1.09{col 46}{space 3}0.274{col 54}{space 4}-7.029852{col 67}{space 3}  1.99074
{txt}{space 4}1999  5  {c |}{col 14}{res}{space 2} 1.549554{col 26}{space 2} 2.258905{col 37}{space 1}    0.69{col 46}{space 3}0.493{col 54}{space 4}-2.877819{col 67}{space 3} 5.976926
{txt}{space 4}1999  6  {c |}{col 14}{res}{space 2}-7.815895{col 26}{space 2}  4.75987{col 37}{space 1}   -1.64{col 46}{space 3}0.101{col 54}{space 4}-17.14507{col 67}{space 3} 1.513278
{txt}{space 4}1999  7  {c |}{col 14}{res}{space 2}-3.026699{col 26}{space 2} 2.595124{col 37}{space 1}   -1.17{col 46}{space 3}0.243{col 54}{space 4}-8.113049{col 67}{space 3} 2.059651
{txt}{space 4}1999  8  {c |}{col 14}{res}{space 2}-7.297537{col 26}{space 2} 5.860279{col 37}{space 1}   -1.25{col 46}{space 3}0.213{col 54}{space 4}-18.78347{col 67}{space 3} 4.188398
{txt}{space 4}1999  9  {c |}{col 14}{res}{space 2}-14.28337{col 26}{space 2} 3.509832{col 37}{space 1}   -4.07{col 46}{space 3}0.000{col 54}{space 4}-21.16251{col 67}{space 3}-7.404224
{txt}{space 4}1999 10  {c |}{col 14}{res}{space 2} -7.54517{col 26}{space 2} 2.687004{col 37}{space 1}   -2.81{col 46}{space 3}0.005{col 54}{space 4} -12.8116{col 67}{space 3}-2.278739
{txt}{space 4}1999 11  {c |}{col 14}{res}{space 2}-5.825081{col 26}{space 2}  4.04377{col 37}{space 1}   -1.44{col 46}{space 3}0.150{col 54}{space 4}-13.75073{col 67}{space 3} 2.100562
{txt}{space 4}1999 12  {c |}{col 14}{res}{space 2}-2.584773{col 26}{space 2}  3.04707{col 37}{space 1}   -0.85{col 46}{space 3}0.396{col 54}{space 4}-8.556921{col 67}{space 3} 3.387374
{txt}{space 4}1999 13  {c |}{col 14}{res}{space 2}-4.136142{col 26}{space 2} 3.020442{col 37}{space 1}   -1.37{col 46}{space 3}0.171{col 54}{space 4} -10.0561{col 67}{space 3} 1.783817
{txt}{space 4}1999 14  {c |}{col 14}{res}{space 2}  9.53834{col 26}{space 2}  2.98923{col 37}{space 1}    3.19{col 46}{space 3}0.001{col 54}{space 4} 3.679556{col 67}{space 3} 15.39712
{txt}{space 4}2000  2  {c |}{col 14}{res}{space 2} 19.89043{col 26}{space 2} 2.163654{col 37}{space 1}    9.19{col 46}{space 3}0.000{col 54}{space 4} 15.64975{col 67}{space 3} 24.13111
{txt}{space 4}2000  3  {c |}{col 14}{res}{space 2} .8363999{col 26}{space 2} 2.324801{col 37}{space 1}    0.36{col 46}{space 3}0.719{col 54}{space 4}-3.720126{col 67}{space 3} 5.392925
{txt}{space 4}2000  4  {c |}{col 14}{res}{space 2} 2.109847{col 26}{space 2} 2.217535{col 37}{space 1}    0.95{col 46}{space 3}0.341{col 54}{space 4}-2.236441{col 67}{space 3} 6.456135
{txt}{space 4}2000  5  {c |}{col 14}{res}{space 2} 5.170404{col 26}{space 2} 2.175971{col 37}{space 1}    2.38{col 46}{space 3}0.017{col 54}{space 4} .9055802{col 67}{space 3} 9.435228
{txt}{space 4}2000  6  {c |}{col 14}{res}{space 2}-2.597364{col 26}{space 2}  4.66871{col 37}{space 1}   -0.56{col 46}{space 3}0.578{col 54}{space 4}-11.74787{col 67}{space 3}  6.55314
{txt}{space 4}2000  7  {c |}{col 14}{res}{space 2} 2.569623{col 26}{space 2} 2.512711{col 37}{space 1}    1.02{col 46}{space 3}0.306{col 54}{space 4}-2.355201{col 67}{space 3} 7.494447
{txt}{space 4}2000  8  {c |}{col 14}{res}{space 2}-3.672847{col 26}{space 2} 5.689049{col 37}{space 1}   -0.65{col 46}{space 3}0.519{col 54}{space 4}-14.82318{col 67}{space 3} 7.477483
{txt}{space 4}2000  9  {c |}{col 14}{res}{space 2}-8.819051{col 26}{space 2}  3.45958{col 37}{space 1}   -2.55{col 46}{space 3}0.011{col 54}{space 4} -15.5997{col 67}{space 3}-2.038399
{txt}{space 4}2000 10  {c |}{col 14}{res}{space 2} -2.58397{col 26}{space 2} 2.616078{col 37}{space 1}   -0.99{col 46}{space 3}0.323{col 54}{space 4}-7.711388{col 67}{space 3} 2.543448
{txt}{space 4}2000 11  {c |}{col 14}{res}{space 2} 1.009163{col 26}{space 2} 3.954771{col 37}{space 1}    0.26{col 46}{space 3}0.799{col 54}{space 4}-6.742047{col 67}{space 3} 8.760372
{txt}{space 4}2000 12  {c |}{col 14}{res}{space 2}  3.52016{col 26}{space 2} 2.975719{col 37}{space 1}    1.18{col 46}{space 3}0.237{col 54}{space 4}-2.312142{col 67}{space 3} 9.352462
{txt}{space 4}2000 13  {c |}{col 14}{res}{space 2} .1392005{col 26}{space 2} 2.943875{col 37}{space 1}    0.05{col 46}{space 3}0.962{col 54}{space 4}-5.630688{col 67}{space 3} 5.909089
{txt}{space 4}2000 14  {c |}{col 14}{res}{space 2} 13.32964{col 26}{space 2} 2.913318{col 37}{space 1}    4.58{col 46}{space 3}0.000{col 54}{space 4} 7.619647{col 67}{space 3} 19.03964
{txt}{space 4}2001  2  {c |}{col 14}{res}{space 2}  22.1219{col 26}{space 2} 2.088363{col 37}{space 1}   10.59{col 46}{space 3}0.000{col 54}{space 4} 18.02878{col 67}{space 3} 26.21501
{txt}{space 4}2001  3  {c |}{col 14}{res}{space 2}  2.55836{col 26}{space 2} 2.247036{col 37}{space 1}    1.14{col 46}{space 3}0.255{col 54}{space 4}-1.845748{col 67}{space 3} 6.962469
{txt}{space 4}2001  4  {c |}{col 14}{res}{space 2} 4.564982{col 26}{space 2} 2.147617{col 37}{space 1}    2.13{col 46}{space 3}0.034{col 54}{space 4} .3557312{col 67}{space 3} 8.774234
{txt}{space 4}2001  5  {c |}{col 14}{res}{space 2} 6.211948{col 26}{space 2} 2.101456{col 37}{space 1}    2.96{col 46}{space 3}0.003{col 54}{space 4} 2.093171{col 67}{space 3} 10.33073
{txt}{space 4}2001  6  {c |}{col 14}{res}{space 2}-1.139967{col 26}{space 2} 4.609763{col 37}{space 1}   -0.25{col 46}{space 3}0.805{col 54}{space 4}-10.17494{col 67}{space 3} 7.895003
{txt}{space 4}2001  7  {c |}{col 14}{res}{space 2} 4.147461{col 26}{space 2} 2.418057{col 37}{space 1}    1.72{col 46}{space 3}0.086{col 54}{space 4}-.5918428{col 67}{space 3} 8.886765
{txt}{space 4}2001  8  {c |}{col 14}{res}{space 2}-2.137434{col 26}{space 2} 5.538616{col 37}{space 1}   -0.39{col 46}{space 3}0.700{col 54}{space 4}-12.99292{col 67}{space 3} 8.718055
{txt}{space 4}2001  9  {c |}{col 14}{res}{space 2}-7.283433{col 26}{space 2} 3.297673{col 37}{space 1}   -2.21{col 46}{space 3}0.027{col 54}{space 4}-13.74675{col 67}{space 3}-.8201116
{txt}{space 4}2001 10  {c |}{col 14}{res}{space 2}-.5915682{col 26}{space 2} 2.547093{col 37}{space 1}   -0.23{col 46}{space 3}0.816{col 54}{space 4}-5.583778{col 67}{space 3} 4.400642
{txt}{space 4}2001 11  {c |}{col 14}{res}{space 2} 2.090012{col 26}{space 2} 3.898728{col 37}{space 1}    0.54{col 46}{space 3}0.592{col 54}{space 4}-5.551354{col 67}{space 3} 9.731379
{txt}{space 4}2001 12  {c |}{col 14}{res}{space 2} 5.232219{col 26}{space 2} 2.923664{col 37}{space 1}    1.79{col 46}{space 3}0.074{col 54}{space 4}-.4980572{col 67}{space 3} 10.96249
{txt}{space 4}2001 13  {c |}{col 14}{res}{space 2} 1.404962{col 26}{space 2} 2.879327{col 37}{space 1}    0.49{col 46}{space 3}0.626{col 54}{space 4}-4.238415{col 67}{space 3} 7.048338
{txt}{space 4}2001 14  {c |}{col 14}{res}{space 2} 11.63707{col 26}{space 2} 2.559395{col 37}{space 1}    4.55{col 46}{space 3}0.000{col 54}{space 4} 6.620743{col 67}{space 3} 16.65339
{txt}{space 4}2002  2  {c |}{col 14}{res}{space 2}  23.1326{col 26}{space 2} 2.048855{col 37}{space 1}   11.29{col 46}{space 3}0.000{col 54}{space 4} 19.11692{col 67}{space 3} 27.14829
{txt}{space 4}2002  3  {c |}{col 14}{res}{space 2}  1.01853{col 26}{space 2}  2.21023{col 37}{space 1}    0.46{col 46}{space 3}0.645{col 54}{space 4}-3.313441{col 67}{space 3}   5.3505
{txt}{space 4}2002  4  {c |}{col 14}{res}{space 2} 2.581196{col 26}{space 2} 2.112723{col 37}{space 1}    1.22{col 46}{space 3}0.222{col 54}{space 4}-1.559666{col 67}{space 3} 6.722058
{txt}{space 4}2002  5  {c |}{col 14}{res}{space 2} 4.642044{col 26}{space 2} 2.065303{col 37}{space 1}    2.25{col 46}{space 3}0.025{col 54}{space 4} .5941254{col 67}{space 3} 8.689963
{txt}{space 4}2002  6  {c |}{col 14}{res}{space 2} -1.96175{col 26}{space 2} 4.480889{col 37}{space 1}   -0.44{col 46}{space 3}0.662{col 54}{space 4}-10.74413{col 67}{space 3}  6.82063
{txt}{space 4}2002  7  {c |}{col 14}{res}{space 2} 1.451659{col 26}{space 2} 2.369296{col 37}{space 1}    0.61{col 46}{space 3}0.540{col 54}{space 4}-3.192076{col 67}{space 3} 6.095394
{txt}{space 4}2002  8  {c |}{col 14}{res}{space 2}-3.560619{col 26}{space 2} 5.330476{col 37}{space 1}   -0.67{col 46}{space 3}0.504{col 54}{space 4}-14.00816{col 67}{space 3} 6.886922
{txt}{space 4}2002  9  {c |}{col 14}{res}{space 2} -8.45787{col 26}{space 2} 3.261114{col 37}{space 1}   -2.59{col 46}{space 3}0.009{col 54}{space 4}-14.84954{col 67}{space 3}-2.066204
{txt}{space 4}2002 10  {c |}{col 14}{res}{space 2}-1.372022{col 26}{space 2}  2.52541{col 37}{space 1}   -0.54{col 46}{space 3}0.587{col 54}{space 4}-6.321734{col 67}{space 3}  3.57769
{txt}{space 4}2002 11  {c |}{col 14}{res}{space 2} .3171561{col 26}{space 2} 3.835342{col 37}{space 1}    0.08{col 46}{space 3}0.934{col 54}{space 4}-7.199977{col 67}{space 3} 7.834289
{txt}{space 4}2002 12  {c |}{col 14}{res}{space 2} 4.297635{col 26}{space 2} 2.879571{col 37}{space 1}    1.49{col 46}{space 3}0.136{col 54}{space 4}-1.346221{col 67}{space 3} 9.941491
{txt}{space 4}2002 13  {c |}{col 14}{res}{space 2} 2.658035{col 26}{space 2} 2.856873{col 37}{space 1}    0.93{col 46}{space 3}0.352{col 54}{space 4}-2.941333{col 67}{space 3} 8.257403
{txt}{space 4}2002 14  {c |}{col 14}{res}{space 2}   8.0534{col 26}{space 2} 2.510044{col 37}{space 1}    3.21{col 46}{space 3}0.001{col 54}{space 4} 3.133804{col 67}{space 3}   12.973
{txt}{space 4}2003  2  {c |}{col 14}{res}{space 2} 20.65821{col 26}{space 2} 2.061799{col 37}{space 1}   10.02{col 46}{space 3}0.000{col 54}{space 4} 16.61716{col 67}{space 3} 24.69926
{txt}{space 4}2003  3  {c |}{col 14}{res}{space 2}-2.192976{col 26}{space 2}  2.22002{col 37}{space 1}   -0.99{col 46}{space 3}0.323{col 54}{space 4}-6.544135{col 67}{space 3} 2.158183
{txt}{space 4}2003  4  {c |}{col 14}{res}{space 2}-.3488381{col 26}{space 2} 2.124705{col 37}{space 1}   -0.16{col 46}{space 3}0.870{col 54}{space 4}-4.513184{col 67}{space 3} 3.815508
{txt}{space 4}2003  5  {c |}{col 14}{res}{space 2} 2.985853{col 26}{space 2} 2.076169{col 37}{space 1}    1.44{col 46}{space 3}0.150{col 54}{space 4}-1.083364{col 67}{space 3}  7.05507
{txt}{space 4}2003  6  {c |}{col 14}{res}{space 2}-4.254463{col 26}{space 2} 4.494352{col 37}{space 1}   -0.95{col 46}{space 3}0.344{col 54}{space 4}-13.06323{col 67}{space 3} 4.554305
{txt}{space 4}2003  7  {c |}{col 14}{res}{space 2}-3.231758{col 26}{space 2} 2.465455{col 37}{space 1}   -1.31{col 46}{space 3}0.190{col 54}{space 4} -8.06396{col 67}{space 3} 1.600444
{txt}{space 4}2003  8  {c |}{col 14}{res}{space 2}-5.975613{col 26}{space 2} 5.325874{col 37}{space 1}   -1.12{col 46}{space 3}0.262{col 54}{space 4}-16.41413{col 67}{space 3} 4.462907
{txt}{space 4}2003  9  {c |}{col 14}{res}{space 2}-11.16448{col 26}{space 2} 3.274522{col 37}{space 1}   -3.41{col 46}{space 3}0.001{col 54}{space 4}-17.58243{col 67}{space 3}-4.746537
{txt}{space 4}2003 10  {c |}{col 14}{res}{space 2}-3.575437{col 26}{space 2} 2.537401{col 37}{space 1}   -1.41{col 46}{space 3}0.159{col 54}{space 4}-8.548651{col 67}{space 3} 1.397778
{txt}{space 4}2003 11  {c |}{col 14}{res}{space 2}-1.760029{col 26}{space 2}  3.86437{col 37}{space 1}   -0.46{col 46}{space 3}0.649{col 54}{space 4}-9.334054{col 67}{space 3} 5.813996
{txt}{space 4}2003 12  {c |}{col 14}{res}{space 2} 3.114498{col 26}{space 2}  2.88853{col 37}{space 1}    1.08{col 46}{space 3}0.281{col 54}{space 4}-2.546917{col 67}{space 3} 8.775914
{txt}{space 4}2003 13  {c |}{col 14}{res}{space 2}-1.047294{col 26}{space 2} 2.865173{col 37}{space 1}   -0.37{col 46}{space 3}0.715{col 54}{space 4}-6.662929{col 67}{space 3} 4.568341
{txt}{space 4}2003 14  {c |}{col 14}{res}{space 2} 9.973652{col 26}{space 2} 2.517329{col 37}{space 1}    3.96{col 46}{space 3}0.000{col 54}{space 4} 5.039779{col 67}{space 3} 14.90753
{txt}{space 4}2004  2  {c |}{col 14}{res}{space 2} 19.04897{col 26}{space 2} 2.052082{col 37}{space 1}    9.28{col 46}{space 3}0.000{col 54}{space 4} 15.02697{col 67}{space 3} 23.07098
{txt}{space 4}2004  3  {c |}{col 14}{res}{space 2}-4.147376{col 26}{space 2} 2.207257{col 37}{space 1}   -1.88{col 46}{space 3}0.060{col 54}{space 4} -8.47352{col 67}{space 3}  .178769
{txt}{space 4}2004  4  {c |}{col 14}{res}{space 2}-1.908588{col 26}{space 2} 2.113846{col 37}{space 1}   -0.90{col 46}{space 3}0.367{col 54}{space 4} -6.05165{col 67}{space 3} 2.234474
{txt}{space 4}2004  5  {c |}{col 14}{res}{space 2}-.3427391{col 26}{space 2} 2.066577{col 37}{space 1}   -0.17{col 46}{space 3}0.868{col 54}{space 4}-4.393156{col 67}{space 3} 3.707678
{txt}{space 4}2004  6  {c |}{col 14}{res}{space 2}-5.980466{col 26}{space 2} 4.480705{col 37}{space 1}   -1.33{col 46}{space 3}0.182{col 54}{space 4}-14.76249{col 67}{space 3} 2.801555
{txt}{space 4}2004  7  {c |}{col 14}{res}{space 2}-3.162842{col 26}{space 2} 2.398519{col 37}{space 1}   -1.32{col 46}{space 3}0.187{col 54}{space 4}-7.863853{col 67}{space 3} 1.538169
{txt}{space 4}2004  8  {c |}{col 14}{res}{space 2} -8.29491{col 26}{space 2} 5.312814{col 37}{space 1}   -1.56{col 46}{space 3}0.118{col 54}{space 4}-18.70783{col 67}{space 3} 2.118014
{txt}{space 4}2004  9  {c |}{col 14}{res}{space 2}-13.45596{col 26}{space 2} 3.262776{col 37}{space 1}   -4.12{col 46}{space 3}0.000{col 54}{space 4}-19.85089{col 67}{space 3}-7.061038
{txt}{space 4}2004 10  {c |}{col 14}{res}{space 2}-6.152013{col 26}{space 2} 2.522019{col 37}{space 1}   -2.44{col 46}{space 3}0.015{col 54}{space 4}-11.09508{col 67}{space 3}-1.208946
{txt}{space 4}2004 11  {c |}{col 14}{res}{space 2}-4.518708{col 26}{space 2} 3.859331{col 37}{space 1}   -1.17{col 46}{space 3}0.242{col 54}{space 4}-12.08286{col 67}{space 3}  3.04544
{txt}{space 4}2004 12  {c |}{col 14}{res}{space 2} 2.030751{col 26}{space 2} 2.881776{col 37}{space 1}    0.70{col 46}{space 3}0.481{col 54}{space 4}-3.617428{col 67}{space 3} 7.678929
{txt}{space 4}2004 13  {c |}{col 14}{res}{space 2}-.4944292{col 26}{space 2} 2.854824{col 37}{space 1}   -0.17{col 46}{space 3}0.863{col 54}{space 4}-6.089781{col 67}{space 3} 5.100923
{txt}{space 4}2004 14  {c |}{col 14}{res}{space 2}  7.74299{col 26}{space 2} 2.507133{col 37}{space 1}    3.09{col 46}{space 3}0.002{col 54}{space 4} 2.829101{col 67}{space 3} 12.65688
{txt}{space 4}2005  2  {c |}{col 14}{res}{space 2} 23.13848{col 26}{space 2} 2.050848{col 37}{space 1}   11.28{col 46}{space 3}0.000{col 54}{space 4} 19.11889{col 67}{space 3} 27.15807
{txt}{space 4}2005  3  {c |}{col 14}{res}{space 2}-2.281077{col 26}{space 2} 2.207034{col 37}{space 1}   -1.03{col 46}{space 3}0.301{col 54}{space 4}-6.606784{col 67}{space 3}  2.04463
{txt}{space 4}2005  4  {c |}{col 14}{res}{space 2}-.0172999{col 26}{space 2} 2.117638{col 37}{space 1}   -0.01{col 46}{space 3}0.993{col 54}{space 4}-4.167794{col 67}{space 3} 4.133194
{txt}{space 4}2005  5  {c |}{col 14}{res}{space 2} 3.062413{col 26}{space 2} 2.065821{col 37}{space 1}    1.48{col 46}{space 3}0.138{col 54}{space 4}-.9865221{col 67}{space 3} 7.111348
{txt}{space 4}2005  6  {c |}{col 14}{res}{space 2}-3.356993{col 26}{space 2} 4.484688{col 37}{space 1}   -0.75{col 46}{space 3}0.454{col 54}{space 4}-12.14682{col 67}{space 3} 5.432835
{txt}{space 4}2005  7  {c |}{col 14}{res}{space 2}-.8522165{col 26}{space 2} 2.395658{col 37}{space 1}   -0.36{col 46}{space 3}0.722{col 54}{space 4}-5.547621{col 67}{space 3} 3.843188
{txt}{space 4}2005  8  {c |}{col 14}{res}{space 2}-6.871257{col 26}{space 2} 5.384596{col 37}{space 1}   -1.28{col 46}{space 3}0.202{col 54}{space 4}-17.42487{col 67}{space 3} 3.682357
{txt}{space 4}2005  9  {c |}{col 14}{res}{space 2}-11.37911{col 26}{space 2} 3.264909{col 37}{space 1}   -3.49{col 46}{space 3}0.000{col 54}{space 4}-17.77822{col 67}{space 3}-4.980008
{txt}{space 4}2005 10  {c |}{col 14}{res}{space 2}-3.709967{col 26}{space 2} 2.521126{col 37}{space 1}   -1.47{col 46}{space 3}0.141{col 54}{space 4}-8.651282{col 67}{space 3} 1.231349
{txt}{space 4}2005 11  {c |}{col 14}{res}{space 2}-2.989662{col 26}{space 2} 3.919401{col 37}{space 1}   -0.76{col 46}{space 3}0.446{col 54}{space 4}-10.67155{col 67}{space 3} 4.692224
{txt}{space 4}2005 12  {c |}{col 14}{res}{space 2} 4.160086{col 26}{space 2} 2.880725{col 37}{space 1}    1.44{col 46}{space 3}0.149{col 54}{space 4}-1.486031{col 67}{space 3} 9.806204
{txt}{space 4}2005 13  {c |}{col 14}{res}{space 2} 2.726981{col 26}{space 2} 2.858858{col 37}{space 1}    0.95{col 46}{space 3}0.340{col 54}{space 4}-2.876279{col 67}{space 3}  8.33024
{txt}{space 4}2005 14  {c |}{col 14}{res}{space 2}  12.9201{col 26}{space 2} 2.505389{col 37}{space 1}    5.16{col 46}{space 3}0.000{col 54}{space 4} 8.009625{col 67}{space 3} 17.83057
{txt}{space 4}2006  2  {c |}{col 14}{res}{space 2} 23.99947{col 26}{space 2} 2.028022{col 37}{space 1}   11.83{col 46}{space 3}0.000{col 54}{space 4} 20.02462{col 67}{space 3} 27.97432
{txt}{space 4}2006  3  {c |}{col 14}{res}{space 2} -4.09523{col 26}{space 2} 2.186847{col 37}{space 1}   -1.87{col 46}{space 3}0.061{col 54}{space 4}-8.381372{col 67}{space 3} .1909114
{txt}{space 4}2006  4  {c |}{col 14}{res}{space 2}-2.930645{col 26}{space 2} 2.089292{col 37}{space 1}   -1.40{col 46}{space 3}0.161{col 54}{space 4}-7.025581{col 67}{space 3} 1.164291
{txt}{space 4}2006  5  {c |}{col 14}{res}{space 2} 1.939393{col 26}{space 2} 2.045403{col 37}{space 1}    0.95{col 46}{space 3}0.343{col 54}{space 4}-2.069524{col 67}{space 3} 5.948309
{txt}{space 4}2006  6  {c |}{col 14}{res}{space 2}-5.543222{col 26}{space 2} 4.469206{col 37}{space 1}   -1.24{col 46}{space 3}0.215{col 54}{space 4} -14.3027{col 67}{space 3}  3.21626
{txt}{space 4}2006  7  {c |}{col 14}{res}{space 2}-1.660249{col 26}{space 2} 2.354347{col 37}{space 1}   -0.71{col 46}{space 3}0.481{col 54}{space 4}-6.274684{col 67}{space 3} 2.954187
{txt}{space 4}2006  8  {c |}{col 14}{res}{space 2} -6.34437{col 26}{space 2} 5.322529{col 37}{space 1}   -1.19{col 46}{space 3}0.233{col 54}{space 4}-16.77633{col 67}{space 3} 4.087595
{txt}{space 4}2006  9  {c |}{col 14}{res}{space 2}-14.01803{col 26}{space 2} 3.250912{col 37}{space 1}   -4.31{col 46}{space 3}0.000{col 54}{space 4} -20.3897{col 67}{space 3}-7.646359
{txt}{space 4}2006 10  {c |}{col 14}{res}{space 2}-5.152962{col 26}{space 2}   2.4996{col 37}{space 1}   -2.06{col 46}{space 3}0.039{col 54}{space 4}-10.05209{col 67}{space 3}-.2538352
{txt}{space 4}2006 11  {c |}{col 14}{res}{space 2}-6.596696{col 26}{space 2} 3.846386{col 37}{space 1}   -1.72{col 46}{space 3}0.086{col 54}{space 4}-14.13547{col 67}{space 3} .9420828
{txt}{space 4}2006 12  {c |}{col 14}{res}{space 2} 3.825454{col 26}{space 2} 2.863579{col 37}{space 1}    1.34{col 46}{space 3}0.182{col 54}{space 4}-1.787058{col 67}{space 3} 9.437965
{txt}{space 4}2006 13  {c |}{col 14}{res}{space 2} .9217244{col 26}{space 2} 2.843505{col 37}{space 1}    0.32{col 46}{space 3}0.746{col 54}{space 4}-4.651443{col 67}{space 3} 6.494892
{txt}{space 4}2006 14  {c |}{col 14}{res}{space 2} 10.40991{col 26}{space 2} 2.488267{col 37}{space 1}    4.18{col 46}{space 3}0.000{col 54}{space 4} 5.532995{col 67}{space 3} 15.28682
{txt}{space 4}2007  2  {c |}{col 14}{res}{space 2}-9.329425{col 26}{space 2}  12.7864{col 37}{space 1}   -0.73{col 46}{space 3}0.466{col 54}{space 4} -34.3903{col 67}{space 3} 15.73145
{txt}{space 4}2007  3  {c |}{col 14}{res}{space 2}-30.59435{col 26}{space 2} 12.81529{col 37}{space 1}   -2.39{col 46}{space 3}0.017{col 54}{space 4}-55.71185{col 67}{space 3}-5.476845
{txt}{space 4}2007  4  {c |}{col 14}{res}{space 2}-29.70527{col 26}{space 2} 12.79881{col 37}{space 1}   -2.32{col 46}{space 3}0.020{col 54}{space 4}-54.79048{col 67}{space 3}-4.620051
{txt}{space 4}2007  5  {c |}{col 14}{res}{space 2}-23.30847{col 26}{space 2} 12.79036{col 37}{space 1}   -1.82{col 46}{space 3}0.068{col 54}{space 4}-48.37712{col 67}{space 3} 1.760181
{txt}{space 4}2007  6  {c |}{col 14}{res}{space 2}-31.94759{col 26}{space 2} 13.39984{col 37}{space 1}   -2.38{col 46}{space 3}0.017{col 54}{space 4} -58.2108{col 67}{space 3}-5.684389
{txt}{space 4}2007  7  {c |}{col 14}{res}{space 2} -30.4829{col 26}{space 2} 12.84606{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-55.66071{col 67}{space 3}-5.305083
{txt}{space 4}2007  8  {c |}{col 14}{res}{space 2}-33.86002{col 26}{space 2} 13.70938{col 37}{space 1}   -2.47{col 46}{space 3}0.014{col 54}{space 4}-60.72991{col 67}{space 3} -6.99013
{txt}{space 4}2007  9  {c |}{col 14}{res}{space 2}-40.79203{col 26}{space 2} 13.04205{col 37}{space 1}   -3.13{col 46}{space 3}0.002{col 54}{space 4}-66.35398{col 67}{space 3}-15.23008
{txt}{space 4}2007 10  {c |}{col 14}{res}{space 2}-32.86474{col 26}{space 2} 12.87142{col 37}{space 1}   -2.55{col 46}{space 3}0.011{col 54}{space 4}-58.09225{col 67}{space 3}-7.637225
{txt}{space 4}2007 11  {c |}{col 14}{res}{space 2}-30.91912{col 26}{space 2} 13.20919{col 37}{space 1}   -2.34{col 46}{space 3}0.019{col 54}{space 4}-56.80865{col 67}{space 3}-5.029588
{txt}{space 4}2007 12  {c |}{col 14}{res}{space 2}-24.12278{col 26}{space 2} 12.94831{col 37}{space 1}   -1.86{col 46}{space 3}0.062{col 54}{space 4}-49.50099{col 67}{space 3} 1.255438
{txt}{space 4}2007 13  {c |}{col 14}{res}{space 2} -24.9782{col 26}{space 2} 12.94441{col 37}{space 1}   -1.93{col 46}{space 3}0.054{col 54}{space 4}-50.34878{col 67}{space 3} .3923713
{txt}{space 4}2007 14  {c |}{col 14}{res}{space 2}-16.33302{col 26}{space 2}   12.871{col 37}{space 1}   -1.27{col 46}{space 3}0.204{col 54}{space 4}-41.55972{col 67}{space 3} 8.893686
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-47.38402{col 26}{space 2} 3.033284{col 37}{space 1}  -15.62{col 46}{space 3}0.000{col 54}{space 4}-53.32915{col 67}{space 3} -41.4389
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 28.847062
{txt}     sigma_e {c |} {res} 11.267298
{txt}         rho {c |} {res} .86763492{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. codebook mscode

{txt}{hline}
{res}mscode{right:Country}
{txt}{hline}

{col 19}type:  numeric ({res}long{txt})
{ralign 22:label}:  {res:mscode}

{col 18}range:  [{res}1{txt},{res}14{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}14{col 51}{txt}missing .:  {res}0{txt}/{res}68445

{txt}{ralign 23: examples:}{col 26}{res}2{col 32}{txt}DEU
{ralign 23: }{col 26}{res}4{col 32}{txt}ESP
{ralign 23: }{col 26}{res}5{col 32}{txt}FRA
{ralign 23: }{col 26}{res}7{col 32}{txt}ITA

{com}. exit, clear
{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 6 May 2012, 13:45:54
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=02 & year_max>=05
{txt}(207193 observations deleted)

{com}. This step leaves you with only 14 countries!!!
{err}unrecognized command:  This
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. codebook country
{err}no observations
{txt}{search r(2000):r(2000);}

{com}. codebook mscode
{err}variable mscode not found
{txt}{search r(111):r(111);}

{com}. do master_linm
{err}{p 0 4}
file master_linm.do
not found
{p_end}
{txt}{search r(601):r(601);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 6 May 2012, 13:47:19
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. kj;klj
{err}unrecognized command:  kj
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. %T
{err}unrecognized command:  % invalid command name
{txt}{search r(199):r(199);}

{com}. help date

. %t
{err}unrecognized command:  % invalid command name
{txt}{search r(199):r(199);}

{com}. di %t
{res}{err}invalid %format
{txt}{search r(120):r(120);}

{com}. di T
{res}{err}T not found
{txt}{search r(111):r(111);}

{com}. help

. local c_time = c(current_time)

. di `c_time'
{res}{err}13:58:09 invalid name
{txt}{search r(198):r(198);}

{com}. local c_date = c(current_date)

. di `c_date'
{res}6{err}May not found
{txt}{search r(111):r(111);}

{com}. help log

. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 6 May 2012, 14:03:38
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. kj;klj
{err}unrecognized command:  kj
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. codebook country if [min_year <=2003 & max_year>=2004]
{err}min_year not found
{txt}{search r(111):r(111);}

{com}. codebook country if [year_min <=2003 & year_max>=2004]

{txt}{hline}
{res}country{right:Country}
{txt}{hline}

{col 19}type:  string ({res}str4{txt}), but longest is str3

{col 10}unique values:  {res}14{col 51}{txt}missing "":  {res}0{txt}/{res}100926

{txt}{col 15}examples:  {res}"DEU"
{col 26}"ESP"
{col 26}"FRA"
{col 26}"ITA"

{com}. codebook country if [year_max>=2004]

{txt}{hline}
{res}country{right:Country}
{txt}{hline}

{col 19}type:  string ({res}str4{txt}), but longest is str3

{col 10}unique values:  {res}27{col 51}{txt}missing "":  {res}0{txt}/{res}158756

{txt}{col 15}examples:  {res}"DEU"
{col 26}"ESP"
{col 26}"ITA"
{col 26}"POL"

{com}. codebook country if [year_min<=2003]

{txt}{hline}
{res}country{right:Country}
{txt}{hline}

{col 19}type:  string ({res}str4{txt}), but longest is str3

{col 10}unique values:  {res}15{col 51}{txt}missing "":  {res}0{txt}/{res}149363

{txt}{col 15}examples:  {res}"ELL"
{col 26}"ESP"
{col 26}"FRA"
{col 26}"ITA"

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 6 May 2012, 15:50:40
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. 
. *keep if year_min<=02 & year_max>=05
. *This step leaves you with only 14 countries!!!
. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(107021 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. 
. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(18118 real changes made)

{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(186422 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(20709 real changes made)

{com}. replace trend=2 if year==2001
{txt}(20808 real changes made)

{com}. replace trend=3 if year==2002
{txt}(19566 real changes made)

{com}. replace trend=4 if year==2003
{txt}(18318 real changes made)

{com}. replace trend=5 if year==2004
{txt}(26601 real changes made)

{com}. replace trend=6 if year==2005
{txt}(26666 real changes made)

{com}. replace trend=7 if year==2006
{txt}(26190 real changes made)

{com}. replace trend=8 if year==2007
{txt}(27564 real changes made)

{com}. 
. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(18 missing values generated)

{com}. *Correct for negative and 0 FFI in order to take log
. gen ffi_tmp = familyfarmincome
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<=0 
{txt}(24638 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(207193 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}(1 missing value generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(24 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{err}oilseedrapeuaa not found
{txt}{search r(111):r(111);}

end of do-file
{search r(111):r(111);}

end of do-file

{search r(111):r(111);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 6 May 2012, 15:56:09
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. 
. *keep if year_min<=02 & year_max>=05
. *This step leaves you with only 14 countries!!!
. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(107021 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. 
. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(18118 real changes made)

{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(186422 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(20709 real changes made)

{com}. replace trend=2 if year==2001
{txt}(20808 real changes made)

{com}. replace trend=3 if year==2002
{txt}(19566 real changes made)

{com}. replace trend=4 if year==2003
{txt}(18318 real changes made)

{com}. replace trend=5 if year==2004
{txt}(26601 real changes made)

{com}. replace trend=6 if year==2005
{txt}(26666 real changes made)

{com}. replace trend=7 if year==2006
{txt}(26190 real changes made)

{com}. replace trend=8 if year==2007
{txt}(27564 real changes made)

{com}. 
. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(18 missing values generated)

{com}. *Correct for negative and 0 FFI in order to take log
. gen ffi_tmp = familyfarmincome
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<=0 
{txt}(24638 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(207193 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}(1 missing value generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(24 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(16448 missing values generated)

{com}. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 6 May 2012, 15:56:14
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 6 May 2012, 15:57:25
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. 
. *keep if year_min<=02 & year_max>=05
. *This step leaves you with only 14 countries!!!
. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(107021 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. 
. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(18118 real changes made)

{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(186422 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(20709 real changes made)

{com}. replace trend=2 if year==2001
{txt}(20808 real changes made)

{com}. replace trend=3 if year==2002
{txt}(19566 real changes made)

{com}. replace trend=4 if year==2003
{txt}(18318 real changes made)

{com}. replace trend=5 if year==2004
{txt}(26601 real changes made)

{com}. replace trend=6 if year==2005
{txt}(26666 real changes made)

{com}. replace trend=7 if year==2006
{txt}(26190 real changes made)

{com}. replace trend=8 if year==2007
{txt}(27564 real changes made)

{com}. 
. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(18 missing values generated)

{com}. *Correct for negative and 0 FFI in order to take log
. gen ffi_tmp = familyfarmincome
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<=0 
{txt}(24638 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(207193 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}(1 missing value generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(24 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(16448 missing values generated)

{com}. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 6 May 2012, 15:57:30
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 6 May 2012, 16:03:13
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. 
. *keep if year_min<=02 & year_max>=05
. *This step leaves you with only 14 countries!!!
. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(107021 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. 
. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(18118 real changes made)

{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(186422 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(20709 real changes made)

{com}. replace trend=2 if year==2001
{txt}(20808 real changes made)

{com}. replace trend=3 if year==2002
{txt}(19566 real changes made)

{com}. replace trend=4 if year==2003
{txt}(18318 real changes made)

{com}. replace trend=5 if year==2004
{txt}(26601 real changes made)

{com}. replace trend=6 if year==2005
{txt}(26666 real changes made)

{com}. replace trend=7 if year==2006
{txt}(26190 real changes made)

{com}. replace trend=8 if year==2007
{txt}(27564 real changes made)

{com}. 
. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(18 missing values generated)

{com}. *Correct for negative and 0 FFI in order to take log
. gen ffi_tmp = familyfarmincome
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<=0 
{txt}(24638 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(207193 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}(1 missing value generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(24 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(16448 missing values generated)

{com}. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 6 May 2012, 16:03:18
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 6 May 2012, 16:15:01
{txt}
{com}. sdkf;ja
{err}unrecognized command:  sdkf
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. view logs/6_May*

. view logs/6_May_2012_16_03_18.log

. dir logs/6_May_2012_16_03_18.log

{res}ls: cannot access logs/6_May_2012_16_03_18.log: No such file or directory

{com}. ls logs/

{res}total 468
-rw------- 1 patrickgillespie patrickgillespie   1485 2011-12-08 17:04 a_cmdlg.txt
-rw------- 1 patrickgillespie patrickgillespie  11903 2011-12-08 17:04 a_log.smcl
-rw-rw-r-- 1 patrickgillespie patrickgillespie   7347 2012-05-02 17:25 biofuels_17:25.smcl
-rw-rw-r-- 1 patrickgillespie patrickgillespie      0 2012-05-02 17:24 biofuels_17:25.txt
-rw-rw-r-- 1 patrickgillespie patrickgillespie 369058 2012-05-06 16:19 biofuels.smcl
-rw-rw-r-- 1 patrickgillespie patrickgillespie  40335 2012-05-02 16:44 biofuels_tr#msc.smcl
-rw-rw-r-- 1 patrickgillespie patrickgillespie      0 2012-05-02 16:24 biofuels_tr#msc.txt
-rw-rw-r-- 1 patrickgillespie patrickgillespie   6265 2012-05-06 16:19 biofuels.txt
-rw------- 1 patrickgillespie patrickgillespie    569 2011-10-20 13:05 commands.txt
-rw-rw-r-- 1 patrickgillespie patrickgillespie   5089 2012-04-20 15:09 descriptives.smcl
-rw-rw-r-- 1 patrickgillespie patrickgillespie     11 2012-04-20 15:09 descriptives.txt
drwxrwxr-x 2 patrickgillespie patrickgillespie   4096 2012-05-06 16:03 results/
-rw------- 1 patrickgillespie patrickgillespie   7542 2012-04-10 14:28 ssc_results.smcl

{com}. dir logs/results/6_May_2012_16_03_18.log

{res}-rw-rw-r-- 1 patrickgillespie patrickgillespie 39952 2012-05-06 16:15 logs/results/6_May_2012_16_03_18.log

{com}. view logs/results/6_May*

. view logs/results/6_May_2012_16_03_18.log

. clear

. eixt
{err}unrecognized command:  eixt
{txt}{search r(199):r(199);}

{com}. exit
{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 08:53:51
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=02 & year_max>=05
{txt}(207193 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(0 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{err}__000001 not found
{txt}{search r(111):r(111);}

end of do-file
{search r(111):r(111);}

end of do-file

{search r(111):r(111);}

{com}. br energycrop*

. br pid

. drop pid

. egen pid = group(country region subregion farmcode)
{err}variable __000001 not found
{txt}{search r(111):r(111);}

{com}. br country region subregion farmcode

. describe

{txt}Contains data from {res}../CountrySTATAFiles/databuilds/data9907.dta
{txt}  obs:{res}             0                          
{txt} vars:{res}           193                          6 May 2012 15:55
{txt} size:{res}             0{txt} (100.0% of memory free)
{hline}
              storage  display     value
variable name   type   format      label      variable label
{hline}
{p 0 48}{res}{bind:region         }{txt}{bind: int    }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Region{p_end}
{p 0 48}{bind:organisationa~m}{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Organis-ational Form{p_end}
{p 0 48}{bind:subregion      }{txt}{bind: int    }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Sub-region{p_end}
{p 0 48}{bind:country        }{txt}{bind: str4   }{bind:{txt}%9s        }{space 1}{bind:         }{bind:  }{res}{res}Country{p_end}
{p 0 48}{bind:sizeclass      }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Size Class{p_end}
{p 0 48}{bind:generalfarmtype}{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}General Farm Type{p_end}
{p 0 48}{bind:principalfarm~e}{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Principal Farm Type{p_end}
{p 0 48}{bind:farmcode       }{txt}{bind: long   }{bind:{txt}%12.0g     }{space 1}{bind:         }{bind:  }{res}{res}Farm Code{p_end}
{p 0 48}{bind:a30            }{txt}{bind: int    }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}A30{p_end}
{p 0 48}{bind:organicfarming }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Organic Farming{p_end}
{p 0 48}{bind:lessfavoureda~a}{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Less Favoured Area{p_end}
{p 0 48}{bind:altitudezone   }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Altitude Zone{p_end}
{p 0 48}{bind:structuralfunds}{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Structural Funds{p_end}
{p 0 48}{bind:environmental~a}{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Environ-mental Constraints Area{p_end}
{p 0 48}{bind:year           }{txt}{bind: int    }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}YEAR{p_end}
{p 0 48}{bind:economicsize   }{txt}{bind: long   }{bind:{txt}%12.0g     }{space 1}{bind:         }{bind:  }{res}{res}Economic Size{p_end}
{p 0 48}{bind:uaaunderirrig~n}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}UAA under Irrigation{p_end}
{p 0 48}{bind:commonageuaa   }{txt}{bind: long   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Common-age UAA{p_end}
{p 0 48}{bind:uaainownerocc~n}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}UAA in owner occupation{p_end}
{p 0 48}{bind:uaainsharecro~g}{txt}{bind: float  }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}UAA in share cropping{p_end}
{p 0 48}{bind:totallabourin~u}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total Labour Input (AWU){p_end}
{p 0 48}{bind:labourinputho~s}{txt}{bind: long   }{bind:{txt}%12.0g     }{space 1}{bind:         }{bind:  }{res}{res}Labour Input (Hours){p_end}
{p 0 48}{bind:unpaidlabouri~s}{txt}{bind: long   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Unpaid Labour Input (Hours){p_end}
{p 0 48}{bind:paidlabourinp~s}{txt}{bind: long   }{bind:{txt}%12.0g     }{space 1}{bind:         }{bind:  }{res}{res}Paid Labour Input (Hours){p_end}
{p 0 48}{bind:totaluaa       }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total UAA{p_end}
{p 0 48}{bind:renteduaa      }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Rented UAA{p_end}
{p 0 48}{bind:cerealsuaa     }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Cereals UAA{p_end}
{p 0 48}{bind:otherfieldcro~a}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Other Field Crops UAA{p_end}
{p 0 48}{bind:energycropsuaa }{txt}{bind: double }{bind:{txt}%12.0g     }{space 1}{bind:         }{bind:  }{res}{res}Energy Crops UAA{p_end}
{p 0 48}{bind:v30            }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:v31            }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:v32            }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:v33            }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:v34            }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:v35            }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:triggerpoint   }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Trigger Point{p_end}
{p 0 48}{bind:vegetablesand~a}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Vegetables and Flowers UAA{p_end}
{p 0 48}{bind:vineyardsuaa   }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Vineyards UAA{p_end}
{p 0 48}{bind:permanentcrop~a}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Permanent Crops UAA{p_end}
{p 0 48}{bind:orchardsuaa    }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Orchards UAA{p_end}
{p 0 48}{bind:olivegrovesuaa }{txt}{bind: float  }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Olive Groves UAA{p_end}
{p 0 48}{bind:otherpermanen~a}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Other Permanent Crops UAA{p_end}
{p 0 48}{bind:foragecropsuaa }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Forage Crops UAA{p_end}
{p 0 48}{bind:agriculturalf~a}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Agricultural Fallows UAA{p_end}
{p 0 48}{bind:setasideuaa    }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Set Aside UAA{p_end}
{p 0 48}{bind:woodlandarea   }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Woodland Area{p_end}
{p 0 48}{bind:totallivestoc~s}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total Livestock Units{p_end}
{p 0 48}{bind:dairycowslus   }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Dairy Cows LUs{p_end}
{p 0 48}{bind:othercattlelus }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Other Cattle LUs{p_end}
{p 0 48}{bind:sheepandgoats~s}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Sheep and Goats LUs{p_end}
{p 0 48}{bind:pigslus        }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Pigs LUs{p_end}
{p 0 48}{bind:poultrylus     }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Poultry LUs{p_end}
{p 0 48}{bind:wheatyield     }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Wheat Yield{p_end}
{p 0 48}{bind:maizeyield     }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Maize Yield{p_end}
{p 0 48}{bind:stockingdensity}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Stocking Density{p_end}
{p 0 48}{bind:foragearea     }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Forage Area{p_end}
{p 0 48}{bind:grazinglivest~k}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Grazing Livestock{p_end}
{p 0 48}{bind:milkyield      }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Milk Yield{p_end}
{p 0 48}{bind:dairycows      }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Dairy Cows{p_end}
{p 0 48}{bind:dairyproducts  }{txt}{bind: double }{bind:{txt}%12.0g     }{space 1}{bind:         }{bind:  }{res}{res}Dairy Products{p_end}
{p 0 48}{bind:totaloutput    }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total Output{p_end}
{p 0 48}{bind:totaloutputcr~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total Output Crops{p_end}
{p 0 48}{bind:cerealsvalue   }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Cereals Value{p_end}
{p 0 48}{bind:proteincropsv~e}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Protein Crops Value{p_end}
{p 0 48}{bind:energycropsva~e}{txt}{bind: double }{bind:{txt}%12.0g     }{space 1}{bind:         }{bind:  }{res}{res}Energy Crops Value{p_end}
{p 0 48}{bind:potatoesvalue  }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Potatoes Value{p_end}
{p 0 48}{bind:sugarbeetvalue }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Sugar Beet Value{p_end}
{p 0 48}{bind:oilseedrapeva~e}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Oil-seed Rape Value{p_end}
{p 0 48}{bind:industrialcro~e}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Industrial Crops Value{p_end}
{p 0 48}{bind:vegetablesand~e}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Vegetables and Flowers Value{p_end}
{p 0 48}{bind:fruitvalue     }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Fruit Value{p_end}
{p 0 48}{bind:citrusfruitva~e}{txt}{bind: double }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Citrus Fruit Value{p_end}
{p 0 48}{bind:wineandgrapes~e}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Wine and Grapes Value{p_end}
{p 0 48}{bind:olivesandoliv~e}{txt}{bind: double }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Olives and Olive Oil Value{p_end}
{p 0 48}{bind:foragecropsva~e}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Forage Crops Value{p_end}
{p 0 48}{bind:othercropoutp~e}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Other Crop Output Value{p_end}
{p 0 48}{bind:totaloutputli~k}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total Output Livestock{p_end}
{p 0 48}{bind:changesinvalu~k}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Changes in Value of Livestock{p_end}
{p 0 48}{bind:cowsmilkandmi~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Cow's Milk and Milk Products{p_end}
{p 0 48}{bind:beefandveal    }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Beef and Veal{p_end}
{p 0 48}{bind:pigmeat        }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Pigmeat{p_end}
{p 0 48}{bind:sheepandgoats  }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Sheep and Goats{p_end}
{p 0 48}{bind:poultrymeat    }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Poultry-meat{p_end}
{p 0 48}{bind:eggs           }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Eggs{p_end}
{p 0 48}{bind:ewesandgoatsm~k}{txt}{bind: double }{bind:{txt}%12.0g     }{space 1}{bind:         }{bind:  }{res}{res}Ewes and Goats Milk{p_end}
{p 0 48}{bind:otherlivest~cts}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Other Livestock and Products{p_end}
{p 0 48}{bind:otheroutput    }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Other Output{p_end}
{p 0 48}{bind:totalinputs    }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total Inputs{p_end}
{p 0 48}{bind:totalintermed~n}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total Intermediate Consumption{p_end}
{p 0 48}{bind:totalspecific~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total Specific Costs{p_end}
{p 0 48}{bind:seedsandplants }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Seeds and Plants{p_end}
{p 0 48}{bind:seedsandplant~n}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Seeds and Plants Home Grown{p_end}
{p 0 48}{bind:fertilisers    }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Fertilisers{p_end}
{p 0 48}{bind:cropprotection }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Crop Protection{p_end}
{p 0 48}{bind:othercropspec~c}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Other Crop Specific{p_end}
{p 0 48}{bind:feedforgrazin~k}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Feed for grazing livestock{p_end}
{p 0 48}{bind:feedforgrazin~n}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Feed for grazing livestock home-grown{p_end}
{p 0 48}{bind:feedforpigspo~y}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Feed for pigs & poultry{p_end}
{p 0 48}{bind:feedforpigspo~n}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Feed for pigs&poultry home-grown{p_end}
{p 0 48}{bind:otherlivest~sts}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Other livestock specific costs{p_end}
{p 0 48}{bind:forestryspeci~s}{txt}{bind: double }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Forestry specific costs{p_end}
{p 0 48}{bind:totalfarmingo~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total farming overheads{p_end}
{p 0 48}{bind:machininerybu~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Machininery & building current costs{p_end}
{p 0 48}{bind:energy         }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Energy{p_end}
{p 0 48}{bind:contractwork   }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Contract work{p_end}
{p 0 48}{bind:otherdirectin~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Other direct inputs{p_end}
{p 0 48}{bind:depreciation   }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Depreciation{p_end}
{p 0 48}{bind:totalexternal~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total external factors{p_end}
{p 0 48}{bind:wagespaid      }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Wages paid{p_end}
{p 0 48}{bind:rentpaid       }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Rent paid{p_end}
{p 0 48}{bind:interestpaid   }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Interest paid{p_end}
{p 0 48}{bind:taxes          }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Taxes{p_end}
{p 0 48}{bind:vatbalanceexc~t}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}VAT balance excl invest{p_end}
{p 0 48}{bind:balancesubsid~t}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Balance subsidies & taxes invest{p_end}
{p 0 48}{bind:subsidiesonin~t}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Subsidies on invest{p_end}
{p 0 48}{bind:paymentstodai~s}{txt}{bind: double }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Payments to dairy outgoers{p_end}
{p 0 48}{bind:vatoninvest    }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}VAT on invest{p_end}
{p 0 48}{bind:grossfarmincome}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Gross Farm Income{p_end}
{p 0 48}{bind:farmnetvaluea~d}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Farm Net Value Added{p_end}
{p 0 48}{bind:familyfarminc~e}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Family Farm Income{p_end}
{p 0 48}{bind:farmnetvaluea~u}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Farm Net Value Added / AWU{p_end}
{p 0 48}{bind:awu            }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}AWU{p_end}
{p 0 48}{bind:v123           }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Farm Net Value Added{p_end}
{p 0 48}{bind:familyfarminc~u}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Family Farm Income / FWU{p_end}
{p 0 48}{bind:fwu            }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}FWU{p_end}
{p 0 48}{bind:v126           }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Family Farm Income{p_end}
{p 0 48}{bind:totalassets    }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total assets{p_end}
{p 0 48}{bind:totalfixedass~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total fixed assets{p_end}
{p 0 48}{bind:landpermanane~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Land, permananent crops & quotas{p_end}
{p 0 48}{bind:buildings      }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Buildings{p_end}
{p 0 48}{bind:machinery      }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Machinery{p_end}
{p 0 48}{bind:breedinglives~k}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Breeding livestock{p_end}
{p 0 48}{bind:totalcurrenta~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total current assets{p_end}
{p 0 48}{bind:nonbreedingli~k}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Non-breeding livestock{p_end}
{p 0 48}{bind:stockofagricu~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Stock of agricultural products{p_end}
{p 0 48}{bind:othercirculat~l}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Other circulating capital{p_end}
{p 0 48}{bind:totalliabilit~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total liabilities{p_end}
{p 0 48}{bind:longmediumter~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Long & medium-term loans{p_end}
{p 0 48}{bind:shorttermloans }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Short-term loans{p_end}
{p 0 48}{bind:networth       }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Net worth{p_end}
{p 0 48}{bind:changeinnetwo~h}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Change in net worth{p_end}
{p 0 48}{bind:averagefarmca~l}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Average farm capital{p_end}
{p 0 48}{bind:grossinvestment}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Gross Investment{p_end}
{p 0 48}{bind:netinvestment  }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Net Investment{p_end}
{p 0 48}{bind:cashflow1      }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Cash Flow (1){p_end}
{p 0 48}{bind:cashflow2      }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Cash Flow (2){p_end}
{p 0 48}{bind:balancecurren~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Balance current subsidies & taxes{p_end}
{p 0 48}{bind:totalsubsidie~m}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total subsidies - excluding on investments{p_end}
{p 0 48}{bind:totalsubsidie~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total subsidies on crops{p_end}
{p 0 48}{bind:compensatoryp~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Compensatory payments/area payments{p_end}
{p 0 48}{bind:setasidepremi~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Set aside premiums{p_end}
{p 0 48}{bind:othercropssub~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Other crops subsidies{p_end}
{p 0 48}{bind:totalsubsidie~k}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Total subsidies on livestock{p_end}
{p 0 48}{bind:subsidiesdair~g}{txt}{bind: double }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Subsidies dairying{p_end}
{p 0 48}{bind:subsidiesothe~e}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Subsidies other cattle{p_end}
{p 0 48}{bind:subsidiesshee~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Subsidies sheep & goats{p_end}
{p 0 48}{bind:otherlivesto~es}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Other livestock subsidies{p_end}
{p 0 48}{bind:othersubsidies }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Other subsidies{p_end}
{p 0 48}{bind:environmental~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Environ-mental subsidies{p_end}
{p 0 48}{bind:lfasubsidies   }{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}LFA subsidies{p_end}
{p 0 48}{bind:otherruraldev~s}{txt}{bind: double }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Other rural development payments{p_end}
{p 0 48}{bind:subsidiesonin~i}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Subsidies on intermediate consumption{p_end}
{p 0 48}{bind:subsidiesonex~s}{txt}{bind: double }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Subsidies on external factors{p_end}
{p 0 48}{bind:decoupledpaym~s}{txt}{bind: double }{bind:{txt}%12.0g     }{space 1}{bind:         }{bind:  }{res}{res}Decoupled payments{p_end}
{p 0 48}{bind:singlefarmpay~t}{txt}{bind: double }{bind:{txt}%12.0g     }{space 1}{bind:         }{bind:  }{res}{res}Single Farm payment{p_end}
{p 0 48}{bind:singleareapay~t}{txt}{bind: double }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Single Area payment{p_end}
{p 0 48}{bind:additionalaid  }{txt}{bind: float  }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Additional aid{p_end}
{p 0 48}{bind:farmsrepresen~d}{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Farms represented{p_end}
{p 0 48}{bind:samplefarms    }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Sample farms{p_end}
{p 0 48}{bind:exchangerate   }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Exchange rate{p_end}
{p 0 48}{bind:v116           }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Farm Net Value Added{p_end}
{p 0 48}{bind:v119           }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Family Farm Income{p_end}
{p 0 48}{bind:year1          }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:year2          }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:year3          }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:year4          }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:year5          }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:year6          }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:year7          }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:year8          }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:year9          }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:adopt          }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:setaside       }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}Set aside{p_end}
{p 0 48}{bind:v127           }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Farm Net Value Added{p_end}
{p 0 48}{bind:v130           }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}Family Farm Income{p_end}
{p 0 48}{bind:v143           }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}long medium term loans{p_end}
{p 0 48}{bind:energycroppre~m}{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}energy crop premium{p_end}
{p 0 48}{bind:decoupling     }{txt}{bind: byte   }{bind:{txt}%8.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:oilseedrapeuaa }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}K132AA{p_end}
{p 0 48}{bind:year_max       }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:year_min       }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:energydum      }{txt}{bind: float  }{bind:{txt}%9.0g      }{space 1}{bind:         }{bind:  }{res}{res}{p_end}
{p 0 48}{bind:mscode         }{txt}{bind: long   }{bind:{txt}%12.0g     }{space 1}{bind:mscode   }{bind:  }{res}{res}Country{p_end}
{txt}{hline}
Sorted by:  
{res}     Note:  dataset has changed since last saved

{com}. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 08:57:22
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 08:57:26
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 12:28:49
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. by: country sum year_max year_min
{err}varlist required
{txt}{search r(100):r(100);}

end of do-file
{search r(100):r(100);}

end of do-file

{search r(100):r(100);}

{com}. sum year_max

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}    207193    2005.298    2.325441       1999       2007

{com}. by country: sum year_max
{err}not sorted
{txt}{search r(5):r(5);}

{com}. sort country

. by country: sum year_max

{txt}{hline}
-> country = BEL

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}      2495    2004.485    2.141839       1999       2007

{txt}{hline}
-> country = BGR

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}       530        2007           0       2007       2007

{txt}{hline}
-> country = CYP

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}       457    2006.022    1.256371       2004       2007

{txt}{hline}
-> country = CZE

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}      3320    2006.511    .9121663       2004       2007

{txt}{hline}
-> country = DAN

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}      8225    2004.499    2.193581       1999       2007

{txt}{hline}
-> country = DEU

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}     25207    2005.601    2.227101       1999       2007

{txt}{hline}
-> country = ELL

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}     18505    2005.305    2.267835       1999       2007

{txt}{hline}
-> country = ESP

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}     23241     2005.51    2.203131       1999       2007

{txt}{hline}
-> country = EST

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}      1040    2006.745    .6933452       2004       2007

{txt}{hline}
-> country = FRA

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}     25465    2005.683    2.066521       1999       2007

{txt}{hline}
-> country = HUN

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}      4774    2006.727    .7073963       2004       2007

{txt}{hline}
-> country = IRE

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}       996    2005.612    2.107275       1999       2007

{txt}{hline}
-> country = ITA

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}     42257    2003.973    2.616322       1999       2007

{txt}{hline}
-> country = LTU

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}      2949    2006.274    1.036088       2004       2007

{txt}{hline}
-> country = LUX

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}       596    2005.416    2.101142       1999       2007

{txt}{hline}
-> country = LVA

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}      1792     2006.41     .754423       2004       2007

{txt}{hline}
-> country = MLT

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}        40      2006.3    .8227534       2004       2007

{txt}{hline}
-> country = NED

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}      2317    2005.375    2.456977       2000       2007

{txt}{hline}
-> country = OST

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}      4834    2005.982    1.889643       1999       2007

{txt}{hline}
-> country = POL

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}     17854    2006.591    .7961475       2004       2007

{txt}{hline}
-> country = POR

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}      3156    2004.608    2.552918       1999       2007

{txt}{hline}
-> country = ROU

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}       457        2007           0       2007       2007

{txt}{hline}
-> country = SUO

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}      2863    2006.188    1.804074       1999       2007

{txt}{hline}
-> country = SVE

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}      3621    2005.556    2.240637       1999       2007

{txt}{hline}
-> country = SVK

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}      1648    2006.339    .9328999       2004       2007

{txt}{hline}
-> country = SVN

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}       411    2006.499    .8156239       2004       2007

{txt}{hline}
-> country = UKI

    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
{space 4}year_max {c |}{res}      8143    2004.372    2.924966       1999       2007


{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 13:22:49
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. by: country sum year_max year_min
{err}varlist required
{txt}{search r(100):r(100);}

end of do-file
{search r(100):r(100);}

end of do-file

{search r(100):r(100);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 13:23:10
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. by: country sum year_max year_min
{err}varlist required
{txt}{search r(100):r(100);}

end of do-file
{search r(100):r(100);}

end of do-file

{search r(100):r(100);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 13:23:27
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 13:23:32
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 13:24:31
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 13:24:36
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 13:25:29
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 13:25:33
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 13:26:55
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 13:26:59
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 13:32:54
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log */
. 
. xtreg osrape_prop energydum sizeclass setasideuaa ln_labour specialise i.year year#mscode, fe
{txt}note: 2007.year omitted because of collinearity
note: 1999b.year#2.mscode omitted because of collinearity
note: 1999b.year#3.mscode omitted because of collinearity
note: 1999b.year#4.mscode omitted because of collinearity
note: 1999b.year#8.mscode omitted because of collinearity
note: 1999b.year#11.mscode omitted because of collinearity
note: 1999b.year#12.mscode omitted because of collinearity
note: 1999b.year#13.mscode omitted because of collinearity
note: 2000.year#14.mscode omitted because of collinearity
note: 2003.year#7.mscode omitted because of collinearity
note: 2007.year#5.mscode omitted because of collinearity
note: 2007.year#6.mscode omitted because of collinearity
note: 2007.year#9.mscode omitted because of collinearity
note: 2007.year#10.mscode omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    78186
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    10863

{txt}R-sq:  within  = {res}0.0355                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0357                                        {txt}avg = {res}      7.2
{txt}       overall = {res}0.0376                                        {txt}max = {res}        9

                                                {txt}F({res}116{txt},{res}67207{txt})       = {res}    21.35
{txt}corr(u_i, Xb)  = {res}-0.3453                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2} .1135102{col 26}{space 2} .0595026{col 37}{space 1}    1.91{col 46}{space 3}0.056{col 54}{space 4}-.0031148{col 67}{space 3} .2301352
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0019207{col 26}{space 2} .0004974{col 37}{space 1}   -3.86{col 46}{space 3}0.000{col 54}{space 4}-.0028956{col 67}{space 3}-.0009458
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0003847{col 26}{space 2} .0000267{col 37}{space 1}  -14.43{col 46}{space 3}0.000{col 54}{space 4} -.000437{col 67}{space 3}-.0003325
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0028747{col 26}{space 2} .0010031{col 37}{space 1}   -2.87{col 46}{space 3}0.004{col 54}{space 4}-.0048407{col 67}{space 3}-.0009086
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0011163{col 26}{space 2} .0008075{col 37}{space 1}    1.38{col 46}{space 3}0.167{col 54}{space 4}-.0004663{col 67}{space 3} .0026989
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0346103{col 26}{space 2} .0060769{col 37}{space 1}   -5.70{col 46}{space 3}0.000{col 54}{space 4}-.0465211{col 67}{space 3}-.0226996
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0399272{col 26}{space 2} .0057851{col 37}{space 1}   -6.90{col 46}{space 3}0.000{col 54}{space 4} -.051266{col 67}{space 3}-.0285884
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0433043{col 26}{space 2} .0056531{col 37}{space 1}   -7.66{col 46}{space 3}0.000{col 54}{space 4}-.0543845{col 67}{space 3}-.0322241
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0314034{col 26}{space 2} .0057077{col 37}{space 1}   -5.50{col 46}{space 3}0.000{col 54}{space 4}-.0425904{col 67}{space 3}-.0202164
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.1340099{col 26}{space 2} .0594138{col 37}{space 1}   -2.26{col 46}{space 3}0.024{col 54}{space 4}-.2504609{col 67}{space 3}-.0175589
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.1442274{col 26}{space 2} .0594122{col 37}{space 1}   -2.43{col 46}{space 3}0.015{col 54}{space 4}-.2606753{col 67}{space 3}-.0277796
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}-.1312752{col 26}{space 2} .0594284{col 37}{space 1}   -2.21{col 46}{space 3}0.027{col 54}{space 4}-.2477549{col 67}{space 3}-.0147955
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 1}year#mscode {c |}
{space 4}1999  2  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  3  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  4  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  5  {c |}{col 14}{res}{space 2} .1198167{col 26}{space 2}  .059542{col 37}{space 1}    2.01{col 46}{space 3}0.044{col 54}{space 4} .0031143{col 67}{space 3}  .236519
{txt}{space 4}1999  6  {c |}{col 14}{res}{space 2} .1146599{col 26}{space 2} .0605424{col 37}{space 1}    1.89{col 46}{space 3}0.058{col 54}{space 4}-.0040032{col 67}{space 3}  .233323
{txt}{space 4}1999  7  {c |}{col 14}{res}{space 2} .0091617{col 26}{space 2} .0073884{col 37}{space 1}    1.24{col 46}{space 3}0.215{col 54}{space 4}-.0053196{col 67}{space 3}  .023643
{txt}{space 4}1999  8  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  9  {c |}{col 14}{res}{space 2} .1144267{col 26}{space 2} .0599527{col 37}{space 1}    1.91{col 46}{space 3}0.056{col 54}{space 4}-.0030806{col 67}{space 3} .2319339
{txt}{space 4}1999 10  {c |}{col 14}{res}{space 2} .1291664{col 26}{space 2} .0596545{col 37}{space 1}    2.17{col 46}{space 3}0.030{col 54}{space 4} .0122435{col 67}{space 3} .2460892
{txt}{space 4}1999 11  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999 12  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999 13  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999 14  {c |}{col 14}{res}{space 2}-.0239967{col 26}{space 2} .0105033{col 37}{space 1}   -2.28{col 46}{space 3}0.022{col 54}{space 4}-.0445832{col 67}{space 3}-.0034103
{txt}{space 4}2000  2  {c |}{col 14}{res}{space 2} .0171097{col 26}{space 2} .0064322{col 37}{space 1}    2.66{col 46}{space 3}0.008{col 54}{space 4} .0045026{col 67}{space 3} .0297167
{txt}{space 4}2000  3  {c |}{col 14}{res}{space 2} .0308445{col 26}{space 2} .0066114{col 37}{space 1}    4.67{col 46}{space 3}0.000{col 54}{space 4} .0178862{col 67}{space 3} .0438027
{txt}{space 4}2000  4  {c |}{col 14}{res}{space 2} .0218164{col 26}{space 2} .0064124{col 37}{space 1}    3.40{col 46}{space 3}0.001{col 54}{space 4} .0092482{col 67}{space 3} .0343847
{txt}{space 4}2000  5  {c |}{col 14}{res}{space 2} .1401759{col 26}{space 2} .0594974{col 37}{space 1}    2.36{col 46}{space 3}0.018{col 54}{space 4}  .023561{col 67}{space 3} .2567909
{txt}{space 4}2000  6  {c |}{col 14}{res}{space 2} .1453889{col 26}{space 2} .0604356{col 37}{space 1}    2.41{col 46}{space 3}0.016{col 54}{space 4} .0269352{col 67}{space 3} .2638425
{txt}{space 4}2000  7  {c |}{col 14}{res}{space 2} .0254015{col 26}{space 2} .0068476{col 37}{space 1}    3.71{col 46}{space 3}0.000{col 54}{space 4} .0119803{col 67}{space 3} .0388228
{txt}{space 4}2000  8  {c |}{col 14}{res}{space 2} .0078394{col 26}{space 2}  .016193{col 37}{space 1}    0.48{col 46}{space 3}0.628{col 54}{space 4}-.0238989{col 67}{space 3} .0395776
{txt}{space 4}2000  9  {c |}{col 14}{res}{space 2}  .149012{col 26}{space 2} .0599077{col 37}{space 1}    2.49{col 46}{space 3}0.013{col 54}{space 4} .0315931{col 67}{space 3}  .266431
{txt}{space 4}2000 10  {c |}{col 14}{res}{space 2} .1447227{col 26}{space 2} .0596086{col 37}{space 1}    2.43{col 46}{space 3}0.015{col 54}{space 4} .0278899{col 67}{space 3} .2615554
{txt}{space 4}2000 11  {c |}{col 14}{res}{space 2}  .037833{col 26}{space 2} .0103444{col 37}{space 1}    3.66{col 46}{space 3}0.000{col 54}{space 4} .0175579{col 67}{space 3} .0581081
{txt}{space 4}2000 12  {c |}{col 14}{res}{space 2} .0317932{col 26}{space 2} .0082942{col 37}{space 1}    3.83{col 46}{space 3}0.000{col 54}{space 4} .0155367{col 67}{space 3} .0480497
{txt}{space 4}2000 13  {c |}{col 14}{res}{space 2} .0178027{col 26}{space 2} .0080933{col 37}{space 1}    2.20{col 46}{space 3}0.028{col 54}{space 4} .0019398{col 67}{space 3} .0336655
{txt}{space 4}2000 14  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2001  2  {c |}{col 14}{res}{space 2}  .022366{col 26}{space 2} .0061466{col 37}{space 1}    3.64{col 46}{space 3}0.000{col 54}{space 4} .0103187{col 67}{space 3} .0344132
{txt}{space 4}2001  3  {c |}{col 14}{res}{space 2} .0311928{col 26}{space 2} .0063087{col 37}{space 1}    4.94{col 46}{space 3}0.000{col 54}{space 4} .0188278{col 67}{space 3} .0435578
{txt}{space 4}2001  4  {c |}{col 14}{res}{space 2} .0309362{col 26}{space 2} .0061281{col 37}{space 1}    5.05{col 46}{space 3}0.000{col 54}{space 4} .0189251{col 67}{space 3} .0429473
{txt}{space 4}2001  5  {c |}{col 14}{res}{space 2} .1393205{col 26}{space 2} .0594641{col 37}{space 1}    2.34{col 46}{space 3}0.019{col 54}{space 4} .0227709{col 67}{space 3}   .25587
{txt}{space 4}2001  6  {c |}{col 14}{res}{space 2} .1439406{col 26}{space 2} .0603441{col 37}{space 1}    2.39{col 46}{space 3}0.017{col 54}{space 4} .0256663{col 67}{space 3} .2622149
{txt}{space 4}2001  7  {c |}{col 14}{res}{space 2} .0389045{col 26}{space 2} .0062431{col 37}{space 1}    6.23{col 46}{space 3}0.000{col 54}{space 4} .0266681{col 67}{space 3}  .051141
{txt}{space 4}2001  8  {c |}{col 14}{res}{space 2}   .01773{col 26}{space 2}  .015675{col 37}{space 1}    1.13{col 46}{space 3}0.258{col 54}{space 4}-.0129931{col 67}{space 3}  .048453
{txt}{space 4}2001  9  {c |}{col 14}{res}{space 2} .1518899{col 26}{space 2} .0597844{col 37}{space 1}    2.54{col 46}{space 3}0.011{col 54}{space 4} .0347126{col 67}{space 3} .2690672
{txt}{space 4}2001 10  {c |}{col 14}{res}{space 2} .1530472{col 26}{space 2} .0595682{col 37}{space 1}    2.57{col 46}{space 3}0.010{col 54}{space 4} .0362936{col 67}{space 3} .2698008
{txt}{space 4}2001 11  {c |}{col 14}{res}{space 2} .0412892{col 26}{space 2} .0101852{col 37}{space 1}    4.05{col 46}{space 3}0.000{col 54}{space 4} .0213263{col 67}{space 3} .0612522
{txt}{space 4}2001 12  {c |}{col 14}{res}{space 2} .0360146{col 26}{space 2} .0080883{col 37}{space 1}    4.45{col 46}{space 3}0.000{col 54}{space 4} .0201616{col 67}{space 3} .0518676
{txt}{space 4}2001 13  {c |}{col 14}{res}{space 2} .0210974{col 26}{space 2}  .007822{col 37}{space 1}    2.70{col 46}{space 3}0.007{col 54}{space 4} .0057664{col 67}{space 3} .0364285
{txt}{space 4}2001 14  {c |}{col 14}{res}{space 2}-.0105731{col 26}{space 2} .0086921{col 37}{space 1}   -1.22{col 46}{space 3}0.224{col 54}{space 4}-.0276097{col 67}{space 3} .0064634
{txt}{space 4}2002  2  {c |}{col 14}{res}{space 2} .0370121{col 26}{space 2} .0060118{col 37}{space 1}    6.16{col 46}{space 3}0.000{col 54}{space 4} .0252288{col 67}{space 3} .0487953
{txt}{space 4}2002  3  {c |}{col 14}{res}{space 2} .0362832{col 26}{space 2} .0061731{col 37}{space 1}    5.88{col 46}{space 3}0.000{col 54}{space 4} .0241838{col 67}{space 3} .0483826
{txt}{space 4}2002  4  {c |}{col 14}{res}{space 2} .0215524{col 26}{space 2} .0060011{col 37}{space 1}    3.59{col 46}{space 3}0.000{col 54}{space 4} .0097903{col 67}{space 3} .0333146
{txt}{space 4}2002  5  {c |}{col 14}{res}{space 2} .1266751{col 26}{space 2} .0594449{col 37}{space 1}    2.13{col 46}{space 3}0.033{col 54}{space 4} .0101632{col 67}{space 3} .2431871
{txt}{space 4}2002  6  {c |}{col 14}{res}{space 2} .1486773{col 26}{space 2} .0601937{col 37}{space 1}    2.47{col 46}{space 3}0.014{col 54}{space 4} .0306977{col 67}{space 3} .2666569
{txt}{space 4}2002  7  {c |}{col 14}{res}{space 2} .0113026{col 26}{space 2} .0058485{col 37}{space 1}    1.93{col 46}{space 3}0.053{col 54}{space 4}-.0001605{col 67}{space 3} .0227657
{txt}{space 4}2002  8  {c |}{col 14}{res}{space 2}  .012088{col 26}{space 2} .0151902{col 37}{space 1}    0.80{col 46}{space 3}0.426{col 54}{space 4}-.0176848{col 67}{space 3} .0418608
{txt}{space 4}2002  9  {c |}{col 14}{res}{space 2} .1553935{col 26}{space 2} .0597524{col 37}{space 1}    2.60{col 46}{space 3}0.009{col 54}{space 4} .0382789{col 67}{space 3} .2725082
{txt}{space 4}2002 10  {c |}{col 14}{res}{space 2} .1578351{col 26}{space 2} .0595584{col 37}{space 1}    2.65{col 46}{space 3}0.008{col 54}{space 4} .0411007{col 67}{space 3} .2745695
{txt}{space 4}2002 11  {c |}{col 14}{res}{space 2} .0380144{col 26}{space 2} .0099669{col 37}{space 1}    3.81{col 46}{space 3}0.000{col 54}{space 4} .0184793{col 67}{space 3} .0575495
{txt}{space 4}2002 12  {c |}{col 14}{res}{space 2} .0365728{col 26}{space 2} .0078705{col 37}{space 1}    4.65{col 46}{space 3}0.000{col 54}{space 4} .0211467{col 67}{space 3} .0519989
{txt}{space 4}2002 13  {c |}{col 14}{res}{space 2}  .040181{col 26}{space 2} .0077364{col 37}{space 1}    5.19{col 46}{space 3}0.000{col 54}{space 4} .0250176{col 67}{space 3} .0553443
{txt}{space 4}2002 14  {c |}{col 14}{res}{space 2}-.0168781{col 26}{space 2} .0085407{col 37}{space 1}   -1.98{col 46}{space 3}0.048{col 54}{space 4}-.0336179{col 67}{space 3}-.0001384
{txt}{space 4}2003  2  {c |}{col 14}{res}{space 2} .0249565{col 26}{space 2} .0060631{col 37}{space 1}    4.12{col 46}{space 3}0.000{col 54}{space 4} .0130728{col 67}{space 3} .0368401
{txt}{space 4}2003  3  {c |}{col 14}{res}{space 2} .0187403{col 26}{space 2} .0062198{col 37}{space 1}    3.01{col 46}{space 3}0.003{col 54}{space 4} .0065495{col 67}{space 3} .0309311
{txt}{space 4}2003  4  {c |}{col 14}{res}{space 2} .0075215{col 26}{space 2} .0060517{col 37}{space 1}    1.24{col 46}{space 3}0.214{col 54}{space 4}-.0043398{col 67}{space 3} .0193828
{txt}{space 4}2003  5  {c |}{col 14}{res}{space 2} .1223987{col 26}{space 2} .0594492{col 37}{space 1}    2.06{col 46}{space 3}0.040{col 54}{space 4} .0058783{col 67}{space 3} .2389191
{txt}{space 4}2003  6  {c |}{col 14}{res}{space 2} .1388888{col 26}{space 2}  .060203{col 37}{space 1}    2.31{col 46}{space 3}0.021{col 54}{space 4}  .020891{col 67}{space 3} .2568867
{txt}{space 4}2003  7  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2003  8  {c |}{col 14}{res}{space 2} .0023593{col 26}{space 2} .0152328{col 37}{space 1}    0.15{col 46}{space 3}0.877{col 54}{space 4}-.0274969{col 67}{space 3} .0322155
{txt}{space 4}2003  9  {c |}{col 14}{res}{space 2} .1440595{col 26}{space 2} .0597617{col 37}{space 1}    2.41{col 46}{space 3}0.016{col 54}{space 4} .0269267{col 67}{space 3} .2611924
{txt}{space 4}2003 10  {c |}{col 14}{res}{space 2} .1420714{col 26}{space 2} .0595632{col 37}{space 1}    2.39{col 46}{space 3}0.017{col 54}{space 4} .0253277{col 67}{space 3} .2588151
{txt}{space 4}2003 11  {c |}{col 14}{res}{space 2} .0295344{col 26}{space 2} .0100415{col 37}{space 1}    2.94{col 46}{space 3}0.003{col 54}{space 4} .0098531{col 67}{space 3} .0492158
{txt}{space 4}2003 12  {c |}{col 14}{res}{space 2} .0363649{col 26}{space 2} .0079005{col 37}{space 1}    4.60{col 46}{space 3}0.000{col 54}{space 4} .0208798{col 67}{space 3}   .05185
{txt}{space 4}2003 13  {c |}{col 14}{res}{space 2} .0219247{col 26}{space 2} .0077716{col 37}{space 1}    2.82{col 46}{space 3}0.005{col 54}{space 4} .0066923{col 67}{space 3} .0371571
{txt}{space 4}2003 14  {c |}{col 14}{res}{space 2}-.0054561{col 26}{space 2} .0085557{col 37}{space 1}   -0.64{col 46}{space 3}0.524{col 54}{space 4}-.0222252{col 67}{space 3} .0113131
{txt}{space 4}2004  2  {c |}{col 14}{res}{space 2} .0163533{col 26}{space 2} .0059956{col 37}{space 1}    2.73{col 46}{space 3}0.006{col 54}{space 4} .0046018{col 67}{space 3} .0281048
{txt}{space 4}2004  3  {c |}{col 14}{res}{space 2} .0060342{col 26}{space 2} .0061585{col 37}{space 1}    0.98{col 46}{space 3}0.327{col 54}{space 4}-.0060365{col 67}{space 3} .0181049
{txt}{space 4}2004  4  {c |}{col 14}{res}{space 2}-.0021976{col 26}{space 2} .0059899{col 37}{space 1}   -0.37{col 46}{space 3}0.714{col 54}{space 4}-.0139378{col 67}{space 3} .0095427
{txt}{space 4}2004  5  {c |}{col 14}{res}{space 2} .1084979{col 26}{space 2} .0594445{col 37}{space 1}    1.83{col 46}{space 3}0.068{col 54}{space 4}-.0080132{col 67}{space 3}  .225009
{txt}{space 4}2004  6  {c |}{col 14}{res}{space 2} .1249299{col 26}{space 2} .0601905{col 37}{space 1}    2.08{col 46}{space 3}0.038{col 54}{space 4} .0069566{col 67}{space 3} .2429032
{txt}{space 4}2004  7  {c |}{col 14}{res}{space 2}-.0091979{col 26}{space 2} .0060123{col 37}{space 1}   -1.53{col 46}{space 3}0.126{col 54}{space 4}-.0209821{col 67}{space 3} .0025863
{txt}{space 4}2004  8  {c |}{col 14}{res}{space 2} .0160941{col 26}{space 2} .0151227{col 37}{space 1}    1.06{col 46}{space 3}0.287{col 54}{space 4}-.0135463{col 67}{space 3} .0457345
{txt}{space 4}2004  9  {c |}{col 14}{res}{space 2} .1338135{col 26}{space 2} .0597502{col 37}{space 1}    2.24{col 46}{space 3}0.025{col 54}{space 4} .0167032{col 67}{space 3} .2509238
{txt}{space 4}2004 10  {c |}{col 14}{res}{space 2} .1297249{col 26}{space 2} .0595535{col 37}{space 1}    2.18{col 46}{space 3}0.029{col 54}{space 4}     .013{col 67}{space 3} .2464498
{txt}{space 4}2004 11  {c |}{col 14}{res}{space 2}  .011746{col 26}{space 2} .0099678{col 37}{space 1}    1.18{col 46}{space 3}0.239{col 54}{space 4}-.0077909{col 67}{space 3} .0312829
{txt}{space 4}2004 12  {c |}{col 14}{res}{space 2} .0322144{col 26}{space 2} .0078635{col 37}{space 1}    4.10{col 46}{space 3}0.000{col 54}{space 4}  .016802{col 67}{space 3} .0476268
{txt}{space 4}2004 13  {c |}{col 14}{res}{space 2} .0274773{col 26}{space 2} .0076897{col 37}{space 1}    3.57{col 46}{space 3}0.000{col 54}{space 4} .0124056{col 67}{space 3}  .042549
{txt}{space 4}2004 14  {c |}{col 14}{res}{space 2}-.0208816{col 26}{space 2} .0085057{col 37}{space 1}   -2.46{col 46}{space 3}0.014{col 54}{space 4}-.0375529{col 67}{space 3}-.0042104
{txt}{space 4}2005  2  {c |}{col 14}{res}{space 2} .0284316{col 26}{space 2} .0059532{col 37}{space 1}    4.78{col 46}{space 3}0.000{col 54}{space 4} .0167633{col 67}{space 3} .0400998
{txt}{space 4}2005  3  {c |}{col 14}{res}{space 2} .0163568{col 26}{space 2} .0061236{col 37}{space 1}    2.67{col 46}{space 3}0.008{col 54}{space 4} .0043546{col 67}{space 3}  .028359
{txt}{space 4}2005  4  {c |}{col 14}{res}{space 2}  .002903{col 26}{space 2} .0059556{col 37}{space 1}    0.49{col 46}{space 3}0.626{col 54}{space 4}-.0087701{col 67}{space 3}  .014576
{txt}{space 4}2005  5  {c |}{col 14}{res}{space 2} .1275225{col 26}{space 2} .0594429{col 37}{space 1}    2.15{col 46}{space 3}0.032{col 54}{space 4} .0110145{col 67}{space 3} .2440304
{txt}{space 4}2005  6  {c |}{col 14}{res}{space 2} .1459408{col 26}{space 2} .0601885{col 37}{space 1}    2.42{col 46}{space 3}0.015{col 54}{space 4} .0279713{col 67}{space 3} .2639103
{txt}{space 4}2005  7  {c |}{col 14}{res}{space 2}-.0000489{col 26}{space 2} .0059281{col 37}{space 1}   -0.01{col 46}{space 3}0.993{col 54}{space 4}-.0116678{col 67}{space 3} .0115701
{txt}{space 4}2005  8  {c |}{col 14}{res}{space 2} .0121398{col 26}{space 2}  .015239{col 37}{space 1}    0.80{col 46}{space 3}0.426{col 54}{space 4}-.0177286{col 67}{space 3} .0420083
{txt}{space 4}2005  9  {c |}{col 14}{res}{space 2} .1438573{col 26}{space 2} .0597463{col 37}{space 1}    2.41{col 46}{space 3}0.016{col 54}{space 4} .0267546{col 67}{space 3} .2609599
{txt}{space 4}2005 10  {c |}{col 14}{res}{space 2} .1452302{col 26}{space 2} .0595494{col 37}{space 1}    2.44{col 46}{space 3}0.015{col 54}{space 4} .0285134{col 67}{space 3} .2619469
{txt}{space 4}2005 11  {c |}{col 14}{res}{space 2} .0145338{col 26}{space 2} .0099838{col 37}{space 1}    1.46{col 46}{space 3}0.145{col 54}{space 4}-.0050345{col 67}{space 3} .0341021
{txt}{space 4}2005 12  {c |}{col 14}{res}{space 2} .0434374{col 26}{space 2} .0078143{col 37}{space 1}    5.56{col 46}{space 3}0.000{col 54}{space 4} .0281213{col 67}{space 3} .0587535
{txt}{space 4}2005 13  {c |}{col 14}{res}{space 2} .0407331{col 26}{space 2} .0076764{col 37}{space 1}    5.31{col 46}{space 3}0.000{col 54}{space 4} .0256874{col 67}{space 3} .0557787
{txt}{space 4}2005 14  {c |}{col 14}{res}{space 2}-.0016955{col 26}{space 2}  .008472{col 37}{space 1}   -0.20{col 46}{space 3}0.841{col 54}{space 4}-.0183006{col 67}{space 3} .0149097
{txt}{space 4}2006  2  {c |}{col 14}{res}{space 2} .0331917{col 26}{space 2} .0061638{col 37}{space 1}    5.38{col 46}{space 3}0.000{col 54}{space 4} .0211106{col 67}{space 3} .0452728
{txt}{space 4}2006  3  {c |}{col 14}{res}{space 2} .0075538{col 26}{space 2} .0063648{col 37}{space 1}    1.19{col 46}{space 3}0.235{col 54}{space 4}-.0049212{col 67}{space 3} .0200289
{txt}{space 4}2006  4  {c |}{col 14}{res}{space 2}-.0136305{col 26}{space 2} .0061647{col 37}{space 1}   -2.21{col 46}{space 3}0.027{col 54}{space 4}-.0257134{col 67}{space 3}-.0015476
{txt}{space 4}2006  5  {c |}{col 14}{res}{space 2} .1231855{col 26}{space 2} .0594605{col 37}{space 1}    2.07{col 46}{space 3}0.038{col 54}{space 4} .0066429{col 67}{space 3}  .239728
{txt}{space 4}2006  6  {c |}{col 14}{res}{space 2} .1286228{col 26}{space 2} .0602545{col 37}{space 1}    2.13{col 46}{space 3}0.033{col 54}{space 4}  .010524{col 67}{space 3} .2467217
{txt}{space 4}2006  7  {c |}{col 14}{res}{space 2}-.0057393{col 26}{space 2} .0061809{col 37}{space 1}   -0.93{col 46}{space 3}0.353{col 54}{space 4}-.0178539{col 67}{space 3} .0063753
{txt}{space 4}2006  8  {c |}{col 14}{res}{space 2} .0120002{col 26}{space 2}  .015854{col 37}{space 1}    0.76{col 46}{space 3}0.449{col 54}{space 4}-.0190736{col 67}{space 3}  .043074
{txt}{space 4}2006  9  {c |}{col 14}{res}{space 2} .1302613{col 26}{space 2} .0597712{col 37}{space 1}    2.18{col 46}{space 3}0.029{col 54}{space 4} .0131098{col 67}{space 3} .2474127
{txt}{space 4}2006 10  {c |}{col 14}{res}{space 2} .1476077{col 26}{space 2} .0595682{col 37}{space 1}    2.48{col 46}{space 3}0.013{col 54}{space 4} .0308541{col 67}{space 3} .2643614
{txt}{space 4}2006 11  {c |}{col 14}{res}{space 2}-.0018373{col 26}{space 2}  .010243{col 37}{space 1}   -0.18{col 46}{space 3}0.858{col 54}{space 4}-.0219135{col 67}{space 3} .0182389
{txt}{space 4}2006 12  {c |}{col 14}{res}{space 2} .0422347{col 26}{space 2}  .008034{col 37}{space 1}    5.26{col 46}{space 3}0.000{col 54}{space 4} .0264879{col 67}{space 3} .0579814
{txt}{space 4}2006 13  {c |}{col 14}{res}{space 2} .0375234{col 26}{space 2} .0079451{col 37}{space 1}    4.72{col 46}{space 3}0.000{col 54}{space 4} .0219509{col 67}{space 3} .0530958
{txt}{space 4}2006 14  {c |}{col 14}{res}{space 2}-.0159217{col 26}{space 2} .0087131{col 37}{space 1}   -1.83{col 46}{space 3}0.068{col 54}{space 4}-.0329994{col 67}{space 3}  .001156
{txt}{space 4}2007  2  {c |}{col 14}{res}{space 2}-.1174811{col 26}{space 2} .0595405{col 37}{space 1}   -1.97{col 46}{space 3}0.048{col 54}{space 4}-.2341805{col 67}{space 3}-.0007818
{txt}{space 4}2007  3  {c |}{col 14}{res}{space 2}-.1217056{col 26}{space 2}  .059566{col 37}{space 1}   -2.04{col 46}{space 3}0.041{col 54}{space 4}-.2384549{col 67}{space 3}-.0049563
{txt}{space 4}2007  4  {c |}{col 14}{res}{space 2}-.1337219{col 26}{space 2}  .059544{col 37}{space 1}   -2.25{col 46}{space 3}0.025{col 54}{space 4}-.2504281{col 67}{space 3}-.0170156
{txt}{space 4}2007  5  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  6  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  7  {c |}{col 14}{res}{space 2}-.1528277{col 26}{space 2} .0595802{col 37}{space 1}   -2.57{col 46}{space 3}0.010{col 54}{space 4}-.2696049{col 67}{space 3}-.0360506
{txt}{space 4}2007  8  {c |}{col 14}{res}{space 2}-.0981168{col 26}{space 2}   .06131{col 37}{space 1}   -1.60{col 46}{space 3}0.110{col 54}{space 4}-.2182844{col 67}{space 3} .0220508
{txt}{space 4}2007  9  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 10  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 11  {c |}{col 14}{res}{space 2}-.1259245{col 26}{space 2} .0601539{col 37}{space 1}   -2.09{col 46}{space 3}0.036{col 54}{space 4}-.2438261{col 67}{space 3}-.0080228
{txt}{space 4}2007 12  {c |}{col 14}{res}{space 2} -.106289{col 26}{space 2}  .059771{col 37}{space 1}   -1.78{col 46}{space 3}0.075{col 54}{space 4}-.2234402{col 67}{space 3} .0108622
{txt}{space 4}2007 13  {c |}{col 14}{res}{space 2}-.0961463{col 26}{space 2} .0597625{col 37}{space 1}   -1.61{col 46}{space 3}0.108{col 54}{space 4}-.2132807{col 67}{space 3}  .020988
{txt}{space 4}2007 14  {c |}{col 14}{res}{space 2}-.1498453{col 26}{space 2} .0598809{col 37}{space 1}   -2.50{col 46}{space 3}0.012{col 54}{space 4}-.2672119{col 67}{space 3}-.0324787
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .0918441{col 26}{space 2} .0184949{col 37}{space 1}    4.97{col 46}{space 3}0.000{col 54}{space 4} .0555941{col 67}{space 3} .1280942
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .09689452
{txt}     sigma_e {c |} {res} .05594932
{txt}         rho {c |} {res} .74995141{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}10862{txt}, {res}67207{txt}) = {res}   15.34        {txt}Prob > F = {res}0.0000
{txt}
{com}. 
. xtreg oilseedrapeuaa energydum sizeclass setasideuaa ln_labour specialise i.year year#mscode, fe
{txt}note: 2007.year omitted because of collinearity
note: 1999b.year#2.mscode omitted because of collinearity
note: 1999b.year#3.mscode omitted because of collinearity
note: 1999b.year#4.mscode omitted because of collinearity
note: 1999b.year#8.mscode omitted because of collinearity
note: 1999b.year#11.mscode omitted because of collinearity
note: 1999b.year#12.mscode omitted because of collinearity
note: 1999b.year#13.mscode omitted because of collinearity
note: 2000.year#14.mscode omitted because of collinearity
note: 2003.year#7.mscode omitted because of collinearity
note: 2007.year#5.mscode omitted because of collinearity
note: 2007.year#6.mscode omitted because of collinearity
note: 2007.year#9.mscode omitted because of collinearity
note: 2007.year#10.mscode omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    78186
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    10863

{txt}R-sq:  within  = {res}0.0531                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0182                                        {txt}avg = {res}      7.2
{txt}       overall = {res}0.0092                                        {txt}max = {res}        9

                                                {txt}F({res}116{txt},{res}67207{txt})       = {res}    32.47
{txt}corr(u_i, Xb)  = {res}-0.4550                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}oilseedrap~a{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}  34.3696{col 26}{space 2} 11.57255{col 37}{space 1}    2.97{col 46}{space 3}0.003{col 54}{space 4} 11.68741{col 67}{space 3} 57.05178
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .6677769{col 26}{space 2} .0967373{col 37}{space 1}    6.90{col 46}{space 3}0.000{col 54}{space 4}  .478172{col 67}{space 3} .8573819
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.2243257{col 26}{space 2} .0051866{col 37}{space 1}  -43.25{col 46}{space 3}0.000{col 54}{space 4}-.2344914{col 67}{space 3}  -.21416
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .3342494{col 26}{space 2} .1950908{col 37}{space 1}    1.71{col 46}{space 3}0.087{col 54}{space 4}-.0481285{col 67}{space 3} .7166273
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .3371232{col 26}{space 2}  .157043{col 37}{space 1}    2.15{col 46}{space 3}0.032{col 54}{space 4} .0293191{col 67}{space 3} .6449273
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-4.989363{col 26}{space 2} 1.181885{col 37}{space 1}   -4.22{col 46}{space 3}0.000{col 54}{space 4}-7.305858{col 67}{space 3}-2.672869
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-6.178297{col 26}{space 2} 1.125132{col 37}{space 1}   -5.49{col 46}{space 3}0.000{col 54}{space 4}-8.383555{col 67}{space 3}-3.973038
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-4.913754{col 26}{space 2} 1.099471{col 37}{space 1}   -4.47{col 46}{space 3}0.000{col 54}{space 4}-7.068715{col 67}{space 3}-2.758793
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-2.628785{col 26}{space 2} 1.110071{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-4.804524{col 67}{space 3}-.4530466
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-35.05864{col 26}{space 2} 11.55528{col 37}{space 1}   -3.03{col 46}{space 3}0.002{col 54}{space 4}-57.70698{col 67}{space 3} -12.4103
{txt}{space 7}2005  {c |}{col 14}{res}{space 2} -36.8725{col 26}{space 2} 11.55497{col 37}{space 1}   -3.19{col 46}{space 3}0.001{col 54}{space 4}-59.52024{col 67}{space 3}-14.22477
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}-34.20421{col 26}{space 2} 11.55813{col 37}{space 1}   -2.96{col 46}{space 3}0.003{col 54}{space 4}-56.85813{col 67}{space 3}-11.55028
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 1}year#mscode {c |}
{space 4}1999  2  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  3  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  4  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  5  {c |}{col 14}{res}{space 2} 33.24758{col 26}{space 2} 11.58022{col 37}{space 1}    2.87{col 46}{space 3}0.004{col 54}{space 4} 10.55035{col 67}{space 3}  55.9448
{txt}{space 4}1999  6  {c |}{col 14}{res}{space 2} 33.43496{col 26}{space 2} 11.77479{col 37}{space 1}    2.84{col 46}{space 3}0.005{col 54}{space 4} 10.35638{col 67}{space 3} 56.51353
{txt}{space 4}1999  7  {c |}{col 14}{res}{space 2} 1.559519{col 26}{space 2} 1.436959{col 37}{space 1}    1.09{col 46}{space 3}0.278{col 54}{space 4} -1.25692{col 67}{space 3} 4.375959
{txt}{space 4}1999  8  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999  9  {c |}{col 14}{res}{space 2} 34.70714{col 26}{space 2} 11.66009{col 37}{space 1}    2.98{col 46}{space 3}0.003{col 54}{space 4} 11.85337{col 67}{space 3} 57.56092
{txt}{space 4}1999 10  {c |}{col 14}{res}{space 2} 34.29922{col 26}{space 2}  11.6021{col 37}{space 1}    2.96{col 46}{space 3}0.003{col 54}{space 4} 11.55911{col 67}{space 3} 57.03933
{txt}{space 4}1999 11  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999 12  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999 13  {c |}{col 14}{res}  (omitted)
{txt}{space 4}1999 14  {c |}{col 14}{res}{space 2}-2.147066{col 26}{space 2} 2.042768{col 37}{space 1}   -1.05{col 46}{space 3}0.293{col 54}{space 4} -6.15089{col 67}{space 3} 1.856758
{txt}{space 4}2000  2  {c |}{col 14}{res}{space 2} .2995564{col 26}{space 2} 1.250985{col 37}{space 1}    0.24{col 46}{space 3}0.811{col 54}{space 4}-2.152373{col 67}{space 3} 2.751486
{txt}{space 4}2000  3  {c |}{col 14}{res}{space 2} 4.849272{col 26}{space 2} 1.285833{col 37}{space 1}    3.77{col 46}{space 3}0.000{col 54}{space 4}  2.32904{col 67}{space 3} 7.369504
{txt}{space 4}2000  4  {c |}{col 14}{res}{space 2} 3.784474{col 26}{space 2}  1.24713{col 37}{space 1}    3.03{col 46}{space 3}0.002{col 54}{space 4}   1.3401{col 67}{space 3} 6.228848
{txt}{space 4}2000  5  {c |}{col 14}{res}{space 2} 36.20155{col 26}{space 2} 11.57155{col 37}{space 1}    3.13{col 46}{space 3}0.002{col 54}{space 4} 13.52132{col 67}{space 3} 58.88178
{txt}{space 4}2000  6  {c |}{col 14}{res}{space 2} 37.99647{col 26}{space 2}   11.754{col 37}{space 1}    3.23{col 46}{space 3}0.001{col 54}{space 4} 14.95864{col 67}{space 3} 61.03431
{txt}{space 4}2000  7  {c |}{col 14}{res}{space 2} 5.542042{col 26}{space 2} 1.331774{col 37}{space 1}    4.16{col 46}{space 3}0.000{col 54}{space 4} 2.931766{col 67}{space 3} 8.152317
{txt}{space 4}2000  8  {c |}{col 14}{res}{space 2} 2.625155{col 26}{space 2} 3.149344{col 37}{space 1}    0.83{col 46}{space 3}0.405{col 54}{space 4}-3.547557{col 67}{space 3} 8.797866
{txt}{space 4}2000  9  {c |}{col 14}{res}{space 2} 39.68916{col 26}{space 2} 11.65133{col 37}{space 1}    3.41{col 46}{space 3}0.001{col 54}{space 4} 16.85256{col 67}{space 3} 62.52577
{txt}{space 4}2000 10  {c |}{col 14}{res}{space 2} 38.42327{col 26}{space 2} 11.59316{col 37}{space 1}    3.31{col 46}{space 3}0.001{col 54}{space 4} 15.70068{col 67}{space 3} 61.14586
{txt}{space 4}2000 11  {c |}{col 14}{res}{space 2} 5.687496{col 26}{space 2} 2.011868{col 37}{space 1}    2.83{col 46}{space 3}0.005{col 54}{space 4} 1.744236{col 67}{space 3} 9.630757
{txt}{space 4}2000 12  {c |}{col 14}{res}{space 2} 5.014991{col 26}{space 2} 1.613114{col 37}{space 1}    3.11{col 46}{space 3}0.002{col 54}{space 4} 1.853288{col 67}{space 3} 8.176694
{txt}{space 4}2000 13  {c |}{col 14}{res}{space 2} 3.420204{col 26}{space 2} 1.574047{col 37}{space 1}    2.17{col 46}{space 3}0.030{col 54}{space 4} .3350731{col 67}{space 3} 6.505335
{txt}{space 4}2000 14  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2001  2  {c |}{col 14}{res}{space 2} 2.095296{col 26}{space 2} 1.195432{col 37}{space 1}    1.75{col 46}{space 3}0.080{col 54}{space 4}-.2477492{col 67}{space 3} 4.438342
{txt}{space 4}2001  3  {c |}{col 14}{res}{space 2} 5.790447{col 26}{space 2} 1.226961{col 37}{space 1}    4.72{col 46}{space 3}0.000{col 54}{space 4} 3.385605{col 67}{space 3} 8.195289
{txt}{space 4}2001  4  {c |}{col 14}{res}{space 2} 5.702677{col 26}{space 2} 1.191844{col 37}{space 1}    4.78{col 46}{space 3}0.000{col 54}{space 4} 3.366664{col 67}{space 3} 8.038691
{txt}{space 4}2001  5  {c |}{col 14}{res}{space 2} 36.83751{col 26}{space 2} 11.56506{col 37}{space 1}    3.19{col 46}{space 3}0.001{col 54}{space 4}    14.17{col 67}{space 3} 59.50502
{txt}{space 4}2001  6  {c |}{col 14}{res}{space 2} 39.12011{col 26}{space 2} 11.73621{col 37}{space 1}    3.33{col 46}{space 3}0.001{col 54}{space 4} 16.11715{col 67}{space 3} 62.12307
{txt}{space 4}2001  7  {c |}{col 14}{res}{space 2} 6.552541{col 26}{space 2} 1.214207{col 37}{space 1}    5.40{col 46}{space 3}0.000{col 54}{space 4} 4.172697{col 67}{space 3} 8.932385
{txt}{space 4}2001  8  {c |}{col 14}{res}{space 2} 4.556664{col 26}{space 2} 3.048612{col 37}{space 1}    1.49{col 46}{space 3}0.135{col 54}{space 4}-1.418612{col 67}{space 3} 10.53194
{txt}{space 4}2001  9  {c |}{col 14}{res}{space 2} 40.69924{col 26}{space 2} 11.62735{col 37}{space 1}    3.50{col 46}{space 3}0.000{col 54}{space 4} 17.90963{col 67}{space 3} 63.48884
{txt}{space 4}2001 10  {c |}{col 14}{res}{space 2} 39.84505{col 26}{space 2} 11.58531{col 37}{space 1}    3.44{col 46}{space 3}0.001{col 54}{space 4} 17.13785{col 67}{space 3} 62.55225
{txt}{space 4}2001 11  {c |}{col 14}{res}{space 2} 6.941233{col 26}{space 2} 1.980896{col 37}{space 1}    3.50{col 46}{space 3}0.000{col 54}{space 4} 3.058678{col 67}{space 3} 10.82379
{txt}{space 4}2001 12  {c |}{col 14}{res}{space 2} 6.153439{col 26}{space 2} 1.573074{col 37}{space 1}    3.91{col 46}{space 3}0.000{col 54}{space 4} 3.070216{col 67}{space 3} 9.236662
{txt}{space 4}2001 13  {c |}{col 14}{res}{space 2}  4.37767{col 26}{space 2} 1.521281{col 37}{space 1}    2.88{col 46}{space 3}0.004{col 54}{space 4} 1.395961{col 67}{space 3} 7.359379
{txt}{space 4}2001 14  {c |}{col 14}{res}{space 2}-1.435004{col 26}{space 2} 1.690517{col 37}{space 1}   -0.85{col 46}{space 3}0.396{col 54}{space 4}-4.748416{col 67}{space 3} 1.878408
{txt}{space 4}2002  2  {c |}{col 14}{res}{space 2} 2.977738{col 26}{space 2} 1.169233{col 37}{space 1}    2.55{col 46}{space 3}0.011{col 54}{space 4} .6860419{col 67}{space 3} 5.269433
{txt}{space 4}2002  3  {c |}{col 14}{res}{space 2} 4.581622{col 26}{space 2} 1.200604{col 37}{space 1}    3.82{col 46}{space 3}0.000{col 54}{space 4} 2.228439{col 67}{space 3} 6.934805
{txt}{space 4}2002  4  {c |}{col 14}{res}{space 2} 3.641244{col 26}{space 2} 1.167143{col 37}{space 1}    3.12{col 46}{space 3}0.002{col 54}{space 4} 1.353645{col 67}{space 3} 5.928843
{txt}{space 4}2002  5  {c |}{col 14}{res}{space 2} 33.68269{col 26}{space 2} 11.56133{col 37}{space 1}    2.91{col 46}{space 3}0.004{col 54}{space 4} 11.02249{col 67}{space 3} 56.34289
{txt}{space 4}2002  6  {c |}{col 14}{res}{space 2} 38.04077{col 26}{space 2} 11.70696{col 37}{space 1}    3.25{col 46}{space 3}0.001{col 54}{space 4} 15.09513{col 67}{space 3} 60.98641
{txt}{space 4}2002  7  {c |}{col 14}{res}{space 2}  3.82156{col 26}{space 2}  1.13747{col 37}{space 1}    3.36{col 46}{space 3}0.001{col 54}{space 4}  1.59212{col 67}{space 3} 6.051001
{txt}{space 4}2002  8  {c |}{col 14}{res}{space 2} 2.679261{col 26}{space 2} 2.954317{col 37}{space 1}    0.91{col 46}{space 3}0.364{col 54}{space 4}-3.111198{col 67}{space 3}  8.46972
{txt}{space 4}2002  9  {c |}{col 14}{res}{space 2} 39.61075{col 26}{space 2} 11.62114{col 37}{space 1}    3.41{col 46}{space 3}0.001{col 54}{space 4} 16.83333{col 67}{space 3} 62.38817
{txt}{space 4}2002 10  {c |}{col 14}{res}{space 2} 38.86209{col 26}{space 2}  11.5834{col 37}{space 1}    3.35{col 46}{space 3}0.001{col 54}{space 4} 16.15863{col 67}{space 3} 61.56556
{txt}{space 4}2002 11  {c |}{col 14}{res}{space 2} 4.737476{col 26}{space 2} 1.938443{col 37}{space 1}    2.44{col 46}{space 3}0.015{col 54}{space 4} .9381288{col 67}{space 3} 8.536824
{txt}{space 4}2002 12  {c |}{col 14}{res}{space 2} 4.967875{col 26}{space 2} 1.530713{col 37}{space 1}    3.25{col 46}{space 3}0.001{col 54}{space 4} 1.967679{col 67}{space 3} 7.968071
{txt}{space 4}2002 13  {c |}{col 14}{res}{space 2} 5.265309{col 26}{space 2} 1.504641{col 37}{space 1}    3.50{col 46}{space 3}0.000{col 54}{space 4} 2.316214{col 67}{space 3} 8.214403
{txt}{space 4}2002 14  {c |}{col 14}{res}{space 2}-6.007552{col 26}{space 2} 1.661063{col 37}{space 1}   -3.62{col 46}{space 3}0.000{col 54}{space 4}-9.263234{col 67}{space 3}-2.751871
{txt}{space 4}2003  2  {c |}{col 14}{res}{space 2} 1.315982{col 26}{space 2} 1.179198{col 37}{space 1}    1.12{col 46}{space 3}0.264{col 54}{space 4}-.9952451{col 67}{space 3}  3.62721
{txt}{space 4}2003  3  {c |}{col 14}{res}{space 2} 1.902817{col 26}{space 2} 1.209678{col 37}{space 1}    1.57{col 46}{space 3}0.116{col 54}{space 4}-.4681506{col 67}{space 3} 4.273785
{txt}{space 4}2003  4  {c |}{col 14}{res}{space 2} 1.282498{col 26}{space 2} 1.176979{col 37}{space 1}    1.09{col 46}{space 3}0.276{col 54}{space 4} -1.02438{col 67}{space 3} 3.589377
{txt}{space 4}2003  5  {c |}{col 14}{res}{space 2} 32.51945{col 26}{space 2} 11.56217{col 37}{space 1}    2.81{col 46}{space 3}0.005{col 54}{space 4} 9.857614{col 67}{space 3} 55.18129
{txt}{space 4}2003  6  {c |}{col 14}{res}{space 2} 36.15579{col 26}{space 2} 11.70877{col 37}{space 1}    3.09{col 46}{space 3}0.002{col 54}{space 4} 13.20661{col 67}{space 3} 59.10498
{txt}{space 4}2003  7  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2003  8  {c |}{col 14}{res}{space 2} .5886732{col 26}{space 2} 2.962591{col 37}{space 1}    0.20{col 46}{space 3}0.842{col 54}{space 4}-5.218003{col 67}{space 3} 6.395349
{txt}{space 4}2003  9  {c |}{col 14}{res}{space 2} 37.33293{col 26}{space 2} 11.62294{col 37}{space 1}    3.21{col 46}{space 3}0.001{col 54}{space 4} 14.55197{col 67}{space 3} 60.11389
{txt}{space 4}2003 10  {c |}{col 14}{res}{space 2} 36.45004{col 26}{space 2} 11.58433{col 37}{space 1}    3.15{col 46}{space 3}0.002{col 54}{space 4} 13.74476{col 67}{space 3} 59.15531
{txt}{space 4}2003 11  {c |}{col 14}{res}{space 2} 2.714648{col 26}{space 2} 1.952956{col 37}{space 1}    1.39{col 46}{space 3}0.165{col 54}{space 4}-1.113145{col 67}{space 3} 6.542441
{txt}{space 4}2003 12  {c |}{col 14}{res}{space 2} 3.974753{col 26}{space 2} 1.536562{col 37}{space 1}    2.59{col 46}{space 3}0.010{col 54}{space 4} .9630914{col 67}{space 3} 6.986414
{txt}{space 4}2003 13  {c |}{col 14}{res}{space 2} 2.231246{col 26}{space 2} 1.511488{col 37}{space 1}    1.48{col 46}{space 3}0.140{col 54}{space 4} -.731269{col 67}{space 3} 5.193762
{txt}{space 4}2003 14  {c |}{col 14}{res}{space 2}-3.129024{col 26}{space 2} 1.663982{col 37}{space 1}   -1.88{col 46}{space 3}0.060{col 54}{space 4}-6.390426{col 67}{space 3}  .132379
{txt}{space 4}2004  2  {c |}{col 14}{res}{space 2}  .125044{col 26}{space 2} 1.166083{col 37}{space 1}    0.11{col 46}{space 3}0.915{col 54}{space 4}-2.160478{col 67}{space 3} 2.410566
{txt}{space 4}2004  3  {c |}{col 14}{res}{space 2}-.1350223{col 26}{space 2} 1.197759{col 37}{space 1}   -0.11{col 46}{space 3}0.910{col 54}{space 4}-2.482629{col 67}{space 3} 2.212584
{txt}{space 4}2004  4  {c |}{col 14}{res}{space 2}-.5134152{col 26}{space 2} 1.164966{col 37}{space 1}   -0.44{col 46}{space 3}0.659{col 54}{space 4}-2.796748{col 67}{space 3} 1.769918
{txt}{space 4}2004  5  {c |}{col 14}{res}{space 2}  30.2028{col 26}{space 2} 11.56125{col 37}{space 1}    2.61{col 46}{space 3}0.009{col 54}{space 4} 7.542768{col 67}{space 3} 52.86284
{txt}{space 4}2004  6  {c |}{col 14}{res}{space 2} 33.86328{col 26}{space 2} 11.70634{col 37}{space 1}    2.89{col 46}{space 3}0.004{col 54}{space 4} 10.91886{col 67}{space 3} 56.80769
{txt}{space 4}2004  7  {c |}{col 14}{res}{space 2}-.6961398{col 26}{space 2} 1.169328{col 37}{space 1}   -0.60{col 46}{space 3}0.552{col 54}{space 4}-2.988021{col 67}{space 3} 1.595741
{txt}{space 4}2004  8  {c |}{col 14}{res}{space 2} .1490758{col 26}{space 2} 2.941179{col 37}{space 1}    0.05{col 46}{space 3}0.960{col 54}{space 4}-5.615632{col 67}{space 3} 5.913784
{txt}{space 4}2004  9  {c |}{col 14}{res}{space 2} 35.50851{col 26}{space 2} 11.62071{col 37}{space 1}    3.06{col 46}{space 3}0.002{col 54}{space 4} 12.73194{col 67}{space 3} 58.28509
{txt}{space 4}2004 10  {c |}{col 14}{res}{space 2} 34.46723{col 26}{space 2} 11.58246{col 37}{space 1}    2.98{col 46}{space 3}0.003{col 54}{space 4} 11.76562{col 67}{space 3} 57.16884
{txt}{space 4}2004 11  {c |}{col 14}{res}{space 2} .0429359{col 26}{space 2} 1.938624{col 37}{space 1}    0.02{col 46}{space 3}0.982{col 54}{space 4}-3.756765{col 67}{space 3} 3.842637
{txt}{space 4}2004 12  {c |}{col 14}{res}{space 2} 2.428959{col 26}{space 2} 1.529353{col 37}{space 1}    1.59{col 46}{space 3}0.112{col 54}{space 4}-.5685717{col 67}{space 3}  5.42649
{txt}{space 4}2004 13  {c |}{col 14}{res}{space 2}  2.63685{col 26}{space 2} 1.495548{col 37}{space 1}    1.76{col 46}{space 3}0.078{col 54}{space 4}-.2944243{col 67}{space 3} 5.568124
{txt}{space 4}2004 14  {c |}{col 14}{res}{space 2}-5.798178{col 26}{space 2} 1.654266{col 37}{space 1}   -3.50{col 46}{space 3}0.000{col 54}{space 4}-9.040539{col 67}{space 3}-2.555817
{txt}{space 4}2005  2  {c |}{col 14}{res}{space 2} 3.441519{col 26}{space 2} 1.157823{col 37}{space 1}    2.97{col 46}{space 3}0.003{col 54}{space 4} 1.172187{col 67}{space 3}  5.71085
{txt}{space 4}2005  3  {c |}{col 14}{res}{space 2} 1.717135{col 26}{space 2} 1.190965{col 37}{space 1}    1.44{col 46}{space 3}0.149{col 54}{space 4}-.6171557{col 67}{space 3} 4.051426
{txt}{space 4}2005  4  {c |}{col 14}{res}{space 2}  1.14081{col 26}{space 2}   1.1583{col 37}{space 1}    0.98{col 46}{space 3}0.325{col 54}{space 4}-1.129458{col 67}{space 3} 3.411077
{txt}{space 4}2005  5  {c |}{col 14}{res}{space 2} 33.78672{col 26}{space 2} 11.56093{col 37}{space 1}    2.92{col 46}{space 3}0.003{col 54}{space 4}  11.1273{col 67}{space 3} 56.44614
{txt}{space 4}2005  6  {c |}{col 14}{res}{space 2}  36.2579{col 26}{space 2} 11.70596{col 37}{space 1}    3.10{col 46}{space 3}0.002{col 54}{space 4} 13.31422{col 67}{space 3} 59.20157
{txt}{space 4}2005  7  {c |}{col 14}{res}{space 2} 1.206399{col 26}{space 2} 1.152937{col 37}{space 1}    1.05{col 46}{space 3}0.295{col 54}{space 4}-1.053357{col 67}{space 3} 3.466155
{txt}{space 4}2005  8  {c |}{col 14}{res}{space 2} .8995687{col 26}{space 2} 2.963808{col 37}{space 1}    0.30{col 46}{space 3}0.761{col 54}{space 4}-4.909493{col 67}{space 3}  6.70863
{txt}{space 4}2005  9  {c |}{col 14}{res}{space 2} 37.45321{col 26}{space 2} 11.61994{col 37}{space 1}    3.22{col 46}{space 3}0.001{col 54}{space 4} 14.67813{col 67}{space 3} 60.22829
{txt}{space 4}2005 10  {c |}{col 14}{res}{space 2} 36.70653{col 26}{space 2} 11.58165{col 37}{space 1}    3.17{col 46}{space 3}0.002{col 54}{space 4}  14.0065{col 67}{space 3} 59.40656
{txt}{space 4}2005 11  {c |}{col 14}{res}{space 2} .4264248{col 26}{space 2} 1.941738{col 37}{space 1}    0.22{col 46}{space 3}0.826{col 54}{space 4} -3.37938{col 67}{space 3} 4.232229
{txt}{space 4}2005 12  {c |}{col 14}{res}{space 2} 4.554342{col 26}{space 2} 1.519799{col 37}{space 1}    3.00{col 46}{space 3}0.003{col 54}{space 4} 1.575538{col 67}{space 3} 7.533146
{txt}{space 4}2005 13  {c |}{col 14}{res}{space 2} 5.044415{col 26}{space 2} 1.492963{col 37}{space 1}    3.38{col 46}{space 3}0.001{col 54}{space 4} 2.118208{col 67}{space 3} 7.970622
{txt}{space 4}2005 14  {c |}{col 14}{res}{space 2}-.6195535{col 26}{space 2} 1.647706{col 37}{space 1}   -0.38{col 46}{space 3}0.707{col 54}{space 4}-3.849056{col 67}{space 3} 2.609949
{txt}{space 4}2006  2  {c |}{col 14}{res}{space 2} 4.303833{col 26}{space 2} 1.198792{col 37}{space 1}    3.59{col 46}{space 3}0.000{col 54}{space 4} 1.954202{col 67}{space 3} 6.653463
{txt}{space 4}2006  3  {c |}{col 14}{res}{space 2}-.8406672{col 26}{space 2} 1.237883{col 37}{space 1}   -0.68{col 46}{space 3}0.497{col 54}{space 4}-3.266916{col 67}{space 3} 1.585582
{txt}{space 4}2006  4  {c |}{col 14}{res}{space 2}-1.846443{col 26}{space 2} 1.198971{col 37}{space 1}   -1.54{col 46}{space 3}0.124{col 54}{space 4}-4.196424{col 67}{space 3} .5035395
{txt}{space 4}2006  5  {c |}{col 14}{res}{space 2} 32.49781{col 26}{space 2} 11.56437{col 37}{space 1}    2.81{col 46}{space 3}0.005{col 54}{space 4} 9.831663{col 67}{space 3} 55.16396
{txt}{space 4}2006  6  {c |}{col 14}{res}{space 2} 33.56935{col 26}{space 2}  11.7188{col 37}{space 1}    2.86{col 46}{space 3}0.004{col 54}{space 4} 10.60051{col 67}{space 3} 56.53818
{txt}{space 4}2006  7  {c |}{col 14}{res}{space 2} .5217758{col 26}{space 2} 1.202116{col 37}{space 1}    0.43{col 46}{space 3}0.664{col 54}{space 4}-1.834371{col 67}{space 3} 2.877923
{txt}{space 4}2006  8  {c |}{col 14}{res}{space 2} 1.284445{col 26}{space 2} 3.083413{col 37}{space 1}    0.42{col 46}{space 3}0.677{col 54}{space 4}-4.759041{col 67}{space 3} 7.327932
{txt}{space 4}2006  9  {c |}{col 14}{res}{space 2} 34.07048{col 26}{space 2} 11.62479{col 37}{space 1}    2.93{col 46}{space 3}0.003{col 54}{space 4}  11.2859{col 67}{space 3} 56.85505
{txt}{space 4}2006 10  {c |}{col 14}{res}{space 2} 35.01632{col 26}{space 2} 11.58531{col 37}{space 1}    3.02{col 46}{space 3}0.003{col 54}{space 4} 12.30911{col 67}{space 3} 57.72353
{txt}{space 4}2006 11  {c |}{col 14}{res}{space 2}-2.745091{col 26}{space 2} 1.992137{col 37}{space 1}   -1.38{col 46}{space 3}0.168{col 54}{space 4}-6.649678{col 67}{space 3} 1.159496
{txt}{space 4}2006 12  {c |}{col 14}{res}{space 2} 3.370698{col 26}{space 2} 1.562525{col 37}{space 1}    2.16{col 46}{space 3}0.031{col 54}{space 4} .3081502{col 67}{space 3} 6.433246
{txt}{space 4}2006 13  {c |}{col 14}{res}{space 2} 3.201138{col 26}{space 2} 1.545231{col 37}{space 1}    2.07{col 46}{space 3}0.038{col 54}{space 4} .1724853{col 67}{space 3}  6.22979
{txt}{space 4}2006 14  {c |}{col 14}{res}{space 2}-4.178315{col 26}{space 2} 1.694599{col 37}{space 1}   -2.47{col 46}{space 3}0.014{col 54}{space 4}-7.499728{col 67}{space 3}-.8569024
{txt}{space 4}2007  2  {c |}{col 14}{res}{space 2}-36.40836{col 26}{space 2} 11.57992{col 37}{space 1}   -3.14{col 46}{space 3}0.002{col 54}{space 4}-59.10499{col 67}{space 3}-13.71172
{txt}{space 4}2007  3  {c |}{col 14}{res}{space 2}-34.86622{col 26}{space 2} 11.58488{col 37}{space 1}   -3.01{col 46}{space 3}0.003{col 54}{space 4}-57.57257{col 67}{space 3}-12.15986
{txt}{space 4}2007  4  {c |}{col 14}{res}{space 2}-37.25833{col 26}{space 2} 11.58061{col 37}{space 1}   -3.22{col 46}{space 3}0.001{col 54}{space 4}-59.95632{col 67}{space 3}-14.56034
{txt}{space 4}2007  5  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  6  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007  7  {c |}{col 14}{res}{space 2}-35.53113{col 26}{space 2} 11.58764{col 37}{space 1}   -3.07{col 46}{space 3}0.002{col 54}{space 4}-58.24291{col 67}{space 3}-12.81936
{txt}{space 4}2007  8  {c |}{col 14}{res}{space 2} -33.1568{col 26}{space 2} 11.92407{col 37}{space 1}   -2.78{col 46}{space 3}0.005{col 54}{space 4}-56.52798{col 67}{space 3}-9.785623
{txt}{space 4}2007  9  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 10  {c |}{col 14}{res}  (omitted)
{txt}{space 4}2007 11  {c |}{col 14}{res}{space 2}-35.22887{col 26}{space 2} 11.69923{col 37}{space 1}   -3.01{col 46}{space 3}0.003{col 54}{space 4}-58.15935{col 67}{space 3}-12.29839
{txt}{space 4}2007 12  {c |}{col 14}{res}{space 2} -32.1692{col 26}{space 2} 11.62476{col 37}{space 1}   -2.77{col 46}{space 3}0.006{col 54}{space 4}-54.95372{col 67}{space 3}-9.384675
{txt}{space 4}2007 13  {c |}{col 14}{res}{space 2}-30.12813{col 26}{space 2} 11.62309{col 37}{space 1}   -2.59{col 46}{space 3}0.010{col 54}{space 4}-52.90939{col 67}{space 3}-7.346877
{txt}{space 4}2007 14  {c |}{col 14}{res}{space 2}-38.46376{col 26}{space 2} 11.64613{col 37}{space 1}   -3.30{col 46}{space 3}0.001{col 54}{space 4}-61.29017{col 67}{space 3}-15.63734
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-1.079726{col 26}{space 2} 3.597048{col 37}{space 1}   -0.30{col 46}{space 3}0.764{col 54}{space 4}-8.129937{col 67}{space 3} 5.970485
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 46.440126
{txt}     sigma_e {c |} {res} 10.881483
{txt}         rho {c |} {res} .94795522{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}10862{txt}, {res}67207{txt}) = {res}   55.04        {txt}Prob > F = {res}0.0000
{txt}
{com}. 
. aljd;a
{err}unrecognized command:  aljd
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 13:38:54
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log */
. 
. xtreg osrape_prop energydum sizeclass setasideuaa ln_labour specialise ln_c_ret_ha i.year, fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    74181
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    10534

{txt}R-sq:  within  = {res}0.0157                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0206                                        {txt}avg = {res}      7.0
{txt}       overall = {res}0.0044                                        {txt}max = {res}        9

                                                {txt}F({res}13{txt},{res}63634{txt})        = {res}    78.33
{txt}corr(u_i, Xb)  = {res}-0.1930                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}-.0109521{col 26}{space 2} .0010489{col 37}{space 1}  -10.44{col 46}{space 3}0.000{col 54}{space 4} -.013008{col 67}{space 3}-.0088962
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0009503{col 26}{space 2} .0005187{col 37}{space 1}   -1.83{col 46}{space 3}0.067{col 54}{space 4}-.0019669{col 67}{space 3} .0000664
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0003915{col 26}{space 2} .0000258{col 37}{space 1}  -15.20{col 46}{space 3}0.000{col 54}{space 4} -.000442{col 67}{space 3} -.000341
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0018215{col 26}{space 2} .0009857{col 37}{space 1}   -1.85{col 46}{space 3}0.065{col 54}{space 4}-.0037536{col 67}{space 3} .0001105
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0016335{col 26}{space 2} .0007918{col 37}{space 1}    2.06{col 46}{space 3}0.039{col 54}{space 4} .0000815{col 67}{space 3} .0031855
{txt}{space 1}ln_c_ret_ha {c |}{col 14}{res}{space 2}  .002069{col 26}{space 2} .0008017{col 37}{space 1}    2.58{col 46}{space 3}0.010{col 54}{space 4} .0004976{col 67}{space 3} .0036403
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0136024{col 26}{space 2} .0009464{col 37}{space 1}  -14.37{col 46}{space 3}0.000{col 54}{space 4}-.0154574{col 67}{space 3}-.0117474
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0149647{col 26}{space 2} .0009213{col 37}{space 1}  -16.24{col 46}{space 3}0.000{col 54}{space 4}-.0167705{col 67}{space 3}-.0131589
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0198499{col 26}{space 2} .0009166{col 37}{space 1}  -21.66{col 46}{space 3}0.000{col 54}{space 4}-.0216464{col 67}{space 3}-.0180534
{txt}{space 7}2003  {c |}{col 14}{res}{space 2} -.017504{col 26}{space 2} .0009241{col 37}{space 1}  -18.94{col 46}{space 3}0.000{col 54}{space 4}-.0193153{col 67}{space 3}-.0156928
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0059831{col 26}{space 2} .0009621{col 37}{space 1}   -6.22{col 46}{space 3}0.000{col 54}{space 4}-.0078689{col 67}{space 3}-.0040973
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0037968{col 26}{space 2} .0010097{col 37}{space 1}   -3.76{col 46}{space 3}0.000{col 54}{space 4}-.0057758{col 67}{space 3}-.0018178
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}  .003489{col 26}{space 2}  .000962{col 37}{space 1}    3.63{col 46}{space 3}0.000{col 54}{space 4} .0016035{col 67}{space 3} .0053744
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .0983292{col 26}{space 2} .0096146{col 37}{space 1}   10.23{col 46}{space 3}0.000{col 54}{space 4} .0794845{col 67}{space 3} .1171739
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .09411421
{txt}     sigma_e {c |} {res} .05453882
{txt}         rho {c |} {res} .74860622{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}10533{txt}, {res}63634{txt}) = {res}   18.78        {txt}Prob > F = {res}0.0000
{txt}
{com}. 
. xtreg oilseedrapeuaa energydum sizeclass setasideuaa ln_labour specialise ln_c_ret_ha i.year, fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    74181
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    10534

{txt}R-sq:  within  = {res}0.0374                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.2148                                        {txt}avg = {res}      7.0
{txt}       overall = {res}0.1381                                        {txt}max = {res}        9

                                                {txt}F({res}13{txt},{res}63634{txt})        = {res}   190.07
{txt}corr(u_i, Xb)  = {res}-0.4770                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}oilseedrap~a{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}-.9196665{col 26}{space 2} .2158857{col 37}{space 1}   -4.26{col 46}{space 3}0.000{col 54}{space 4}-1.342803{col 67}{space 3}-.4965302
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .7646246{col 26}{space 2} .1067554{col 37}{space 1}    7.16{col 46}{space 3}0.000{col 54}{space 4} .5553838{col 67}{space 3} .9738654
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.2233448{col 26}{space 2} .0053011{col 37}{space 1}  -42.13{col 46}{space 3}0.000{col 54}{space 4} -.233735{col 67}{space 3}-.2129547
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .6126672{col 26}{space 2} .2028761{col 37}{space 1}    3.02{col 46}{space 3}0.003{col 54}{space 4} .2150298{col 67}{space 3} 1.010305
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .4278683{col 26}{space 2} .1629722{col 37}{space 1}    2.63{col 46}{space 3}0.009{col 54}{space 4} .1084426{col 67}{space 3}  .747294
{txt}{space 1}ln_c_ret_ha {c |}{col 14}{res}{space 2} .3593719{col 26}{space 2} .1650066{col 37}{space 1}    2.18{col 46}{space 3}0.029{col 54}{space 4} .0359588{col 67}{space 3}  .682785
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-2.056122{col 26}{space 2} .1947936{col 37}{space 1}  -10.56{col 46}{space 3}0.000{col 54}{space 4}-2.437917{col 67}{space 3}-1.674326
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-2.016738{col 26}{space 2} .1896216{col 37}{space 1}  -10.64{col 46}{space 3}0.000{col 54}{space 4}-2.388396{col 67}{space 3}-1.645079
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-2.243343{col 26}{space 2} .1886436{col 37}{space 1}  -11.89{col 46}{space 3}0.000{col 54}{space 4}-2.613085{col 67}{space 3}-1.873602
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-1.634873{col 26}{space 2} .1901929{col 37}{space 1}   -8.60{col 46}{space 3}0.000{col 54}{space 4}-2.007651{col 67}{space 3}-1.262094
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.4636201{col 26}{space 2} .1980224{col 37}{space 1}   -2.34{col 46}{space 3}0.019{col 54}{space 4}-.8517443{col 67}{space 3}-.0754959
{txt}{space 7}2005  {c |}{col 14}{res}{space 2} .4366193{col 26}{space 2} .2078061{col 37}{space 1}    2.10{col 46}{space 3}0.036{col 54}{space 4} .0293191{col 67}{space 3} .8439194
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} 1.671229{col 26}{space 2} .1979906{col 37}{space 1}    8.44{col 46}{space 3}0.000{col 54}{space 4} 1.283167{col 67}{space 3}  2.05929
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 3.536216{col 26}{space 2} 1.978841{col 37}{space 1}    1.79{col 46}{space 3}0.074{col 54}{space 4} -.342316{col 67}{space 3} 7.414747
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 44.456379
{txt}     sigma_e {c |} {res} 11.224928
{txt}         rho {c |} {res} .94006807{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}10533{txt}, {res}63634{txt}) = {res}   54.50        {txt}Prob > F = {res}0.0000
{txt}
{com}. 
. aljd;a
{err}unrecognized command:  aljd
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 13:41:25
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log */
. 
. xtreg osrape_prop energydum sizeclass setasideuaa ln_labour solvency specialise intensity i.year, fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    78181
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    10863

{txt}R-sq:  within  = {res}0.0148                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0442                                        {txt}avg = {res}      7.2
{txt}       overall = {res}0.0155                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}67304{txt})        = {res}    72.10
{txt}corr(u_i, Xb)  = {res}-0.2670                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}-.0110001{col 26}{space 2} .0009873{col 37}{space 1}  -11.14{col 46}{space 3}0.000{col 54}{space 4}-.0129352{col 67}{space 3}-.0090651
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0023588{col 26}{space 2} .0004967{col 37}{space 1}   -4.75{col 46}{space 3}0.000{col 54}{space 4}-.0033322{col 67}{space 3}-.0013853
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0003966{col 26}{space 2} .0000266{col 37}{space 1}  -14.91{col 46}{space 3}0.000{col 54}{space 4}-.0004488{col 67}{space 3}-.0003445
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0017563{col 26}{space 2} .0009792{col 37}{space 1}   -1.79{col 46}{space 3}0.073{col 54}{space 4}-.0036754{col 67}{space 3} .0001628
{txt}{space 4}solvency {c |}{col 14}{res}{space 2}-.0003895{col 26}{space 2} .0015196{col 37}{space 1}   -0.26{col 46}{space 3}0.798{col 54}{space 4} -.003368{col 67}{space 3} .0025889
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0016886{col 26}{space 2}  .000815{col 37}{space 1}    2.07{col 46}{space 3}0.038{col 54}{space 4} .0000911{col 67}{space 3}  .003286
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0036518{col 26}{space 2} .0050613{col 37}{space 1}   -0.72{col 46}{space 3}0.471{col 54}{space 4} -.013572{col 67}{space 3} .0062684
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0135312{col 26}{space 2} .0009534{col 37}{space 1}  -14.19{col 46}{space 3}0.000{col 54}{space 4}-.0153998{col 67}{space 3}-.0116626
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0148505{col 26}{space 2} .0009286{col 37}{space 1}  -15.99{col 46}{space 3}0.000{col 54}{space 4}-.0166704{col 67}{space 3}-.0130305
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0202823{col 26}{space 2} .0009207{col 37}{space 1}  -22.03{col 46}{space 3}0.000{col 54}{space 4}-.0220868{col 67}{space 3}-.0184777
{txt}{space 7}2003  {c |}{col 14}{res}{space 2} -.018085{col 26}{space 2} .0009289{col 37}{space 1}  -19.47{col 46}{space 3}0.000{col 54}{space 4}-.0199056{col 67}{space 3}-.0162644
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0064467{col 26}{space 2} .0008907{col 37}{space 1}   -7.24{col 46}{space 3}0.000{col 54}{space 4}-.0081923{col 67}{space 3} -.004701
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0048794{col 26}{space 2} .0008867{col 37}{space 1}   -5.50{col 46}{space 3}0.000{col 54}{space 4}-.0066173{col 67}{space 3}-.0031415
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} .0025264{col 26}{space 2} .0009073{col 37}{space 1}    2.78{col 46}{space 3}0.005{col 54}{space 4} .0007481{col 67}{space 3} .0043047
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}   .11978{col 26}{space 2}  .008155{col 37}{space 1}   14.69{col 46}{space 3}0.000{col 54}{space 4} .1037963{col 67}{space 3} .1357637
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .09474053
{txt}     sigma_e {c |} {res} .05650458
{txt}         rho {c |} {res} .73762104{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}10862{txt}, {res}67304{txt}) = {res}   16.82        {txt}Prob > F = {res}0.0000
{txt}
{com}. 
. xtreg oilseedrapeuaa energydum sizeclass setasideuaa ln_labour solvency specialise intensity i.year, fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    78181
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    10863

{txt}R-sq:  within  = {res}0.0367                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.2300                                        {txt}avg = {res}      7.2
{txt}       overall = {res}0.1494                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}67304{txt})        = {res}   183.13
{txt}corr(u_i, Xb)  = {res}-0.4906                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}oilseedrap~a{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2} -.814602{col 26}{space 2} .1916243{col 37}{space 1}   -4.25{col 46}{space 3}0.000{col 54}{space 4}-1.190186{col 67}{space 3}-.4390186
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .5759106{col 26}{space 2} .0964002{col 37}{space 1}    5.97{col 46}{space 3}0.000{col 54}{space 4} .3869664{col 67}{space 3} .7648549
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.2223189{col 26}{space 2} .0051642{col 37}{space 1}  -43.05{col 46}{space 3}0.000{col 54}{space 4}-.2324407{col 67}{space 3}-.2121971
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .6372483{col 26}{space 2} .1900476{col 37}{space 1}    3.35{col 46}{space 3}0.001{col 54}{space 4} .2647553{col 67}{space 3} 1.009741
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} .1821026{col 26}{space 2} .2949496{col 37}{space 1}    0.62{col 46}{space 3}0.537{col 54}{space 4}-.3959983{col 67}{space 3} .7602035
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .3852268{col 26}{space 2} .1581904{col 37}{space 1}    2.44{col 46}{space 3}0.015{col 54}{space 4} .0751737{col 67}{space 3} .6952799
{txt}{space 3}intensity {c |}{col 14}{res}{space 2} 5.590519{col 26}{space 2} .9823756{col 37}{space 1}    5.69{col 46}{space 3}0.000{col 54}{space 4} 3.665064{col 67}{space 3} 7.515974
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2} -1.96814{col 26}{space 2} .1850442{col 37}{space 1}  -10.64{col 46}{space 3}0.000{col 54}{space 4}-2.330826{col 67}{space 3}-1.605453
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-1.967291{col 26}{space 2} .1802296{col 37}{space 1}  -10.92{col 46}{space 3}0.000{col 54}{space 4}-2.320541{col 67}{space 3}-1.614042
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}  -2.1869{col 26}{space 2} .1786962{col 37}{space 1}  -12.24{col 46}{space 3}0.000{col 54}{space 4}-2.537145{col 67}{space 3}-1.836656
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}  -1.6045{col 26}{space 2} .1802931{col 37}{space 1}   -8.90{col 46}{space 3}0.000{col 54}{space 4}-1.957875{col 67}{space 3}-1.251126
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.5813559{col 26}{space 2} .1728706{col 37}{space 1}   -3.36{col 46}{space 3}0.001{col 54}{space 4}-.9201822{col 67}{space 3}-.2425295
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}  .231419{col 26}{space 2}  .172103{col 37}{space 1}    1.34{col 46}{space 3}0.179{col 54}{space 4}-.1059028{col 67}{space 3} .5687408
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} 1.478433{col 26}{space 2}    .1761{col 37}{space 1}    8.40{col 46}{space 3}0.000{col 54}{space 4} 1.133277{col 67}{space 3} 1.823589
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 5.366435{col 26}{space 2} 1.582832{col 37}{space 1}    3.39{col 46}{space 3}0.001{col 54}{space 4} 2.264085{col 67}{space 3} 8.468784
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 43.907221
{txt}     sigma_e {c |} {res} 10.967219
{txt}         rho {c |} {res} .94127314{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}10862{txt}, {res}67304{txt}) = {res}   54.66        {txt}Prob > F = {res}0.0000
{txt}
{com}. 
. aljd;a
{err}unrecognized command:  aljd
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 13:44:25
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log */
. 
. xtreg osrape_prop energydum sizeclass setasideuaa ln_labour solvency specialise intensity i.year, fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    78181
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    10863

{txt}R-sq:  within  = {res}0.0149                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0460                                        {txt}avg = {res}      7.2
{txt}       overall = {res}0.0166                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}67304{txt})        = {res}    72.56
{txt}corr(u_i, Xb)  = {res}-0.2729                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}-.0109914{col 26}{space 2} .0009871{col 37}{space 1}  -11.14{col 46}{space 3}0.000{col 54}{space 4} -.012926{col 67}{space 3}-.0090567
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0024327{col 26}{space 2} .0004972{col 37}{space 1}   -4.89{col 46}{space 3}0.000{col 54}{space 4}-.0034072{col 67}{space 3}-.0014583
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0003969{col 26}{space 2} .0000266{col 37}{space 1}  -14.92{col 46}{space 3}0.000{col 54}{space 4}-.0004491{col 67}{space 3}-.0003448
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0017471{col 26}{space 2} .0009779{col 37}{space 1}   -1.79{col 46}{space 3}0.074{col 54}{space 4}-.0036639{col 67}{space 3} .0001696
{txt}{space 4}solvency {c |}{col 14}{res}{space 2}-.0004825{col 26}{space 2} .0015199{col 37}{space 1}   -0.32{col 46}{space 3}0.751{col 54}{space 4}-.0034614{col 67}{space 3} .0024964
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0015987{col 26}{space 2} .0008143{col 37}{space 1}    1.96{col 46}{space 3}0.050{col 54}{space 4} 2.59e-06{col 67}{space 3} .0031948
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0175527{col 26}{space 2} .0067344{col 37}{space 1}   -2.61{col 46}{space 3}0.009{col 54}{space 4}-.0307521{col 67}{space 3}-.0043534
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0135264{col 26}{space 2} .0009533{col 37}{space 1}  -14.19{col 46}{space 3}0.000{col 54}{space 4}-.0153948{col 67}{space 3} -.011658
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0148693{col 26}{space 2} .0009284{col 37}{space 1}  -16.02{col 46}{space 3}0.000{col 54}{space 4}-.0166889{col 67}{space 3}-.0130496
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0202798{col 26}{space 2} .0009206{col 37}{space 1}  -22.03{col 46}{space 3}0.000{col 54}{space 4}-.0220841{col 67}{space 3}-.0184754
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0181112{col 26}{space 2} .0009289{col 37}{space 1}  -19.50{col 46}{space 3}0.000{col 54}{space 4}-.0199318{col 67}{space 3}-.0162905
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0064766{col 26}{space 2} .0008907{col 37}{space 1}   -7.27{col 46}{space 3}0.000{col 54}{space 4}-.0082224{col 67}{space 3}-.0047308
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0049243{col 26}{space 2} .0008867{col 37}{space 1}   -5.55{col 46}{space 3}0.000{col 54}{space 4}-.0066622{col 67}{space 3}-.0031864
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} .0024946{col 26}{space 2} .0009071{col 37}{space 1}    2.75{col 46}{space 3}0.006{col 54}{space 4} .0007167{col 67}{space 3} .0042724
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .1209469{col 26}{space 2} .0081073{col 37}{space 1}   14.92{col 46}{space 3}0.000{col 54}{space 4} .1050565{col 67}{space 3} .1368372
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .09483736
{txt}     sigma_e {c |} {res} .05650195
{txt}         rho {c |} {res} .73803427{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}10862{txt}, {res}67304{txt}) = {res}   17.26        {txt}Prob > F = {res}0.0000
{txt}
{com}. 
. xtreg oilseedrapeuaa energydum sizeclass setasideuaa ln_labour solvency specialise intensity i.year, fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    78181
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    10863

{txt}R-sq:  within  = {res}0.0363                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.2415                                        {txt}avg = {res}      7.2
{txt}       overall = {res}0.1584                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}67304{txt})        = {res}   181.01
{txt}corr(u_i, Xb)  = {res}-0.5010                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}oilseedrap~a{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2} -.789416{col 26}{space 2} .1916342{col 37}{space 1}   -4.12{col 46}{space 3}0.000{col 54}{space 4}-1.165019{col 67}{space 3}-.4138131
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .5783655{col 26}{space 2} .0965229{col 37}{space 1}    5.99{col 46}{space 3}0.000{col 54}{space 4} .3891807{col 67}{space 3} .7675502
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.2229298{col 26}{space 2} .0051647{col 37}{space 1}  -43.16{col 46}{space 3}0.000{col 54}{space 4}-.2330526{col 67}{space 3}-.2128071
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}  .579444{col 26}{space 2} .1898606{col 37}{space 1}    3.05{col 46}{space 3}0.002{col 54}{space 4} .2073173{col 67}{space 3} .9515708
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} .1303314{col 26}{space 2} .2950744{col 37}{space 1}    0.44{col 46}{space 3}0.659{col 54}{space 4}-.4480143{col 67}{space 3}  .708677
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .4202717{col 26}{space 2}  .158101{col 37}{space 1}    2.66{col 46}{space 3}0.008{col 54}{space 4} .1103939{col 67}{space 3} .7301494
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-2.554791{col 26}{space 2} 1.307442{col 37}{space 1}   -1.95{col 46}{space 3}0.051{col 54}{space 4}-5.117376{col 67}{space 3} .0077944
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-1.980483{col 26}{space 2} .1850718{col 37}{space 1}  -10.70{col 46}{space 3}0.000{col 54}{space 4}-2.343224{col 67}{space 3}-1.617743
{txt}{space 7}2001  {c |}{col 14}{res}{space 2} -1.95107{col 26}{space 2} .1802431{col 37}{space 1}  -10.82{col 46}{space 3}0.000{col 54}{space 4}-2.304347{col 67}{space 3}-1.597794
{txt}{space 7}2002  {c |}{col 14}{res}{space 2} -2.19423{col 26}{space 2} .1787299{col 37}{space 1}  -12.28{col 46}{space 3}0.000{col 54}{space 4} -2.54454{col 67}{space 3}-1.843919
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-1.614527{col 26}{space 2} .1803424{col 37}{space 1}   -8.95{col 46}{space 3}0.000{col 54}{space 4}-1.967998{col 67}{space 3}-1.261056
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.5898253{col 26}{space 2} .1729229{col 37}{space 1}   -3.41{col 46}{space 3}0.001{col 54}{space 4} -.928754{col 67}{space 3}-.2508965
{txt}{space 7}2005  {c |}{col 14}{res}{space 2} .1973922{col 26}{space 2} .1721435{col 37}{space 1}    1.15{col 46}{space 3}0.252{col 54}{space 4} -.140009{col 67}{space 3} .5347934
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} 1.441154{col 26}{space 2} .1761009{col 37}{space 1}    8.18{col 46}{space 3}0.000{col 54}{space 4} 1.095996{col 67}{space 3} 1.786311
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 6.948283{col 26}{space 2} 1.573994{col 37}{space 1}    4.41{col 46}{space 3}0.000{col 54}{space 4} 3.863256{col 67}{space 3} 10.03331
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 43.950665
{txt}     sigma_e {c |} {res} 10.969546
{txt}         rho {c |} {res} .94135896{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}10862{txt}, {res}67304{txt}) = {res}   55.93        {txt}Prob > F = {res}0.0000
{txt}
{com}. 
. aljd;a
{err}unrecognized command:  aljd
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. ls /home/patrickgillespie/apri_ap_crpouta_1_Data.csv

{res}-rw-rw-r-- 1 patrickgillespie patrickgillespie 22036 2012-05-08 16:19 /home/patrickgillespie/apri_ap_crpouta_1_Data.csv

{com}. clear

. insheet using /home/patrickgillespie/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. codebook time

{txt}{hline}
{res}time{right:TIME}
{txt}{hline}

{col 19}type:  numeric ({res}int{txt})

{col 18}range:  [{res}2000{txt},{res}2007{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}8{col 51}{txt}missing .:  {res}0{txt}/{res}216

{txt}{col 13}tabulation:  Freq.  Value
{col 24}{res}     27{col 33}2000
{col 24}     27{col 33}2001
{col 24}     27{col 33}2002
{col 24}     27{col 33}2003
{col 24}     27{col 33}2004
{col 24}     27{col 33}2005
{col 24}     27{col 33}2006
{col 24}     27{col 33}2007

{com}. rename time year

. codebook geo

{txt}{hline}
{res}geo{right:GEO}
{txt}{hline}

{col 19}type:  string ({res}str41{txt})

{col 10}unique values:  {res}27{col 51}{txt}missing "":  {res}0{txt}/{res}216

{txt}{col 15}examples:  {res}"Denmark"
{col 26}"Greece"
{col 26}"Luxembourg"
{col 26}"Romania"

{txt}{col 16}warning:  variable has embedded blanks

{com}. gen country = .
{txt}(216 missing values generated)

{com}. replace country = den if geo == "Denmark"
{err}den not found
{txt}{search r(111):r(111);}

{com}. replace country = "den" if geo == "Denmark"
{err}type mismatch
{txt}{search r(109):r(109);}

{com}. drop country

. gen str4 country = .
{err}type mismatch
{txt}{search r(109):r(109);}

{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "DEN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. clear

. use ../CountrySTATAFiles/databuilds/data9907

. egen pid = group(country region subregion farmcode)

. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit

{com}. collapse (mean) country year
{err}type mismatch
{txt}{search r(109):r(109);}

{com}. help  collapse

. collapse (mean) oilseedrapeuaa [pweight = farmsrepresented], by(country year)

. br

. clear

. use ../CountrySTATAFiles/databuilds/data9907

. collapse (mean) oilseedrapeuaa [pweight = farmsrepresented], by(country)

. br

. clear

. ls /home/patrickgillespie/*.csv

{res}-rw-rw-r-- 1 patrickgillespie patrickgillespie 22036 2012-05-08 16:19 /home/patrickgillespie/apri_ap_crpouta_1_Data.csv
-rw-rw-r-- 1 patrickgillespie patrickgillespie  1068 2012-05-08 16:19 /home/patrickgillespie/apri_ap_crpouta_Label.csv

{com}. ls /home/patrickgillespie/apri_ap_crpouta_1_Data.csv

{res}-rw-rw-r-- 1 patrickgillespie patrickgillespie 22036 2012-05-08 16:19 /home/patrickgillespie/apri_ap_crpouta_1_Data.csv

{com}. 
. insheet using /home/patrickgillespie/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. br geo

. collapse (mean) value, by(country)
{err}variable country not found
in option by()
{txt}{search r(111):r(111);}

{com}. collapse (mean) value, by(geo)
{err}type mismatch
{txt}{search r(109):r(109);}

{com}. br

. collapse (mean) value,  by(geo)
{err}type mismatch
{txt}{search r(109):r(109);}

{com}. collapse value,  by(geo)
{err}type mismatch
{txt}{search r(109):r(109);}

{com}. codebook geo

{txt}{hline}
{res}geo{right:GEO}
{txt}{hline}

{col 19}type:  string ({res}str41{txt})

{col 10}unique values:  {res}27{col 51}{txt}missing "":  {res}0{txt}/{res}216

{txt}{col 15}examples:  {res}"Denmark"
{col 26}"Greece"
{col 26}"Luxembourg"
{col 26}"Romania"

{txt}{col 16}warning:  variable has embedded blanks

{com}. reg value time
{err}no observations
{txt}{search r(2000):r(2000);}

{com}. reg value time#geo
{err}geo:  may not use factor variable operators on string variables
{txt}{search r(109):r(109);}

{com}. bysort geo:tab value

{txt}{hline}
-> geo = Austria

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      14.57 {c |}{res}          1       12.50       12.50
      {txt}17.73 {c |}{res}          1       12.50       25.00
      {txt}19.07 {c |}{res}          1       12.50       37.50
      {txt}19.13 {c |}{res}          1       12.50       50.00
      {txt}19.19 {c |}{res}          1       12.50       62.50
      {txt}20.52 {c |}{res}          1       12.50       75.00
      {txt}22.21 {c |}{res}          1       12.50       87.50
      {txt}33.24 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Belgium

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      16.37 {c |}{res}          1       12.50       12.50
      {txt}19.62 {c |}{res}          1       12.50       25.00
      {txt}19.73 {c |}{res}          1       12.50       37.50
          {txt}: {c |}{res}          5       62.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Bulgaria

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      11.96 {c |}{res}          1       12.50       12.50
      {txt}12.30 {c |}{res}          1       12.50       25.00
      {txt}13.72 {c |}{res}          1       12.50       37.50
      {txt}15.54 {c |}{res}          1       12.50       50.00
      {txt}16.68 {c |}{res}          1       12.50       62.50
      {txt}16.86 {c |}{res}          1       12.50       75.00
      {txt}17.15 {c |}{res}          1       12.50       87.50
      {txt}20.33 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Cyprus

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          : {c |}{res}          8      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Czech Republic

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      17.35 {c |}{res}          1       12.50       12.50
      {txt}19.27 {c |}{res}          1       12.50       25.00
      {txt}21.10 {c |}{res}          1       12.50       37.50
      {txt}23.00 {c |}{res}          1       12.50       50.00
      {txt}23.42 {c |}{res}          1       12.50       62.50
      {txt}23.75 {c |}{res}          1       12.50       75.00
      {txt}23.77 {c |}{res}          1       12.50       87.50
      {txt}26.72 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Denmark

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      19.28 {c |}{res}          1       12.50       12.50
      {txt}20.46 {c |}{res}          1       12.50       25.00
      {txt}21.93 {c |}{res}          1       12.50       37.50
      {txt}22.08 {c |}{res}          1       12.50       50.00
      {txt}23.10 {c |}{res}          1       12.50       62.50
      {txt}23.19 {c |}{res}          1       12.50       75.00
      {txt}23.40 {c |}{res}          1       12.50       87.50
      {txt}27.89 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Estonia

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      19.64 {c |}{res}          1       12.50       12.50
      {txt}21.72 {c |}{res}          1       12.50       25.00
      {txt}22.12 {c |}{res}          1       12.50       37.50
      {txt}24.59 {c |}{res}          1       12.50       50.00
      {txt}24.66 {c |}{res}          1       12.50       62.50
      {txt}25.37 {c |}{res}          1       12.50       75.00
      {txt}25.86 {c |}{res}          1       12.50       87.50
      {txt}31.86 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Finland

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      17.63 {c |}{res}          1       12.50       12.50
      {txt}20.01 {c |}{res}          1       12.50       25.00
      {txt}20.94 {c |}{res}          1       12.50       37.50
      {txt}22.46 {c |}{res}          1       12.50       50.00
      {txt}23.20 {c |}{res}          1       12.50       62.50
      {txt}23.72 {c |}{res}          1       12.50       75.00
      {txt}24.42 {c |}{res}          1       12.50       87.50
      {txt}28.53 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = France

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      18.49 {c |}{res}          1       12.50       12.50
      {txt}20.34 {c |}{res}          1       12.50       25.00
      {txt}20.39 {c |}{res}          1       12.50       37.50
      {txt}21.24 {c |}{res}          1       12.50       50.00
      {txt}22.12 {c |}{res}          1       12.50       62.50
      {txt}22.37 {c |}{res}          1       12.50       75.00
      {txt}23.64 {c |}{res}          1       12.50       87.50
      {txt}31.54 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Germany (including  former GDR from 1991)

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      17.86 {c |}{res}          1       12.50       12.50
      {txt}19.24 {c |}{res}          1       12.50       25.00
      {txt}20.72 {c |}{res}          1       12.50       37.50
      {txt}22.32 {c |}{res}          1       12.50       50.00
      {txt}22.82 {c |}{res}          1       12.50       62.50
      {txt}22.91 {c |}{res}          1       12.50       75.00
      {txt}24.03 {c |}{res}          1       12.50       87.50
      {txt}28.51 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Greece

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          : {c |}{res}          8      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Hungary

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      16.34 {c |}{res}          1       12.50       12.50
      {txt}19.65 {c |}{res}          1       12.50       25.00
      {txt}20.94 {c |}{res}          1       12.50       37.50
      {txt}21.18 {c |}{res}          1       12.50       50.00
      {txt}21.35 {c |}{res}          1       12.50       62.50
      {txt}22.24 {c |}{res}          1       12.50       75.00
      {txt}22.34 {c |}{res}          1       12.50       87.50
      {txt}25.20 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Ireland

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          : {c |}{res}          8      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Italy

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          : {c |}{res}          8      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Latvia

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      18.11 {c |}{res}          1       12.50       12.50
      {txt}18.53 {c |}{res}          1       12.50       25.00
      {txt}20.17 {c |}{res}          1       12.50       37.50
      {txt}21.00 {c |}{res}          1       12.50       50.00
      {txt}21.22 {c |}{res}          1       12.50       62.50
      {txt}21.90 {c |}{res}          1       12.50       75.00
      {txt}23.38 {c |}{res}          1       12.50       87.50
      {txt}27.08 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Lithuania

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      17.12 {c |}{res}          1       12.50       12.50
      {txt}18.11 {c |}{res}          1       12.50       25.00
      {txt}19.13 {c |}{res}          1       12.50       37.50
      {txt}19.31 {c |}{res}          1       12.50       50.00
      {txt}21.54 {c |}{res}          1       12.50       62.50
      {txt}21.68 {c |}{res}          1       12.50       75.00
      {txt}24.38 {c |}{res}          1       12.50       87.50
      {txt}26.42 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Luxembourg

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      17.39 {c |}{res}          1       12.50       12.50
      {txt}18.17 {c |}{res}          1       12.50       25.00
      {txt}18.91 {c |}{res}          1       12.50       37.50
      {txt}20.40 {c |}{res}          1       12.50       50.00
      {txt}21.79 {c |}{res}          1       12.50       62.50
      {txt}21.80 {c |}{res}          1       12.50       75.00
      {txt}21.86 {c |}{res}          1       12.50       87.50
      {txt}26.62 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Malta

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          : {c |}{res}          8      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Netherlands

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      30.35 {c |}{res}          1       12.50       12.50
          {txt}: {c |}{res}          7       87.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Poland

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      19.10 {c |}{res}          1       12.50       12.50
      {txt}19.22 {c |}{res}          1       12.50       25.00
      {txt}20.12 {c |}{res}          1       12.50       37.50
      {txt}22.13 {c |}{res}          1       12.50       50.00
      {txt}22.38 {c |}{res}          1       12.50       62.50
      {txt}23.11 {c |}{res}          1       12.50       75.00
      {txt}23.98 {c |}{res}          1       12.50       87.50
      {txt}25.28 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Portugal

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          : {c |}{res}          8      100.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Romania

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      15.73 {c |}{res}          1       12.50       12.50
      {txt}16.46 {c |}{res}          1       12.50       25.00
      {txt}16.57 {c |}{res}          1       12.50       37.50
      {txt}17.12 {c |}{res}          1       12.50       50.00
      {txt}19.82 {c |}{res}          1       12.50       62.50
      {txt}20.99 {c |}{res}          1       12.50       75.00
      {txt}23.70 {c |}{res}          1       12.50       87.50
          {txt}: {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Slovakia

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      16.64 {c |}{res}          1       12.50       12.50
      {txt}16.88 {c |}{res}          1       12.50       25.00
      {txt}17.44 {c |}{res}          1       12.50       37.50
      {txt}18.43 {c |}{res}          1       12.50       50.00
      {txt}20.32 {c |}{res}          1       12.50       62.50
      {txt}20.51 {c |}{res}          1       12.50       75.00
      {txt}22.00 {c |}{res}          1       12.50       87.50
      {txt}24.72 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Slovenia

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      15.48 {c |}{res}          1       12.50       12.50
      {txt}17.59 {c |}{res}          1       12.50       25.00
      {txt}17.69 {c |}{res}          1       12.50       37.50
      {txt}19.65 {c |}{res}          1       12.50       50.00
      {txt}19.83 {c |}{res}          2       25.00       75.00
      {txt}21.75 {c |}{res}          1       12.50       87.50
      {txt}22.03 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Spain

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      17.00 {c |}{res}          1       12.50       12.50
      {txt}19.51 {c |}{res}          1       12.50       25.00
      {txt}19.77 {c |}{res}          1       12.50       37.50
      {txt}20.75 {c |}{res}          1       12.50       50.00
      {txt}20.93 {c |}{res}          1       12.50       62.50
      {txt}21.93 {c |}{res}          1       12.50       75.00
      {txt}22.51 {c |}{res}          1       12.50       87.50
      {txt}24.19 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = Sweden

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
      17.12 {c |}{res}          1       12.50       12.50
      {txt}20.36 {c |}{res}          1       12.50       25.00
      {txt}21.07 {c |}{res}          1       12.50       37.50
      {txt}21.79 {c |}{res}          1       12.50       50.00
      {txt}21.91 {c |}{res}          1       12.50       62.50
      {txt}22.23 {c |}{res}          1       12.50       75.00
      {txt}23.91 {c |}{res}          1       12.50       87.50
      {txt}33.38 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00

{txt}{hline}
-> geo = United Kingdom

      Value {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
     190.56 {c |}{res}          1       12.50       12.50
     {txt}191.77 {c |}{res}          1       12.50       25.00
     {txt}220.85 {c |}{res}          1       12.50       37.50
     {txt}225.53 {c |}{res}          1       12.50       50.00
     {txt}229.49 {c |}{res}          1       12.50       62.50
     {txt}233.87 {c |}{res}          1       12.50       75.00
     {txt}239.61 {c |}{res}          1       12.50       87.50
     {txt}276.54 {c |}{res}          1       12.50      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}          8      100.00


{com}. collapse, by(geo)
{err}clist required
{txt}{search r(100):r(100);}

{com}. collapse _all , by(geo)
{err}geo may not be both target and by()
{txt}{search r(198):r(198);}

{com}. collapse currency , by(geo)
{err}type mismatch
{txt}{search r(109):r(109);}

{com}. collapse value, by(geo)
{err}type mismatch
{txt}{search r(109):r(109);}

{com}. sort geo

. collapse value, by(geo)
{err}type mismatch
{txt}{search r(109):r(109);}

{com}. codebook value

{txt}{hline}
{res}value{right:Value}
{txt}{hline}

{col 19}type:  string ({res}str6{txt})

{col 10}unique values:  {res}146{col 51}{txt}missing "":  {res}0{txt}/{res}216

{txt}{col 15}examples:  {res}"19.27"
{col 26}"21.75"
{col 26}"23.98"
{col 26}":"

{com}. recast double value
{err}value:  double invalid
{txt}{search r(109):r(109);}

{com}. recast byte value
{err}value:  byte invalid
{txt}{search r(109):r(109);}

{com}. help recast

. recast float value, force
{err}value:  float invalid
{txt}{search r(109):r(109);}

{com}. help recast

. destring value, replace
{txt}value contains nonnumeric characters; no {res}replace

{com}. destring value, gen val
{err}option gen incorrectly specified
{txt}{search r(198):r(198);}

{com}. destring value, gen(val)
{txt}value contains nonnumeric characters; no {res}generate

{com}. clear

. insheet using /home/patrickgillespie/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. collapse value, by(geo)

. br

. br if geo = "Germany (including  former GDR from 1991)"
{err}type mismatch
{txt}{search r(109):r(109);}

{com}. br if geo = "Germany (including  former GDR from 1991)"
{err}type mismatch
{txt}{search r(109):r(109);}

{com}. br if geo = "Germany"
{err}type mismatch
{txt}{search r(109):r(109);}

{com}. br if geo == "Germany (including  former GDR from 1991)"

. br

. clear

. do sub_do/osrprice_Eurostat
{txt}
{com}. *Incorporate country-year average oilseed prices
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. 
. 
{txt}end of do-file

{com}. codebook country

{txt}{hline}
{res}country{right:(unlabeled)}
{txt}{hline}

{col 19}type:  string ({res}str4{txt}), but longest is str3

{col 10}unique values:  {res}27{col 51}{txt}missing "":  {res}0{txt}/{res}216

{txt}{col 15}examples:  {res}"DEU"
{col 26}"HUN"
{col 26}"MLT"
{col 26}"ROU"

{com}. clear

. help merge

. do sub_do/osrprice_Eurostat
{txt}
{com}. *Incorporate country-year average oilseed prices
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}(note: file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta not found)
file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/data9907, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. sort country year farmcode
{txt}
{com}. 
{txt}end of do-file

{com}. br country year farmcode osrprice

. codebook osrprice

{txt}{hline}
{res}osrprice{right:Value}
{txt}{hline}

{col 19}type:  numeric ({res}float{txt})

{col 18}range:  [{res}11.96{txt},{res}276.54{txt}]{col 55}units:  {res}.01
{col 10}{txt}unique values:  {res}145{col 51}{txt}missing .:  {res}80986{txt}/{res}207247

{txt}{col 19}mean:{res}{col 26} 33.2411
{txt}{col 15}std. dev:{res}{col 26} 47.0231

{txt}{col 12}percentiles:{col 32}10%{col 42}25%{col 52}50%{col 62}75%{col 72}90%
{res}{col 27}   18.49{col 37}   19.65{col 47}   22.08{col 57}   23.98{col 67}   28.51

{com}. codebook osrprice if country  = "DAN"
{err}type mismatch
{txt}{search r(109):r(109);}

{com}. codebook osrprice if country  == "DAN"

{txt}{hline}
{res}osrprice{right:Value}
{txt}{hline}

{col 19}type:  numeric ({res}float{txt})

{col 18}range:  [{res}19.28{txt},{res}27.89{txt}]{col 55}units:  {res}.01
{col 10}{txt}unique values:  {res}8{col 51}{txt}missing .:  {res}778{txt}/{res}8225

{txt}{col 13}tabulation:  Freq.  Value
{col 24}{res}    817{col 33}19.280001
{col 24}    950{col 33}20.459999
{col 24}   1093{col 33}21.93
{col 24}    891{col 33}22.08
{col 24}    906{col 33}23.1
{col 24}    917{col 33}23.190001
{col 24}    923{col 33}23.4
{col 24}    950{col 33}27.889999
{col 24}    778{col 33}.

{com}. tabstat osrprice, by(country year) stat(mean min max)
{err}by():  too many variables specified
{txt}{search r(103):r(103);}

{com}. tabstat osrprice, by(country) stat(mean min max)

{txt}Summary for variables: osrprice
{col 6}by categories of: country (Country)

{ralign 7:country} {...}
{c |}      mean       min       max
{hline 8}{c +}{hline 30}
{ralign 7:BEL} {...}
{c |}{...}
 {res}  18.5492     16.37     19.73
{txt}{ralign 7:BGR} {...}
{c |}{...}
 {res} 20.25905     11.96     20.33
{txt}{ralign 7:CYP} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:CZE} {...}
{c |}{...}
 {res}  23.3346     17.35     26.72
{txt}{ralign 7:DAN} {...}
{c |}{...}
 {res} 22.70969     19.28     27.89
{txt}{ralign 7:DEU} {...}
{c |}{...}
 {res} 22.28062     17.86     28.51
{txt}{ralign 7:ELL} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:ESP} {...}
{c |}{...}
 {res} 20.66582        17     24.19
{txt}{ralign 7:EST} {...}
{c |}{...}
 {res} 25.30899     19.64     31.86
{txt}{ralign 7:FRA} {...}
{c |}{...}
 {res} 22.41009     18.49     31.54
{txt}{ralign 7:HUN} {...}
{c |}{...}
 {res} 22.12049     16.34      25.2
{txt}{ralign 7:IRE} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:ITA} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:LTU} {...}
{c |}{...}
 {res} 21.95593     17.12     26.42
{txt}{ralign 7:LUX} {...}
{c |}{...}
 {res}  20.7761     17.39     26.62
{txt}{ralign 7:LVA} {...}
{c |}{...}
 {res} 22.26494     18.11     27.08
{txt}{ralign 7:MLT} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:NED} {...}
{c |}{...}
 {res}    30.35     30.35     30.35
{txt}{ralign 7:OST} {...}
{c |}{...}
 {res} 20.68028     14.57     33.24
{txt}{ralign 7:POL} {...}
{c |}{...}
 {res} 22.02992      19.1     25.28
{txt}{ralign 7:POR} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:ROU} {...}
{c |}{...}
 {res} 23.62331     15.73      23.7
{txt}{ralign 7:SUO} {...}
{c |}{...}
 {res} 22.82428     17.63     28.53
{txt}{ralign 7:SVE} {...}
{c |}{...}
 {res} 22.52732     17.12     33.38
{txt}{ralign 7:SVK} {...}
{c |}{...}
 {res} 20.87398     16.64     24.72
{txt}{ralign 7:SVN} {...}
{c |}{...}
 {res} 19.91614     15.48     22.03
{txt}{ralign 7:UKI} {...}
{c |}{...}
 {res} 225.4267    190.56    276.54
{txt}{hline 8}{c +}{hline 30}
{ralign 7:Total} {...}
{c |}{...}
 {res} 33.24109     11.96    276.54
{txt}{hline 8}{c BT}{hline 30}

{com}. tabstat osrprice if year == 2005, by(country) stat(mean min max)

{txt}Summary for variables: osrprice
{col 6}by categories of: country (Country)

{ralign 7:country} {...}
{c |}      mean       min       max
{hline 8}{c +}{hline 30}
{ralign 7:BEL} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:BGR} {...}
{c |}{...}
 {res}    16.86     16.86     16.86
{txt}{ralign 7:CYP} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:CZE} {...}
{c |}{...}
 {res}    19.27     19.27     19.27
{txt}{ralign 7:DAN} {...}
{c |}{...}
 {res}    20.46     20.46     20.46
{txt}{ralign 7:DEU} {...}
{c |}{...}
 {res}    19.24     19.24     19.24
{txt}{ralign 7:ELL} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:ESP} {...}
{c |}{...}
 {res}    19.77     19.77     19.77
{txt}{ralign 7:EST} {...}
{c |}{...}
 {res}    21.72     21.72     21.72
{txt}{ralign 7:FRA} {...}
{c |}{...}
 {res}    20.39     20.39     20.39
{txt}{ralign 7:HUN} {...}
{c |}{...}
 {res}    19.65     19.65     19.65
{txt}{ralign 7:IRE} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:ITA} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:LTU} {...}
{c |}{...}
 {res}    18.11     18.11     18.11
{txt}{ralign 7:LUX} {...}
{c |}{...}
 {res}    18.91     18.91     18.91
{txt}{ralign 7:LVA} {...}
{c |}{...}
 {res}    18.11     18.11     18.11
{txt}{ralign 7:MLT} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:NED} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:OST} {...}
{c |}{...}
 {res}    17.73     17.73     17.73
{txt}{ralign 7:POL} {...}
{c |}{...}
 {res}    19.22     19.22     19.22
{txt}{ralign 7:POR} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:ROU} {...}
{c |}{...}
 {res}    16.57     16.57     16.57
{txt}{ralign 7:SUO} {...}
{c |}{...}
 {res}    20.01     20.01     20.01
{txt}{ralign 7:SVE} {...}
{c |}{...}
 {res}    21.79     21.79     21.79
{txt}{ralign 7:SVK} {...}
{c |}{...}
 {res}    17.44     17.44     17.44
{txt}{ralign 7:SVN} {...}
{c |}{...}
 {res}    17.59     17.59     17.59
{txt}{ralign 7:UKI} {...}
{c |}{...}
 {res}   191.77    191.77    191.77
{txt}{hline 8}{c +}{hline 30}
{ralign 7:Total} {...}
{c |}{...}
 {res} 27.13009     16.57    191.77
{txt}{hline 8}{c BT}{hline 30}

{com}. tabstat osrprice if year == 2000, by(country) stat(mean min max)

{txt}Summary for variables: osrprice
{col 6}by categories of: country (Country)

{ralign 7:country} {...}
{c |}      mean       min       max
{hline 8}{c +}{hline 30}
{ralign 7:BEL} {...}
{c |}{...}
 {res}    16.37     16.37     16.37
{txt}{ralign 7:BGR} {...}
{c |}{...}
 {res}    11.96     11.96     11.96
{txt}{ralign 7:CYP} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:CZE} {...}
{c |}{...}
 {res}    17.35     17.35     17.35
{txt}{ralign 7:DAN} {...}
{c |}{...}
 {res}    19.28     19.28     19.28
{txt}{ralign 7:DEU} {...}
{c |}{...}
 {res}    17.86     17.86     17.86
{txt}{ralign 7:ELL} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:ESP} {...}
{c |}{...}
 {res}       17        17        17
{txt}{ralign 7:EST} {...}
{c |}{...}
 {res}    19.64     19.64     19.64
{txt}{ralign 7:FRA} {...}
{c |}{...}
 {res}    18.49     18.49     18.49
{txt}{ralign 7:HUN} {...}
{c |}{...}
 {res}    16.34     16.34     16.34
{txt}{ralign 7:IRE} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:ITA} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:LTU} {...}
{c |}{...}
 {res}    17.12     17.12     17.12
{txt}{ralign 7:LUX} {...}
{c |}{...}
 {res}    17.39     17.39     17.39
{txt}{ralign 7:LVA} {...}
{c |}{...}
 {res}    18.53     18.53     18.53
{txt}{ralign 7:MLT} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:NED} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:OST} {...}
{c |}{...}
 {res}    14.57     14.57     14.57
{txt}{ralign 7:POL} {...}
{c |}{...}
 {res}    20.12     20.12     20.12
{txt}{ralign 7:POR} {...}
{c |}{...}
 {res}        .         .         .
{txt}{ralign 7:ROU} {...}
{c |}{...}
 {res}    16.46     16.46     16.46
{txt}{ralign 7:SUO} {...}
{c |}{...}
 {res}    17.63     17.63     17.63
{txt}{ralign 7:SVE} {...}
{c |}{...}
 {res}    17.12     17.12     17.12
{txt}{ralign 7:SVK} {...}
{c |}{...}
 {res}    16.64     16.64     16.64
{txt}{ralign 7:SVN} {...}
{c |}{...}
 {res}    15.48     15.48     15.48
{txt}{ralign 7:UKI} {...}
{c |}{...}
 {res}   190.56    190.56    190.56
{txt}{hline 8}{c +}{hline 30}
{ralign 7:Total} {...}
{c |}{...}
 {res} 31.10038     11.96    190.56
{txt}{hline 8}{c BT}{hline 30}

{com}. set more off

. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 16:30:03
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{err}you must start with an empty dataset
{txt}{search r(18):r(18);}

end of do-file
{search r(18):r(18);}

end of do-file
{search r(18):r(18);}

end of do-file

{search r(18):r(18);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 16:32:02
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}(54 missing values generated)

{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{err}repeated time values within panel
{txt}{search r(451):r(451);}

end of do-file
{search r(451):r(451);}

end of do-file

{search r(451):r(451);}

{com}. help merge

. drop if _merge==2
{txt}(54 observations deleted)

{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 16:37:50
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, assert(match master)
{res}{err}_merge already defined
{txt}{search r(110):r(110);}

end of do-file
{search r(110):r(110);}

end of do-file
{search r(110):r(110);}

end of do-file

{search r(110):r(110);}

{com}. drop _merge

. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 16:38:50
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, assert(match master)
{res}{err}_merge already defined
{txt}{search r(110):r(110);}

end of do-file
{search r(110):r(110);}

end of do-file
{search r(110):r(110);}

end of do-file

{search r(110):r(110);}

{com}. drop _merge

. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 16:39:11
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, assert(match master)
{res}{err}_merge already defined
{txt}{search r(110):r(110);}

end of do-file
{search r(110):r(110);}

end of do-file
{search r(110):r(110);}

end of do-file

{search r(110):r(110);}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge

. save
{err}invalid file specification
{txt}{search r(198):r(198);}

{com}. save, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 16:40:10
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, assert(match master)
{res}{err}{p 0 4 2}
merge:  after merge, not all observations
from master
{res}{err}or matched
{p_end}
{col 9}(merged result left in memory)
{txt}{search r(9):r(9);}

end of do-file
{search r(9):r(9);}

end of do-file
{search r(9):r(9);}

end of do-file

{search r(9):r(9);}

{com}. codebook _merge

{txt}{hline}
{res}_merge{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric ({res}byte{txt})
{ralign 22:label}:  {res:_merge}

{col 18}range:  [{res}1{txt},{res}3{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}3{col 51}{txt}missing .:  {res}0{txt}/{res}207247

{txt}{col 13}tabulation:  Freq.   Numeric  Label
{col 24}{res}  20771{col 33}       1{col 43}{txt}master only (1)
{col 24}{res}     54{col 33}       2{col 43}{txt}using only (2)
{col 24}{res} 1.9e+05{col 33}       3{col 43}{txt}matched (3)

{com}. drop if _merge ==2
{txt}(54 observations deleted)

{com}. drop _merge

. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 16:41:29
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. drop _merge
{err}variable _merge not found
{txt}{search r(111):r(111);}

end of do-file
{search r(111):r(111);}

end of do-file
{search r(111):r(111);}

end of do-file

{search r(111):r(111);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 16:41:43
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. drop _merge
{err}variable _merge not found
{txt}{search r(111):r(111);}

end of do-file
{search r(111):r(111);}

end of do-file
{search r(111):r(111);}

end of do-file

{search r(111):r(111);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 16:41:56
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log */
. 
. xtreg osrape_prop energydum sizeclass setasideuaa ln_labour solvency specialise intensity i.year, fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    78181
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    10863

{txt}R-sq:  within  = {res}0.0149                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0460                                        {txt}avg = {res}      7.2
{txt}       overall = {res}0.0166                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}67304{txt})        = {res}    72.56
{txt}corr(u_i, Xb)  = {res}-0.2729                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2}-.0109914{col 26}{space 2} .0009871{col 37}{space 1}  -11.14{col 46}{space 3}0.000{col 54}{space 4} -.012926{col 67}{space 3}-.0090567
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0024327{col 26}{space 2} .0004972{col 37}{space 1}   -4.89{col 46}{space 3}0.000{col 54}{space 4}-.0034072{col 67}{space 3}-.0014583
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0003969{col 26}{space 2} .0000266{col 37}{space 1}  -14.92{col 46}{space 3}0.000{col 54}{space 4}-.0004491{col 67}{space 3}-.0003448
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0017471{col 26}{space 2} .0009779{col 37}{space 1}   -1.79{col 46}{space 3}0.074{col 54}{space 4}-.0036639{col 67}{space 3} .0001696
{txt}{space 4}solvency {c |}{col 14}{res}{space 2}-.0004825{col 26}{space 2} .0015199{col 37}{space 1}   -0.32{col 46}{space 3}0.751{col 54}{space 4}-.0034614{col 67}{space 3} .0024964
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .0015987{col 26}{space 2} .0008143{col 37}{space 1}    1.96{col 46}{space 3}0.050{col 54}{space 4} 2.59e-06{col 67}{space 3} .0031948
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0175527{col 26}{space 2} .0067344{col 37}{space 1}   -2.61{col 46}{space 3}0.009{col 54}{space 4}-.0307521{col 67}{space 3}-.0043534
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0135264{col 26}{space 2} .0009533{col 37}{space 1}  -14.19{col 46}{space 3}0.000{col 54}{space 4}-.0153948{col 67}{space 3} -.011658
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0148693{col 26}{space 2} .0009284{col 37}{space 1}  -16.02{col 46}{space 3}0.000{col 54}{space 4}-.0166889{col 67}{space 3}-.0130496
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0202798{col 26}{space 2} .0009206{col 37}{space 1}  -22.03{col 46}{space 3}0.000{col 54}{space 4}-.0220841{col 67}{space 3}-.0184754
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0181112{col 26}{space 2} .0009289{col 37}{space 1}  -19.50{col 46}{space 3}0.000{col 54}{space 4}-.0199318{col 67}{space 3}-.0162905
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0064766{col 26}{space 2} .0008907{col 37}{space 1}   -7.27{col 46}{space 3}0.000{col 54}{space 4}-.0082224{col 67}{space 3}-.0047308
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0049243{col 26}{space 2} .0008867{col 37}{space 1}   -5.55{col 46}{space 3}0.000{col 54}{space 4}-.0066622{col 67}{space 3}-.0031864
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} .0024946{col 26}{space 2} .0009071{col 37}{space 1}    2.75{col 46}{space 3}0.006{col 54}{space 4} .0007167{col 67}{space 3} .0042724
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .1209469{col 26}{space 2} .0081073{col 37}{space 1}   14.92{col 46}{space 3}0.000{col 54}{space 4} .1050565{col 67}{space 3} .1368372
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .09483736
{txt}     sigma_e {c |} {res} .05650195
{txt}         rho {c |} {res} .73803427{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}10862{txt}, {res}67304{txt}) = {res}   17.26        {txt}Prob > F = {res}0.0000
{txt}
{com}. 
. xtreg oilseedrapeuaa energydum sizeclass setasideuaa ln_labour solvency specialise intensity i.year, fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    78181
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}    10863

{txt}R-sq:  within  = {res}0.0363                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.2415                                        {txt}avg = {res}      7.2
{txt}       overall = {res}0.1584                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}67304{txt})        = {res}   181.01
{txt}corr(u_i, Xb)  = {res}-0.5010                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}oilseedrap~a{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2} -.789416{col 26}{space 2} .1916342{col 37}{space 1}   -4.12{col 46}{space 3}0.000{col 54}{space 4}-1.165019{col 67}{space 3}-.4138131
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .5783655{col 26}{space 2} .0965229{col 37}{space 1}    5.99{col 46}{space 3}0.000{col 54}{space 4} .3891807{col 67}{space 3} .7675502
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.2229298{col 26}{space 2} .0051647{col 37}{space 1}  -43.16{col 46}{space 3}0.000{col 54}{space 4}-.2330526{col 67}{space 3}-.2128071
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}  .579444{col 26}{space 2} .1898606{col 37}{space 1}    3.05{col 46}{space 3}0.002{col 54}{space 4} .2073173{col 67}{space 3} .9515708
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} .1303314{col 26}{space 2} .2950744{col 37}{space 1}    0.44{col 46}{space 3}0.659{col 54}{space 4}-.4480143{col 67}{space 3}  .708677
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .4202717{col 26}{space 2}  .158101{col 37}{space 1}    2.66{col 46}{space 3}0.008{col 54}{space 4} .1103939{col 67}{space 3} .7301494
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-2.554791{col 26}{space 2} 1.307442{col 37}{space 1}   -1.95{col 46}{space 3}0.051{col 54}{space 4}-5.117376{col 67}{space 3} .0077944
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-1.980483{col 26}{space 2} .1850718{col 37}{space 1}  -10.70{col 46}{space 3}0.000{col 54}{space 4}-2.343224{col 67}{space 3}-1.617743
{txt}{space 7}2001  {c |}{col 14}{res}{space 2} -1.95107{col 26}{space 2} .1802431{col 37}{space 1}  -10.82{col 46}{space 3}0.000{col 54}{space 4}-2.304347{col 67}{space 3}-1.597794
{txt}{space 7}2002  {c |}{col 14}{res}{space 2} -2.19423{col 26}{space 2} .1787299{col 37}{space 1}  -12.28{col 46}{space 3}0.000{col 54}{space 4} -2.54454{col 67}{space 3}-1.843919
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-1.614527{col 26}{space 2} .1803424{col 37}{space 1}   -8.95{col 46}{space 3}0.000{col 54}{space 4}-1.967998{col 67}{space 3}-1.261056
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.5898253{col 26}{space 2} .1729229{col 37}{space 1}   -3.41{col 46}{space 3}0.001{col 54}{space 4} -.928754{col 67}{space 3}-.2508965
{txt}{space 7}2005  {c |}{col 14}{res}{space 2} .1973922{col 26}{space 2} .1721435{col 37}{space 1}    1.15{col 46}{space 3}0.252{col 54}{space 4} -.140009{col 67}{space 3} .5347934
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} 1.441154{col 26}{space 2} .1761009{col 37}{space 1}    8.18{col 46}{space 3}0.000{col 54}{space 4} 1.095996{col 67}{space 3} 1.786311
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 6.948283{col 26}{space 2} 1.573994{col 37}{space 1}    4.41{col 46}{space 3}0.000{col 54}{space 4} 3.863256{col 67}{space 3} 10.03331
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 43.950665
{txt}     sigma_e {c |} {res} 10.969546
{txt}         rho {c |} {res} .94135896{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}10862{txt}, {res}67304{txt}) = {res}   55.93        {txt}Prob > F = {res}0.0000
{txt}
{com}. 
. aljd;a
{err}unrecognized command:  aljd
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 16:43:47
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log */
. 
. xtreg osrape_prop energydum sizeclass setasideuaa ln_labour solvency specialise osrprice i.year, fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    55775
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}     8481

{txt}R-sq:  within  = {res}0.0122                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.0127                                        {txt}avg = {res}      6.6
{txt}       overall = {res}0.0024                                        {txt}max = {res}        8

                                                {txt}F({res}13{txt},{res}47281{txt})        = {res}    44.73
{txt}corr(u_i, Xb)  = {res}-0.1680                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2} .0060761{col 26}{space 2} .0012917{col 37}{space 1}    4.70{col 46}{space 3}0.000{col 54}{space 4} .0035443{col 67}{space 3} .0086079
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0012005{col 26}{space 2} .0006994{col 37}{space 1}   -1.72{col 46}{space 3}0.086{col 54}{space 4}-.0025713{col 67}{space 3} .0001703
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2} -.000364{col 26}{space 2} .0000291{col 37}{space 1}  -12.52{col 46}{space 3}0.000{col 54}{space 4} -.000421{col 67}{space 3} -.000307
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0019909{col 26}{space 2} .0012924{col 37}{space 1}   -1.54{col 46}{space 3}0.123{col 54}{space 4} -.004524{col 67}{space 3} .0005422
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} -.000337{col 26}{space 2} .0020769{col 37}{space 1}   -0.16{col 46}{space 3}0.871{col 54}{space 4}-.0044077{col 67}{space 3} .0037336
{txt}{space 2}specialise {c |}{col 14}{res}{space 2}  .001064{col 26}{space 2} .0008301{col 37}{space 1}    1.28{col 46}{space 3}0.200{col 54}{space 4}-.0005629{col 67}{space 3} .0026909
{txt}{space 4}osrprice {c |}{col 14}{res}{space 2} 2.90e-06{col 26}{space 2}   .00005{col 37}{space 1}    0.06{col 46}{space 3}0.954{col 54}{space 4} -.000095{col 67}{space 3} .0001008
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2001  {c |}{col 14}{res}{space 2}-.0016505{col 26}{space 2} .0010196{col 37}{space 1}   -1.62{col 46}{space 3}0.106{col 54}{space 4} -.003649{col 67}{space 3}  .000348
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0066752{col 26}{space 2} .0010331{col 37}{space 1}   -6.46{col 46}{space 3}0.000{col 54}{space 4}-.0087001{col 67}{space 3}-.0046504
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0032844{col 26}{space 2} .0010573{col 37}{space 1}   -3.11{col 46}{space 3}0.002{col 54}{space 4}-.0053567{col 67}{space 3}-.0012122
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0080345{col 26}{space 2} .0011095{col 37}{space 1}   -7.24{col 46}{space 3}0.000{col 54}{space 4}-.0102091{col 67}{space 3}-.0058599
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0058753{col 26}{space 2}   .00121{col 37}{space 1}   -4.86{col 46}{space 3}0.000{col 54}{space 4}-.0082469{col 67}{space 3}-.0035036
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} .0025502{col 26}{space 2}  .001113{col 37}{space 1}    2.29{col 46}{space 3}0.022{col 54}{space 4} .0003688{col 67}{space 3} .0047316
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .1138862{col 26}{space 2} .0113586{col 37}{space 1}   10.03{col 46}{space 3}0.000{col 54}{space 4} .0916232{col 67}{space 3} .1361492
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .09636897
{txt}     sigma_e {c |} {res} .05611572
{txt}         rho {c |} {res} .74678463{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}8480{txt}, {res}47281{txt}) = {res}   17.80         {txt}Prob > F = {res}0.0000
{txt}
{com}. 
. xtreg oilseedrapeuaa energydum sizeclass setasideuaa ln_labour specialise osrprice i.year, fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    55779
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}     8481

{txt}R-sq:  within  = {res}0.0418                         {txt}Obs per group: min = {res}        1
{txt}       between = {res}0.1685                                        {txt}avg = {res}      6.6
{txt}       overall = {res}0.1036                                        {txt}max = {res}        8

                                                {txt}F({res}12{txt},{res}47286{txt})        = {res}   171.73
{txt}corr(u_i, Xb)  = {res}-0.4348                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}oilseedrap~a{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}energydum {c |}{col 14}{res}{space 2} 1.522963{col 26}{space 2} .2756798{col 37}{space 1}    5.52{col 46}{space 3}0.000{col 54}{space 4} .9826267{col 67}{space 3} 2.063299
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}   1.1331{col 26}{space 2}  .149327{col 37}{space 1}    7.59{col 46}{space 3}0.000{col 54}{space 4} .8404171{col 67}{space 3} 1.425783
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.2348845{col 26}{space 2} .0062104{col 37}{space 1}  -37.82{col 46}{space 3}0.000{col 54}{space 4}-.2470568{col 67}{space 3}-.2227121
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .7621001{col 26}{space 2} .2759608{col 37}{space 1}    2.76{col 46}{space 3}0.006{col 54}{space 4}  .221213{col 67}{space 3} 1.302987
{txt}{space 2}specialise {c |}{col 14}{res}{space 2} .3121845{col 26}{space 2} .1772406{col 37}{space 1}    1.76{col 46}{space 3}0.078{col 54}{space 4}-.0352096{col 67}{space 3} .6595787
{txt}{space 4}osrprice {c |}{col 14}{res}{space 2} .0097201{col 26}{space 2} .0106691{col 37}{space 1}    0.91{col 46}{space 3}0.362{col 54}{space 4}-.0111916{col 67}{space 3} .0306318
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2001  {c |}{col 14}{res}{space 2} .0175136{col 26}{space 2} .2177251{col 37}{space 1}    0.08{col 46}{space 3}0.936{col 54}{space 4}-.4092308{col 67}{space 3} .4442579
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.2216669{col 26}{space 2} .2205786{col 37}{space 1}   -1.00{col 46}{space 3}0.315{col 54}{space 4} -.654004{col 67}{space 3} .2106702
{txt}{space 7}2003  {c |}{col 14}{res}{space 2} .6301685{col 26}{space 2} .2257577{col 37}{space 1}    2.79{col 46}{space 3}0.005{col 54}{space 4} .1876803{col 67}{space 3} 1.072657
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.5897744{col 26}{space 2} .2367382{col 37}{space 1}   -2.49{col 46}{space 3}0.013{col 54}{space 4}-1.053785{col 67}{space 3}-.1257641
{txt}{space 7}2005  {c |}{col 14}{res}{space 2} .4831533{col 26}{space 2} .2582352{col 37}{space 1}    1.87{col 46}{space 3}0.061{col 54}{space 4}-.0229913{col 67}{space 3} .9892979
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} 1.903875{col 26}{space 2} .2376147{col 37}{space 1}    8.01{col 46}{space 3}0.000{col 54}{space 4} 1.438147{col 67}{space 3} 2.369604
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 2.235083{col 26}{space 2} 2.423413{col 37}{space 1}    0.92{col 46}{space 3}0.356{col 54}{space 4} -2.51484{col 67}{space 3} 6.985006
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 47.799983
{txt}     sigma_e {c |} {res} 11.982532
{txt}         rho {c |} {res} .94087469{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}8480{txt}, {res}47286{txt}) = {res}   50.59         {txt}Prob > F = {res}0.0000
{txt}
{com}. sdlkfj
{err}unrecognized command:  sdlkfj
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 16:46:55
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 16:47:10
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 17:01:22
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 17:01:35
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 17:02:15
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 17:02:27
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 17:03:26
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 17:03:39
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 17:18:39
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 17:18:53
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 17:23:58
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 17:24:09
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 17:25:31
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
{txt}(4015 missing values generated)

{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 17:25:43
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 17:29:17
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_setaside = log(setaside)
{txt}(65811 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. *gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 17:29:29
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 17:30:23
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. *gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 17:30:34
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 17:33:51
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen setaside_prop = setasideuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. *gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 17:34:05
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 21:29:58
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen setaside_prop = setasideuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. *gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 21:30:16
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 22:33:41
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(paidlabourinputhours)
{txt}(44413 missing values generated)

{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen setaside_prop = setasideuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. *gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 22:33:56
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 22:34:33
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(paidlabourinputhours)
{txt}(44413 missing values generated)

{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen setaside_prop = setasideuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. *gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 22:34:47
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 22:45:37
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(paidlabourinputhours)
{txt}(44413 missing values generated)

{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen setaside_prop = setasideuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. *gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 22:45:50
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2012, 22:46:18
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. *use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen energydum = 0
{txt}
{com}. replace energydum = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen edum_adop = energydum*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen trXmsc = trend*mscode
{txt}
{com}. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(paidlabourinputhours)
{txt}(44413 missing values generated)

{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen setaside_prop = setasideuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. *gen ln_c_ret_ha = log(cerealsvalue/cerealsuaa)
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 8 May 2012, 22:46:32
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 9 May 2012, 16:21:07
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(paidlabourinputhours)
{txt}(44413 missing values generated)

{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 9 May 2012, 16:21:20
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 9 May 2012, 16:27:45
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 9 May 2012, 16:27:56
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 9 May 2012, 16:35:23
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** Create Time Trend
. ****************
. generate trend=0 if year==1999
{txt}(71394 missing values generated)

{com}. replace trend=1 if year==2000
{txt}(7547 real changes made)

{com}. replace trend=2 if year==2001
{txt}(8818 real changes made)

{com}. replace trend=3 if year==2002
{txt}(9773 real changes made)

{com}. replace trend=4 if year==2003
{txt}(9396 real changes made)

{com}. replace trend=5 if year==2004
{txt}(9749 real changes made)

{com}. replace trend=6 if year==2005
{txt}(10012 real changes made)

{com}. replace trend=7 if year==2006
{txt}(8639 real changes made)

{com}. replace trend=8 if year==2007
{txt}(7460 real changes made)

{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 9 May 2012, 16:35:30
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 9 May 2012, 16:51:53
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 9 May 2012, 16:51:59
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 9 May 2012, 16:52:14
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 9 May 2012, 16:52:19
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 9 May 2012, 17:01:26
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. *gen intensity = machininerybuildingcurrentcosts/totalinputs
. gen intensity = (fertilisers + cropprotection)/totalinputs
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 9 May 2012, 17:01:31
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 9 May 2012, 17:04:04
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 9 May 2012, 17:04:09
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 9 May 2012, 17:10:44
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 9 May 2012, 17:10:49
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 9 May 2012, 17:18:04
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 9 May 2012, 17:18:09
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 9 May 2012, 17:26:07
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(paidlabourinputhours)
{txt}(44413 missing values generated)

{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 9 May 2012, 17:26:11
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 9 May 2012, 17:36:53
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 9 May 2012, 17:36:58
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 9 May 2012, 17:43:54
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 9 May 2012, 17:43:59
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 9 May 2012, 17:51:26
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 9 May 2012, 17:51:30
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 08:59:25
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}10 May 2012, 08:59:41
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 09:20:27
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}10 May 2012, 09:20:33
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 10:00:13
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}10 May 2012, 10:00:18
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 10:21:43
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}10 May 2012, 10:21:48
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 10:38:59
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}10 May 2012, 10:39:03
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 12:33:15
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*
> log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se) replace
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
> */
. levelsof country, local(msvalue)
{txt}`"DAN"' `"DEU"' `"ELL"' `"ESP"' `"FRA"' `"IRE"' `"ITA"' `"LUX"' `"NED"' `"OST"' `"POR"' `"SUO"' `"SVE"' `"UKI"'

{com}. foreach value of local msvalue{c -(}
{txt}  2{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  3{com}. estimates store estuaa_`value'
{txt}  4{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year, fe
{txt}  5{com}. estimates store estuaa_`value'
{txt}  6{com}. {c )-}
{txt}
{com}. 
. Stop!!  
{err}unrecognized command:  Stop
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. help estimate

. help estimates

. outreg2 policy [estuaa*] using "output/docs/mscoef", stat(coef) word replace
{txt}{stata `"shellout using `"output/docs/mscoef.rtf"'"':output/docs/mscoef.rtf}
{browse `"/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis"' :dir}{com} : {txt}{stata `"seeout using "output/docs/mscoef.txt""':seeout}

{com}. seeout using "output/docs/mscoef.txt"
{res}Hit Enter to continue{com}. outreg2 policy [estuaa*] using "output/docs/mscoef", stat(coef) word replace keep(policy) onecol

. outreg2 policy [estuaa*] using "output/docs/mscoef", stat(coef) word replace keep(policy) onecol
{res}{opt keep( )} supersedes {opt varlist} when both specified
{txt}{stata `"shellout using `"output/docs/mscoef.rtf"'"':output/docs/mscoef.rtf}
{browse `"/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis"' :dir}{com} : {txt}{stata `"seeout using "output/docs/mscoef.txt""':seeout}

{com}. seeout using "output/docs/mscoef.txt"
{res}Hit Enter to continue{com}. seeout using "output/docs/mscoef.txt"

. seeout using "output/docs/mscoef.txt"
{res}Hit Enter to continue{com}. help outreg2

. help outreg2

. seeout using "output/docs/mscoef.txt"
{res}Hit Enter to continue{com}. 

. outreg2 policy [estuaa*] using "output/docs/mscoef", stat(coef) word replace noni nor2 nocons noobs
{txt}{stata `"shellout using `"output/docs/mscoef.rtf"'"':output/docs/mscoef.rtf}
{browse `"/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis"' :dir}{com} : {txt}{stata `"seeout using "output/docs/mscoef.txt""':seeout}

{com}. seeout using "output/docs/mscoef.txt"
{res}Hit Enter to continue{com}. 

. help outreg2

. outreg2 policy [estuaa*] using "output/docs/mscoef", stat(coef) word excel replace noni nor2 nocons noobs 
{txt}{stata `"shellout using `"output/docs/mscoef.rtf"'"':output/docs/mscoef.rtf}
{browse `"output/docs/mscoef.xml"'}
{browse `"/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis"' :dir}{com} : {txt}{stata `"seeout using "output/docs/mscoef.txt""':seeout}

{com}. foreach value of local msvalue{c -(}
{txt}  2{com}. di `value'
{txt}  3{com}. {c )-}

. levelsof country, local(msvlaue)
{txt}`"DAN"' `"DEU"' `"ELL"' `"ESP"' `"FRA"' `"IRE"' `"ITA"' `"LUX"' `"NED"' `"OST"' `"POR"' `"SUO"' `"SVE"' `"UKI"'

{com}. foreach value of local msvalue{c -(}
{txt}  2{com}. di `value'
{txt}  3{com}. {c )-}

. levelsof country, clean local(msvlaue)
{txt}DAN DEU ELL ESP FRA IRE ITA LUX NED OST POR SUO SVE UKI

{com}. foreach value of local msvalue{c -(}
{txt}  2{com}. di "`value'"
{txt}  3{com}. {c )-}

. foreach value of local msvalue{c -(}
{txt}  2{com}. di `value'
{txt}  3{com}. {c )-}

. `msvalue'
. di `msvalue'
{res}

{com}. display 4
{res}4

{com}. levelsof country, clean local(msvalue)
{txt}DAN DEU ELL ESP FRA IRE ITA LUX NED OST POR SUO SVE UKI

{com}. di `msvalue'
{res}{err}DAN not found
{txt}{search r(111):r(111);}

{com}. di "`msvalue'"
{res}DAN DEU ELL ESP FRA IRE ITA LUX NED OST POR SUO SVE UKI

{com}. foreach value in local msvalue{c -(}
{txt}  2{com}. di "`value'"
{txt}  3{com}. {c )-}
local
msvalue

. help foreach

. foreach value in local `msvalue'{c -(}
{txt}  2{com}. di "`value'"
{txt}  3{com}. {c )-}
local
DAN
DEU
ELL
ESP
FRA
IRE
ITA
LUX
NED
OST
POR
SUO
SVE
UKI

. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 13:39:59
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*
> log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se) replace
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
> */
. levelsof country,clean local(msvalue)
{txt}DAN DEU ELL ESP FRA IRE ITA LUX NED OST POR SUO SVE UKI

{com}. foreach value of local `msvalue'{c -(}
{txt}  2{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  3{com}. estimates store estuaa_`value'
{txt}  4{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  5{com}. estimates store estprop_`value'
{txt}  6{com}. {c )-}
{err}{c -(} required
{txt}{search r(100):r(100);}

end of do-file
{search r(100):r(100);}

end of do-file

{search r(100):r(100);}

{com}. foreach value of local `msvalue' {c -(}
{txt}  2{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  3{com}. 
. estimates store estuaa_`value'
{txt}  4{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  5{com}. estimates store estprop_`value'
{txt}  6{com}. 
. {c )-}
{err}{c -(} required
{txt}{search r(100):r(100);}

{com}. 
. foreach value of local `msvalue' {c -(}
{txt}  2{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  3{com}. 
. estimates store `value'_estuaa
{txt}  4{com}.  quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  5{com}. 
. estimates store estprop`value'_estprop
{txt}  6{com}. {c )-}
{err}{c -(} required
{txt}{search r(100):r(100);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 13:44:15
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*
> log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se) replace
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
> */
. levelsof country,clean local(msvalue)
{txt}DAN DEU ELL ESP FRA IRE ITA LUX NED OST POR SUO SVE UKI

{com}. foreach value in local `msvalue' {c -(}
{txt}  2{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  3{com}. estimates store estuaa_`value'
{txt}  4{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  5{com}. estimates store estprop_`value'
{txt}  6{com}. {c )-}
{err}insufficient observations
{txt}{search r(2001):r(2001);}

end of do-file
{search r(2001):r(2001);}

end of do-file

{search r(2001):r(2001);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 13:45:27
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*
> log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se) replace
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
> */
. levelsof country,clean local(msvalue)
{txt}DAN DEU ELL ESP FRA IRE ITA LUX NED OST POR SUO SVE UKI

{com}. foreach value in local `msvalue' {c -(}
{txt}  2{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  3{com}. estimates store estuaa_`value'
{txt}  4{com}. *quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
. *estimates store estprop_`value'
. {c )-}
{err}insufficient observations
{txt}{search r(2001):r(2001);}

end of do-file
{search r(2001):r(2001);}

end of do-file

{search r(2001):r(2001);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 13:46:20
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*
> log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se) replace
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
> */
. levelsof country,clean local(msvalue)
{txt}DAN DEU ELL ESP FRA IRE ITA LUX NED OST POR SUO SVE UKI

{com}. foreach value in local `msvalue' {c -(}
{txt}  2{com}. count if country =="`value'"
{txt}  3{com}. *quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour *ln_ffi solvency intensity i.year if country =="`value'", fe
. estimates store estuaa_`value'
{txt}  4{com}. *quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
. *estimates store estprop_`value'
. {c )-}
{res}    0
{err}last estimation results not found, nothing to store
{txt}{search r(301):r(301);}

end of do-file
{search r(301):r(301);}

end of do-file

{search r(301):r(301);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 13:46:42
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*
> log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se) replace
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
> */
. levelsof country,clean local(msvalue)
{txt}DAN DEU ELL ESP FRA IRE ITA LUX NED OST POR SUO SVE UKI

{com}. foreach value in local `msvalue' {c -(}
{txt}  2{com}. count if country =="`value'"
{txt}  3{com}. *quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour *ln_ffi solvency intensity i.year if country =="`value'", fe
. *estimates store estuaa_`value'
. *quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
. *estimates store estprop_`value'
. {c )-}
{res}    0
 2453
16370
10188
14556
16430
  592
 4137
  387
 1350
 3468
  971
 2031
 2188
 3075
{txt}
{com}. 
. Stop!!  
{err}unrecognized command:  Stop
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. mean(oilseedrapeuaa) if country == "DAN"
{res}
{txt}Mean estimation{col 37}Number of obs{col 54}= {res}   2453

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 14}{hline 12}
{col 14}{c |}       Mean{col 26}   Std. Err.{col 38}     [95% Con{col 51}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 14}{hline 12}
oilseedrap~a {c |}{col 14}{res}{space 2} 8.613225{col 26}{space 2} .3135482{col 37}{space 5} 7.998378{col 51}{space 3} 9.228071
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 14}{hline 12}

{com}. xtreg osrape_prop policy if country=="DAN", fe 

{txt}Fixed-effects (within) regression               Number of obs      = {res}     2453
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}      423

{txt}R-sq:  within  = {res}0.0106                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0026                                        {txt}avg = {res}      5.8
{txt}       overall = {res}0.0040                                        {txt}max = {res}        9

                                                {txt}F({res}1{txt},{res}2029{txt})          = {res}    21.80
{txt}corr(u_i, Xb)  = {res}-0.0107                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}policy {c |}{col 14}{res}{space 2} .0108137{col 26}{space 2} .0023159{col 37}{space 1}    4.67{col 46}{space 3}0.000{col 54}{space 4}  .006272{col 67}{space 3} .0153554
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0539878{col 26}{space 2} .0015064{col 37}{space 1}   35.84{col 46}{space 3}0.000{col 54}{space 4} .0510336{col 67}{space 3}  .056942
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .05517691
{txt}     sigma_e {c |} {res} .05559787
{txt}         rho {c |} {res} .49619987{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}422{txt}, {res}2029{txt}) = {res}    5.81           {txt}Prob > F = {res}0.0000

{com}. help foreach

. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 13:54:17
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*
> log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se) replace
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
> */
. levelsof country,local(msvalue)
{txt}`"DAN"' `"DEU"' `"ELL"' `"ESP"' `"FRA"' `"IRE"' `"ITA"' `"LUX"' `"NED"' `"OST"' `"POR"' `"SUO"' `"SVE"' `"UKI"'

{com}. foreach value of local msvalue {c -(}
{txt}  2{com}. count if country ==`value'
{txt}  3{com}. *quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour *ln_ffi solvency intensity i.year if country =="`value'", fe
. *estimates store estuaa_`value'
. *quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
. *estimates store estprop_`value'
. {c )-}
{err}DAN not found
{txt}{search r(111):r(111);}

end of do-file
{search r(111):r(111);}

end of do-file

{search r(111):r(111);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 13:54:46
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*
> log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se) replace
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
> */
. levelsof country,local(msvalue)
{txt}`"DAN"' `"DEU"' `"ELL"' `"ESP"' `"FRA"' `"IRE"' `"ITA"' `"LUX"' `"NED"' `"OST"' `"POR"' `"SUO"' `"SVE"' `"UKI"'

{com}. foreach value of local msvalue {c -(}
{txt}  2{com}. count if country =="`value'"
{txt}  3{com}. *quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour *ln_ffi solvency intensity i.year if country =="`value'", fe
. *estimates store estuaa_`value'
. *quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
. *estimates store estprop_`value'
. {c )-}
{res} 2453
16370
10188
14556
16430
  592
 4137
  387
 1350
 3468
  971
 2031
 2188
 3075
{txt}
{com}. 
. Stop!!  
{err}unrecognized command:  Stop
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 13:55:31
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*
> log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se) replace
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
> */
. levelsof country,local(msvalue)
{txt}`"DAN"' `"DEU"' `"ELL"' `"ESP"' `"FRA"' `"IRE"' `"ITA"' `"LUX"' `"NED"' `"OST"' `"POR"' `"SUO"' `"SVE"' `"UKI"'

{com}. foreach value of local msvalue {c -(}
{txt}  2{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  3{com}. estimates store estuaa_`value'
{txt}  4{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  5{com}. estimates store estprop_`value'
{txt}  6{com}. {c )-}
{txt}
{com}. 
. Stop!!  
{err}unrecognized command:  Stop
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. outreg2
  outreg2 using `"output/docs/mscoef.txt"', stat(coef) word excel noni nor2 nocons noobs
{txt}{stata `"shellout using `"output/docs/mscoef.rtf"'"':output/docs/mscoef.rtf}
{browse `"output/docs/mscoef.xml"'}
{browse `"/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis"' :dir}{com} : {txt}{stata `"seeout using "output/docs/mscoef.txt""':seeout}

{com}. outreg2 policy [estuaa* estprop*] using "output/docs/mscoef", stat(coef) word excel noni nor2 nocons noobs 
{err}estimation result estprop not found
{txt}{search r(111):r(111);}

{com}. outreg2 policy [estuaa*] using "output/docs/mscoef", stat(coef) word excel noni nor2 nocons noobs 
{txt}{stata `"shellout using `"output/docs/mscoef.rtf"'"':output/docs/mscoef.rtf}
{browse `"output/docs/mscoef.xml"'}
{browse `"/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis"' :dir}{com} : {txt}{stata `"seeout using "output/docs/mscoef.txt""':seeout}

{com}. outreg2 policy [estprop*] using "output/docs/mscoef", stat(coef) word excel noni nor2 nocons noobs 
{txt}{stata `"shellout using `"output/docs/mscoef.rtf"'"':output/docs/mscoef.rtf}
{browse `"output/docs/mscoef.xml"'}
{browse `"/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis"' :dir}{com} : {txt}{stata `"seeout using "output/docs/mscoef.txt""':seeout}

{com}. outreg2 policy [estuaa*] using "output/docs/mscoef", stat(coef) word excel noni nor2 nocons noobs replace
{txt}{stata `"shellout using `"output/docs/mscoef.rtf"'"':output/docs/mscoef.rtf}
{browse `"output/docs/mscoef.xml"'}
{browse `"/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis"' :dir}{com} : {txt}{stata `"seeout using "output/docs/mscoef.txt""':seeout}

{com}. outreg2 policy [estprop*] using "output/docs/mscoef", stat(coef) word excel noni nor2 nocons noobs
{txt}{stata `"shellout using `"output/docs/mscoef.rtf"'"':output/docs/mscoef.rtf}
{browse `"output/docs/mscoef.xml"'}
{browse `"/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis"' :dir}{com} : {txt}{stata `"seeout using "output/docs/mscoef.txt""':seeout}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 14:27:20
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*
> log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se) replace
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
> */
. levelsof country,local(msvalue)
{txt}`"DAN"' `"DEU"' `"ELL"' `"ESP"' `"FRA"' `"IRE"' `"ITA"' `"LUX"' `"NED"' `"OST"' `"POR"' `"SUO"' `"SVE"' `"UKI"'

{com}. foreach value of local msvalue {c -(}
{txt}  2{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  3{com}. estimates store estuaa_`value'
{txt}  4{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  5{com}. estimates store estprop_`value'
{txt}  6{com}. {c )-}
{txt}
{com}. 
. outreg2 policy [estuaa*] using "output/docs/msb_uaa", stat(coef) word excel noni nor2 nocons noobs replace
{txt}{stata `"shellout using `"output/docs/msb_uaa.rtf"'"':output/docs/msb_uaa.rtf}
{browse `"output/docs/msb_uaa.xml"'}
{browse `"/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis"' :dir}{com} : {txt}{stata `"seeout using "output/docs/msb_uaa.txt""':seeout}

{com}. 
. outreg2 policy [estprop*] using "output/docs/msb_prop", stat(coef) word excel noni nor2 nocons noobs replace
{txt}{stata `"shellout using `"output/docs/msb_prop.rtf"'"':output/docs/msb_prop.rtf}
{browse `"output/docs/msb_prop.xml"'}
{browse `"/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis"' :dir}{com} : {txt}{stata `"seeout using "output/docs/msb_prop.txt""':seeout}

{com}. 
. /*
> *************************************************************
> *** POST-ESTIMATION TESTS *
> ***************************
> ****************
> *** Chow test
> ****************
> xtreg oilseedrapeuaa policy pol_adop adopter sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode
> test _b[pol_adop]=0, notest
> test _b[adopter]=0, accum
> outreg2 policy pol_adop adopter using "output/docs/Chow", addstat(Chi-squared statistic, r(chi2), Prob > chi2, r(p)) word nocons replace
> 
> xtreg oilseedrapeuaa policy pol_adop adopter sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode
> test _b[pol_adop]=0, notest
> test _b[adopter]=0, accum
> outreg2 policy pol_adop adopter using "output/docs/Chow", addstat(Chi-squared statistic, r(chi2), Prob > chi2, r(p)) word nocons
> 
> 
> xtreg osrape_prop policy pol_adop adopter sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode
> test _b[pol_adop]=0, notest
> test _b[adopter]=0, accum
> outreg2 policy pol_adop adopter using "output/docs/Chow", addstat(Chi-squared statistic, r(chi2), Prob > chi2, r(p)) word nocons
> 
> */
. *************************************************************
. *** CLEAN UP              *
. ***************************
. 
. tsset, clear
{txt}
{com}. clear
{txt}
{com}. clear matrix
{txt}
{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 15:04:10
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*
> log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se) replace
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
> */
. levelsof country,local(msvalue)
{txt}`"DAN"' `"DEU"' `"ELL"' `"ESP"' `"FRA"' `"IRE"' `"ITA"' `"LUX"' `"NED"' `"OST"' `"POR"' `"SUO"' `"SVE"' `"UKI"'

{com}. foreach value of local msvalue {c -(}
{txt}  2{com}. quietly xtreg oilseedrape policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  3{com}. estimates store estuaa_`value'
{txt}  4{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  5{com}. estimates store estprop_`value'
{txt}  6{com}. {c )-}
{err}oilseedrape ambiguous abbreviation
{txt}{search r(111):r(111);}

end of do-file
{search r(111):r(111);}

end of do-file

{search r(111):r(111);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 16:05:00
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*
> log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se) replace
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
> */
. levelsof country,local(msvalue)
{txt}`"DAN"' `"DEU"' `"ELL"' `"ESP"' `"FRA"' `"IRE"' `"ITA"' `"LUX"' `"NED"' `"OST"' `"POR"' `"SUO"' `"SVE"' `"UKI"'

{com}. foreach value of local msvalue {c -(}
{txt}  2{com}. quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  3{com}. estimates store estuaa_`value'
{txt}  4{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  5{com}. estimates store estprop_`value'
{txt}  6{com}. {c )-}
{txt}
{com}. 
. outreg2 policy [estuaa*] using "output/docs/msb_uaa", stat(coef) word excel noni nor2 nocons noobs replace
{txt}{stata `"shellout using `"output/docs/msb_uaa.rtf"'"':output/docs/msb_uaa.rtf}
{browse `"output/docs/msb_uaa.xml"'}
{browse `"/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis"' :dir}{com} : {txt}{stata `"seeout using "output/docs/msb_uaa.txt""':seeout}

{com}. 
. outreg2 policy [estprop*] using "output/docs/msb_prop", stat(coef) word excel noni nor2 nocons noobs replace
{txt}{stata `"shellout using `"output/docs/msb_prop.rtf"'"':output/docs/msb_prop.rtf}
{browse `"output/docs/msb_prop.xml"'}
{browse `"/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis"' :dir}{com} : {txt}{stata `"seeout using "output/docs/msb_prop.txt""':seeout}

{com}. 
. /*
> *************************************************************
> *** POST-ESTIMATION TESTS *
> ***************************
> ****************
> *** Chow test
> ****************
> xtreg oilseedrapeuaa policy pol_adop adopter sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode
> test _b[pol_adop]=0, notest
> test _b[adopter]=0, accum
> outreg2 policy pol_adop adopter using "output/docs/Chow", addstat(Chi-squared statistic, r(chi2), Prob > chi2, r(p)) word nocons replace
> 
> xtreg oilseedrapeuaa policy pol_adop adopter sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode
> test _b[pol_adop]=0, notest
> test _b[adopter]=0, accum
> outreg2 policy pol_adop adopter using "output/docs/Chow", addstat(Chi-squared statistic, r(chi2), Prob > chi2, r(p)) word nocons
> 
> 
> xtreg osrape_prop policy pol_adop adopter sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode
> test _b[pol_adop]=0, notest
> test _b[adopter]=0, accum
> outreg2 policy pol_adop adopter using "output/docs/Chow", addstat(Chi-squared statistic, r(chi2), Prob > chi2, r(p)) word nocons
> 
> */
. *************************************************************
. *** CLEAN UP              *
. ***************************
. 
. tsset, clear
{txt}
{com}. clear
{txt}
{com}. clear matrix
{txt}
{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 16:34:58
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*
> log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se) replace
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
> */
. levelsof country,local(msvalue)
{txt}`"DAN"' `"DEU"' `"ELL"' `"ESP"' `"FRA"' `"IRE"' `"ITA"' `"LUX"' `"NED"' `"OST"' `"POR"' `"SUO"' `"SVE"' `"UKI"'

{com}. foreach value of local msvalue {c -(}
{txt}  2{com}. quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  3{com}. estimates store estuaa_`value'
{txt}  4{com}. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
{txt}  5{com}. estimates store estprop_`value'
{txt}  6{com}. {c )-}
{txt}
{com}. 
. stop!!!
{err}unrecognized command:  stop
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. help outreg2

. ereturn list

{txt}scalars:
              e(g_min) =  {res}2
               {txt}e(Tcon) =  {res}0
               {txt}e(Tbar) =  {res}6.137724550898204
                {txt}e(F_f) =  {res}12.46902669239394
                  {txt}e(F) =  {res}12.64348233371281
               {txt}e(df_a) =  {res}500
               {txt}e(r2_w) =  {res}.0646723370903276
               {txt}e(df_b) =  {res}14
                  {txt}e(N) =  {res}3075
                {txt}e(tss) =  {res}30.87120303202365
               {txt}e(ll_0) =  {res}4791.684334947507
                 {txt}e(ll) =  {res}4894.479078006321
               {txt}e(r2_a) =  {res}-.1231239202282551
                {txt}e(mss) =  {res}.5159315029605986
               {txt}e(rmse) =  {res}.0539881756956557
                 {txt}e(r2) =  {res}.0646723370903276
               {txt}e(df_r) =  {res}2560
               {txt}e(df_m) =  {res}514
                {txt}e(rss) =  {res}7.461691174259172
               {txt}e(rank) =  {res}15
                {txt}e(rho) =  {res}.7452807117230251
              {txt}e(sigma) =  {res}.1069714139285926
            {txt}e(sigma_e) =  {res}.0539881756956557
               {txt}e(r2_b) =  {res}.0060643622687798
               {txt}e(r2_o) =  {res}.0000374210621306
               {txt}e(corr) =  {res}-.3169258717737733
            {txt}e(sigma_u) =  {res}.0923480388689294
                 {txt}e(ui) =  {res}.0923480388689294
                {txt}e(N_g) =  {res}501
              {txt}e(g_max) =  {res}9
              {txt}e(g_avg) =  {res}6.137724550898204

{txt}macros:
    e(_estimates_name) : "{res}estprop_UKI{txt}"
            e(cmdline) : "{res}xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvenc{txt}.."
                e(cmd) : "{res}xtreg{txt}"
       e(marginsnotok) : "{res}E U UE SCore STDP XBU{txt}"
            e(predict) : "{res}xtrefe_p{txt}"
              e(model) : "{res}fe{txt}"
             e(depvar) : "{res}osrape_prop{txt}"
               e(ivar) : "{res}pid{txt}"
                e(vce) : "{res}conventional{txt}"
         e(properties) : "{res}b V{txt}"

matrices:
                  e(b) : {res} 1 x 17
                  {txt}e(V) : {res} 17 x 17

{txt}functions:
             e(sample)   

{com}. codebook adopter

{txt}{hline}
{res}adopter{right:(unlabeled)}
{txt}{hline}

{col 19}type:  numeric ({res}float{txt})

{col 18}range:  [{res}0{txt},{res}1{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}2{col 51}{txt}missing .:  {res}0{txt}/{res}78196

{txt}{col 13}tabulation:  Freq.  Value
{col 24}{res}  64580{col 33}0
{col 24}  13616{col 33}1

{com}. collapse adopter, by(pid)

. codebook adopter

{txt}{hline}
{res}adopter{right:(mean) adopter}
{txt}{hline}

{col 19}type:  numeric ({res}float{txt})

{col 18}range:  [{res}0{txt},{res}1{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}2{col 51}{txt}missing .:  {res}0{txt}/{res}10863

{txt}{col 13}tabulation:  Freq.  Value
{col 24}{res}   9080{col 33}0
{col 24}   1783{col 33}1

{com}. di 1783/10863
{res}.16413514

{com}. 1/7
{err}unrecognized command:  1 invalid command name
{txt}{search r(199):r(199);}

{com}. di 1/7
{res}.14285714

{com}. di 1/6
{res}.16666667

{com}. foreach value of local msvalue{c -(}
{txt}  2{com}. count if country == "`value'"
{txt}  3{com}. {c )-}
{err}country not found
{txt}{search r(111):r(111);}

{com}. clear

. master_lin
{err}unrecognized command:  master_lin
{txt}{search r(199):r(199);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}10 May 2012, 22:18:49
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*
> log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se) replace
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se in obs)
> 
> outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
> */
. levelsof country,local(msvalue)
{txt}`"DAN"' `"DEU"' `"ELL"' `"ESP"' `"FRA"' `"IRE"' `"ITA"' `"LUX"' `"NED"' `"OST"' `"POR"' `"SUO"' `"SVE"' `"UKI"'

{com}. foreach value of local msvalue {c -(}
{txt}  2{com}. count if country=="`value'"
{txt}  3{com}. *quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
. *estimates store estuaa_`value'
. *quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country =="`value'", fe
. *estimates store estprop_`value'
. {c )-}
{res} 2453
16370
10188
14556
16430
  592
 4137
  387
 1350
 3468
  971
 2031
 2188
 3075
{txt}
{com}. 
. stop!!!
{err}unrecognized command:  stop
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. {smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}11 May 2012, 12:46:29
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. /*
> log close
> capture mkdir logs/results
> local c_time = c(current_time)
> local c_date = c(current_date)
> local c_date_time = "`c_date'"+"_"+"`c_time'"
> local time_string = subinstr("`c_date_time'", ":", "_", .)
> local time_string = subinstr("`time_string'", " ", "_", .)
> log using logs/results/`time_string'.log
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se) replace
> 
> quietly xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
> 
> quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode, fe
> outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se in obs)
> 
> outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
> */
. STOP!!
{err}unrecognized command:  STOP
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. xtreg oilseedrapeuaa policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country == "DAN", fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}     2453
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}      423

{txt}R-sq:  within  = {res}0.1020                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0250                                        {txt}avg = {res}      5.8
{txt}       overall = {res}0.0535                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}2016{txt})         = {res}    16.36
{txt}corr(u_i, Xb)  = {res}-0.1097                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}oilseedrap~a{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}policy {c |}{col 14}{res}{space 2} 33.56917{col 26}{space 2} 9.614177{col 37}{space 1}    3.49{col 46}{space 3}0.000{col 54}{space 4} 14.71441{col 67}{space 3} 52.42393
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} 1.751871{col 26}{space 2} .7038433{col 37}{space 1}    2.49{col 46}{space 3}0.013{col 54}{space 4} .3715345{col 67}{space 3} 3.132207
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.2741165{col 26}{space 2} .0402107{col 37}{space 1}   -6.82{col 46}{space 3}0.000{col 54}{space 4}-.3529753{col 67}{space 3}-.1952576
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} 3.080747{col 26}{space 2} 1.071125{col 37}{space 1}    2.88{col 46}{space 3}0.004{col 54}{space 4} .9801192{col 67}{space 3} 5.181376
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2} .0199765{col 26}{space 2} .0572009{col 37}{space 1}    0.35{col 46}{space 3}0.727{col 54}{space 4}-.0922026{col 67}{space 3} .1321555
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} 3.047233{col 26}{space 2} 2.410448{col 37}{space 1}    1.26{col 46}{space 3}0.206{col 54}{space 4}-1.679997{col 67}{space 3} 7.774463
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-6.988964{col 26}{space 2} 6.480842{col 37}{space 1}   -1.08{col 46}{space 3}0.281{col 54}{space 4}-19.69881{col 67}{space 3} 5.720883
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-4.859296{col 26}{space 2} .9977981{col 37}{space 1}   -4.87{col 46}{space 3}0.000{col 54}{space 4} -6.81612{col 67}{space 3}-2.902473
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-6.035437{col 26}{space 2} .9521087{col 37}{space 1}   -6.34{col 46}{space 3}0.000{col 54}{space 4}-7.902657{col 67}{space 3}-4.168217
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-4.714218{col 26}{space 2}  .952115{col 37}{space 1}   -4.95{col 46}{space 3}0.000{col 54}{space 4} -6.58145{col 67}{space 3}-2.846985
{txt}{space 7}2003  {c |}{col 14}{res}{space 2} -2.43974{col 26}{space 2} .9578163{col 37}{space 1}   -2.55{col 46}{space 3}0.011{col 54}{space 4}-4.318153{col 67}{space 3}-.5613265
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-34.00151{col 26}{space 2} 9.591424{col 37}{space 1}   -3.54{col 46}{space 3}0.000{col 54}{space 4}-52.81165{col 67}{space 3}-15.19138
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-35.78802{col 26}{space 2} 9.592142{col 37}{space 1}   -3.73{col 46}{space 3}0.000{col 54}{space 4}-54.59956{col 67}{space 3}-16.97647
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}-32.96456{col 26}{space 2} 9.596679{col 37}{space 1}   -3.43{col 46}{space 3}0.001{col 54}{space 4}  -51.785{col 67}{space 3}-14.14411
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-26.14799{col 26}{space 2} 8.370944{col 37}{space 1}   -3.12{col 46}{space 3}0.002{col 54}{space 4}-42.56459{col 67}{space 3}-9.731383
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 12.820904
{txt}     sigma_e {c |} {res} 9.0088077
{txt}         rho {c |} {res} .66946106{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}422{txt}, {res}2016{txt}) = {res}    8.94           {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country == "DAN", fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}     2453
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}      423

{txt}R-sq:  within  = {res}0.0618                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0085                                        {txt}avg = {res}      5.8
{txt}       overall = {res}0.0321                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}2016{txt})         = {res}     9.48
{txt}corr(u_i, Xb)  = {res}-0.0549                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}policy {c |}{col 14}{res}{space 2} .1168983{col 26}{space 2} .0579658{col 37}{space 1}    2.02{col 46}{space 3}0.044{col 54}{space 4} .0032192{col 67}{space 3} .2305774
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .0014476{col 26}{space 2} .0042436{col 37}{space 1}    0.34{col 46}{space 3}0.733{col 54}{space 4}-.0068747{col 67}{space 3}   .00977
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0010404{col 26}{space 2} .0002424{col 37}{space 1}   -4.29{col 46}{space 3}0.000{col 54}{space 4}-.0015159{col 67}{space 3} -.000565
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .0041923{col 26}{space 2}  .006458{col 37}{space 1}    0.65{col 46}{space 3}0.516{col 54}{space 4}-.0084728{col 67}{space 3} .0168574
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2} .0000381{col 26}{space 2} .0003449{col 37}{space 1}    0.11{col 46}{space 3}0.912{col 54}{space 4}-.0006383{col 67}{space 3} .0007144
{txt}{space 4}solvency {c |}{col 14}{res}{space 2}-.0196767{col 26}{space 2} .0145331{col 37}{space 1}   -1.35{col 46}{space 3}0.176{col 54}{space 4}-.0481781{col 67}{space 3} .0088247
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0459316{col 26}{space 2} .0390743{col 37}{space 1}   -1.18{col 46}{space 3}0.240{col 54}{space 4}-.1225618{col 67}{space 3} .0306986
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0348133{col 26}{space 2} .0060159{col 37}{space 1}   -5.79{col 46}{space 3}0.000{col 54}{space 4}-.0466114{col 67}{space 3}-.0230152
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0404213{col 26}{space 2} .0057405{col 37}{space 1}   -7.04{col 46}{space 3}0.000{col 54}{space 4}-.0516791{col 67}{space 3}-.0291634
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0436981{col 26}{space 2} .0057405{col 37}{space 1}   -7.61{col 46}{space 3}0.000{col 54}{space 4} -.054956{col 67}{space 3}-.0324402
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0317439{col 26}{space 2} .0057749{col 37}{space 1}   -5.50{col 46}{space 3}0.000{col 54}{space 4}-.0430692{col 67}{space 3}-.0204186
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.1386466{col 26}{space 2} .0578286{col 37}{space 1}   -2.40{col 46}{space 3}0.017{col 54}{space 4}-.2520567{col 67}{space 3}-.0252365
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.1485165{col 26}{space 2} .0578329{col 37}{space 1}   -2.57{col 46}{space 3}0.010{col 54}{space 4}-.2619351{col 67}{space 3} -.035098
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}-.1376156{col 26}{space 2} .0578603{col 37}{space 1}   -2.38{col 46}{space 3}0.017{col 54}{space 4}-.2510878{col 67}{space 3}-.0241434
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .0697183{col 26}{space 2} .0504701{col 37}{space 1}    1.38{col 46}{space 3}0.167{col 54}{space 4}-.0292606{col 67}{space 3} .1686973
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .05528208
{txt}     sigma_e {c |} {res} .05431589
{txt}         rho {c |} {res} .50881503{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}422{txt}, {res}2016{txt}) = {res}    5.76           {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country == "DEU", fe
{txt}note: 2006.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    16370
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}     2414

{txt}R-sq:  within  = {res}0.0451                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0000                                        {txt}avg = {res}      6.8
{txt}       overall = {res}0.0034                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}13942{txt})        = {res}    47.04
{txt}corr(u_i, Xb)  = {res}-0.1460                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}policy {c |}{col 14}{res}{space 2} .0154831{col 26}{space 2} .0019223{col 37}{space 1}    8.05{col 46}{space 3}0.000{col 54}{space 4} .0117152{col 67}{space 3}  .019251
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .0047437{col 26}{space 2}  .001541{col 37}{space 1}    3.08{col 46}{space 3}0.002{col 54}{space 4}  .001723{col 67}{space 3} .0077643
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}  -.00037{col 26}{space 2} .0000347{col 37}{space 1}  -10.67{col 46}{space 3}0.000{col 54}{space 4} -.000438{col 67}{space 3}-.0003021
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0076844{col 26}{space 2} .0025173{col 37}{space 1}   -3.05{col 46}{space 3}0.002{col 54}{space 4}-.0126188{col 67}{space 3}-.0027501
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2} .0001163{col 26}{space 2} .0001374{col 37}{space 1}    0.85{col 46}{space 3}0.397{col 54}{space 4}-.0001531{col 67}{space 3} .0003857
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} .0067236{col 26}{space 2} .0024452{col 37}{space 1}    2.75{col 46}{space 3}0.006{col 54}{space 4} .0019308{col 67}{space 3} .0115165
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0261555{col 26}{space 2} .0130915{col 37}{space 1}   -2.00{col 46}{space 3}0.046{col 54}{space 4}-.0518167{col 67}{space 3}-.0004944
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0177243{col 26}{space 2}  .001941{col 37}{space 1}   -9.13{col 46}{space 3}0.000{col 54}{space 4}-.0215289{col 67}{space 3}-.0139196
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0177681{col 26}{space 2} .0019116{col 37}{space 1}   -9.30{col 46}{space 3}0.000{col 54}{space 4}-.0215151{col 67}{space 3}-.0140212
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0070866{col 26}{space 2} .0019038{col 37}{space 1}   -3.72{col 46}{space 3}0.000{col 54}{space 4}-.0108184{col 67}{space 3}-.0033549
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0075246{col 26}{space 2} .0019065{col 37}{space 1}   -3.95{col 46}{space 3}0.000{col 54}{space 4}-.0112616{col 67}{space 3}-.0037876
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0202533{col 26}{space 2}  .001707{col 37}{space 1}  -11.86{col 46}{space 3}0.000{col 54}{space 4}-.0235993{col 67}{space 3}-.0169073
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0183885{col 26}{space 2}  .001683{col 37}{space 1}  -10.93{col 46}{space 3}0.000{col 54}{space 4}-.0216874{col 67}{space 3}-.0150896
{txt}{space 7}2006  {c |}{col 14}{res}  (omitted)
{txt}{space 7}2007  {c |}{col 14}{res}{space 2}-.0195806{col 26}{space 2} .0017467{col 37}{space 1}  -11.21{col 46}{space 3}0.000{col 54}{space 4}-.0230045{col 67}{space 3}-.0161568
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .1466751{col 26}{space 2} .0240339{col 37}{space 1}    6.10{col 46}{space 3}0.000{col 54}{space 4} .0995654{col 67}{space 3} .1937847
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res}  .0922865
{txt}     sigma_e {c |} {res}  .0514877
{txt}         rho {c |} {res} .76262221{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}2413{txt}, {res}13942{txt}) = {res}   19.92         {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country == "FRA", fe
{txt}note: 2006.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    16426
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}     2107

{txt}R-sq:  within  = {res}0.0704                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0110                                        {txt}avg = {res}      7.8
{txt}       overall = {res}0.0001                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}14305{txt})        = {res}    77.34
{txt}corr(u_i, Xb)  = {res}-0.1910                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}policy {c |}{col 14}{res}{space 2} -.014231{col 26}{space 2} .0019769{col 37}{space 1}   -7.20{col 46}{space 3}0.000{col 54}{space 4}-.0181061{col 67}{space 3} -.010356
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .0095623{col 26}{space 2} .0016384{col 37}{space 1}    5.84{col 46}{space 3}0.000{col 54}{space 4} .0063509{col 67}{space 3} .0127738
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0019335{col 26}{space 2}  .000112{col 37}{space 1}  -17.26{col 46}{space 3}0.000{col 54}{space 4}-.0021531{col 67}{space 3} -.001714
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0075549{col 26}{space 2} .0023227{col 37}{space 1}   -3.25{col 46}{space 3}0.001{col 54}{space 4}-.0121077{col 67}{space 3} -.003002
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0001609{col 26}{space 2} .0001848{col 37}{space 1}   -0.87{col 46}{space 3}0.384{col 54}{space 4}-.0005231{col 67}{space 3} .0002014
{txt}{space 4}solvency {c |}{col 14}{res}{space 2}-.0076282{col 26}{space 2}  .003461{col 37}{space 1}   -2.20{col 46}{space 3}0.028{col 54}{space 4}-.0144123{col 67}{space 3}-.0008441
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0359335{col 26}{space 2} .0159002{col 37}{space 1}   -2.26{col 46}{space 3}0.024{col 54}{space 4}   -.0671{col 67}{space 3} -.004767
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2} -.013577{col 26}{space 2} .0018158{col 37}{space 1}   -7.48{col 46}{space 3}0.000{col 54}{space 4}-.0171362{col 67}{space 3}-.0100177
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0180545{col 26}{space 2} .0018007{col 37}{space 1}  -10.03{col 46}{space 3}0.000{col 54}{space 4}-.0215841{col 67}{space 3}-.0145249
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0365201{col 26}{space 2} .0019092{col 37}{space 1}  -19.13{col 46}{space 3}0.000{col 54}{space 4}-.0402624{col 67}{space 3}-.0327777
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0286481{col 26}{space 2} .0019032{col 37}{space 1}  -15.05{col 46}{space 3}0.000{col 54}{space 4}-.0323786{col 67}{space 3}-.0249177
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0190566{col 26}{space 2}  .001656{col 37}{space 1}  -11.51{col 46}{space 3}0.000{col 54}{space 4}-.0223027{col 67}{space 3}-.0158106
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0084206{col 26}{space 2} .0016499{col 37}{space 1}   -5.10{col 46}{space 3}0.000{col 54}{space 4}-.0116546{col 67}{space 3}-.0051866
{txt}{space 7}2006  {c |}{col 14}{res}  (omitted)
{txt}{space 7}2007  {c |}{col 14}{res}{space 2} .0079241{col 26}{space 2} .0017776{col 37}{space 1}    4.46{col 46}{space 3}0.000{col 54}{space 4} .0044397{col 67}{space 3} .0114085
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .1437462{col 26}{space 2} .0226406{col 37}{space 1}    6.35{col 46}{space 3}0.000{col 54}{space 4} .0993676{col 67}{space 3} .1881247
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .11294918
{txt}     sigma_e {c |} {res} .05059159
{txt}         rho {c |} {res} .83289781{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}2106{txt}, {res}14305{txt}) = {res}   35.93         {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country == "OST", fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}     3468
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}      447

{txt}R-sq:  within  = {res}0.0353                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0087                                        {txt}avg = {res}      7.8
{txt}       overall = {res}0.0001                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}3007{txt})         = {res}     7.86
{txt}corr(u_i, Xb)  = {res}-0.1528                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}policy {c |}{col 14}{res}{space 2}-.0188769{col 26}{space 2} .0041971{col 37}{space 1}   -4.50{col 46}{space 3}0.000{col 54}{space 4}-.0271064{col 67}{space 3}-.0106475
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .0049595{col 26}{space 2} .0027565{col 37}{space 1}    1.80{col 46}{space 3}0.072{col 54}{space 4}-.0004453{col 67}{space 3} .0103643
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0030885{col 26}{space 2} .0005125{col 37}{space 1}   -6.03{col 46}{space 3}0.000{col 54}{space 4}-.0040934{col 67}{space 3}-.0020836
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0060693{col 26}{space 2} .0045991{col 37}{space 1}   -1.32{col 46}{space 3}0.187{col 54}{space 4}-.0150869{col 67}{space 3} .0029483
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2} .0006438{col 26}{space 2}  .000575{col 37}{space 1}    1.12{col 46}{space 3}0.263{col 54}{space 4}-.0004836{col 67}{space 3} .0017712
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} .0140525{col 26}{space 2}   .01015{col 37}{space 1}    1.38{col 46}{space 3}0.166{col 54}{space 4}-.0058491{col 67}{space 3}  .033954
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0391953{col 26}{space 2} .0350651{col 37}{space 1}   -1.12{col 46}{space 3}0.264{col 54}{space 4}-.1079494{col 67}{space 3} .0295588
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0186864{col 26}{space 2} .0039522{col 37}{space 1}   -4.73{col 46}{space 3}0.000{col 54}{space 4}-.0264357{col 67}{space 3} -.010937
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0162738{col 26}{space 2} .0038897{col 37}{space 1}   -4.18{col 46}{space 3}0.000{col 54}{space 4}-.0239005{col 67}{space 3}-.0086471
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0146036{col 26}{space 2} .0039542{col 37}{space 1}   -3.69{col 46}{space 3}0.000{col 54}{space 4}-.0223569{col 67}{space 3}-.0068503
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0192115{col 26}{space 2} .0041078{col 37}{space 1}   -4.68{col 46}{space 3}0.000{col 54}{space 4}-.0272658{col 67}{space 3}-.0111572
{txt}{space 7}2004  {c |}{col 14}{res}{space 2} -.002952{col 26}{space 2} .0038698{col 37}{space 1}   -0.76{col 46}{space 3}0.446{col 54}{space 4}-.0105397{col 67}{space 3} .0046356
{txt}{space 7}2005  {c |}{col 14}{res}{space 2} .0031091{col 26}{space 2} .0038553{col 37}{space 1}    0.81{col 46}{space 3}0.420{col 54}{space 4}-.0044502{col 67}{space 3} .0106683
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} .0187087{col 26}{space 2} .0038759{col 37}{space 1}    4.83{col 46}{space 3}0.000{col 54}{space 4} .0111091{col 67}{space 3} .0263083
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .1378627{col 26}{space 2} .0386413{col 37}{space 1}    3.57{col 46}{space 3}0.000{col 54}{space 4} .0620966{col 67}{space 3} .2136288
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .08196607
{txt}     sigma_e {c |} {res} .05270628
{txt}         rho {c |} {res}  .7074728{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}446{txt}, {res}3007{txt}) = {res}   18.18           {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country == "SUO", fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}     2031
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}      260

{txt}R-sq:  within  = {res}0.0228                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0010                                        {txt}avg = {res}      7.8
{txt}       overall = {res}0.0018                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}1757{txt})         = {res}     2.92
{txt}corr(u_i, Xb)  = {res}-0.1870                        {txt}Prob > F           =    {res}0.0002

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}policy {c |}{col 14}{res}{space 2}-.0002539{col 26}{space 2} .0086098{col 37}{space 1}   -0.03{col 46}{space 3}0.976{col 54}{space 4}-.0171404{col 67}{space 3} .0166327
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .0008234{col 26}{space 2} .0051288{col 37}{space 1}    0.16{col 46}{space 3}0.872{col 54}{space 4}-.0092358{col 67}{space 3} .0108825
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0011323{col 26}{space 2} .0005215{col 37}{space 1}   -2.17{col 46}{space 3}0.030{col 54}{space 4}-.0021551{col 67}{space 3}-.0001094
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0170179{col 26}{space 2} .0075455{col 37}{space 1}   -2.26{col 46}{space 3}0.024{col 54}{space 4} -.031817{col 67}{space 3}-.0022189
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2} .0006252{col 26}{space 2} .0007263{col 37}{space 1}    0.86{col 46}{space 3}0.390{col 54}{space 4}-.0007994{col 67}{space 3} .0020498
{txt}{space 4}solvency {c |}{col 14}{res}{space 2}-.0047862{col 26}{space 2} .0179585{col 37}{space 1}   -0.27{col 46}{space 3}0.790{col 54}{space 4}-.0400085{col 67}{space 3} .0304361
{txt}{space 3}intensity {c |}{col 14}{res}{space 2} .0249405{col 26}{space 2} .0461227{col 37}{space 1}    0.54{col 46}{space 3}0.589{col 54}{space 4}-.0655206{col 67}{space 3} .1154017
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0050719{col 26}{space 2}  .008186{col 37}{space 1}   -0.62{col 46}{space 3}0.536{col 54}{space 4}-.0211271{col 67}{space 3} .0109834
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0063812{col 26}{space 2} .0081942{col 37}{space 1}   -0.78{col 46}{space 3}0.436{col 54}{space 4}-.0224525{col 67}{space 3} .0096902
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0099503{col 26}{space 2} .0080132{col 37}{space 1}   -1.24{col 46}{space 3}0.214{col 54}{space 4}-.0256666{col 67}{space 3} .0057661
{txt}{space 7}2003  {c |}{col 14}{res}{space 2} .0019863{col 26}{space 2} .0080046{col 37}{space 1}    0.25{col 46}{space 3}0.804{col 54}{space 4}-.0137133{col 67}{space 3} .0176859
{txt}{space 7}2004  {c |}{col 14}{res}{space 2} .0072831{col 26}{space 2} .0076966{col 37}{space 1}    0.95{col 46}{space 3}0.344{col 54}{space 4}-.0078124{col 67}{space 3} .0223786
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}  .009471{col 26}{space 2} .0077578{col 37}{space 1}    1.22{col 46}{space 3}0.222{col 54}{space 4}-.0057445{col 67}{space 3} .0246865
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} .0191169{col 26}{space 2} .0077753{col 37}{space 1}    2.46{col 46}{space 3}0.014{col 54}{space 4} .0038672{col 67}{space 3} .0343666
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .1807343{col 26}{space 2} .0609098{col 37}{space 1}    2.97{col 46}{space 3}0.003{col 54}{space 4} .0612709{col 67}{space 3} .3001976
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .07277018
{txt}     sigma_e {c |} {res} .08009257
{txt}         rho {c |} {res} .45220798{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}259{txt}, {res}1757{txt}) = {res}    5.94           {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country == "ELL", fe
{txt}note: 2006.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    10187
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}     1402

{txt}R-sq:  within  = {res}0.0235                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0605                                        {txt}avg = {res}      7.3
{txt}       overall = {res}0.0004                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}8771{txt})         = {res}    15.08
{txt}corr(u_i, Xb)  = {res}-0.2876                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}policy {c |}{col 14}{res}{space 2}-.0105549{col 26}{space 2}  .001945{col 37}{space 1}   -5.43{col 46}{space 3}0.000{col 54}{space 4}-.0143677{col 67}{space 3}-.0067422
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .0003374{col 26}{space 2} .0007385{col 37}{space 1}    0.46{col 46}{space 3}0.648{col 54}{space 4}-.0011102{col 67}{space 3}  .001785
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0021867{col 26}{space 2} .0002833{col 37}{space 1}   -7.72{col 46}{space 3}0.000{col 54}{space 4}-.0027419{col 67}{space 3}-.0016314
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0025759{col 26}{space 2} .0017361{col 37}{space 1}   -1.48{col 46}{space 3}0.138{col 54}{space 4} -.005979{col 67}{space 3} .0008273
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0004643{col 26}{space 2} .0002504{col 37}{space 1}   -1.85{col 46}{space 3}0.064{col 54}{space 4} -.000955{col 67}{space 3} .0000265
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} .0225453{col 26}{space 2}   .00958{col 37}{space 1}    2.35{col 46}{space 3}0.019{col 54}{space 4} .0037662{col 67}{space 3} .0413245
{txt}{space 3}intensity {c |}{col 14}{res}{space 2} .0815998{col 26}{space 2} .0209325{col 37}{space 1}    3.90{col 46}{space 3}0.000{col 54}{space 4} .0405671{col 67}{space 3} .1226325
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0036578{col 26}{space 2} .0019203{col 37}{space 1}   -1.90{col 46}{space 3}0.057{col 54}{space 4}-.0074221{col 67}{space 3} .0001065
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0084968{col 26}{space 2}  .001858{col 37}{space 1}   -4.57{col 46}{space 3}0.000{col 54}{space 4}-.0121389{col 67}{space 3}-.0048548
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0066032{col 26}{space 2} .0018351{col 37}{space 1}   -3.60{col 46}{space 3}0.000{col 54}{space 4}-.0102005{col 67}{space 3}-.0030059
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0122783{col 26}{space 2} .0018304{col 37}{space 1}   -6.71{col 46}{space 3}0.000{col 54}{space 4}-.0158663{col 67}{space 3}-.0086904
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0035178{col 26}{space 2} .0017508{col 37}{space 1}   -2.01{col 46}{space 3}0.045{col 54}{space 4}-.0069498{col 67}{space 3}-.0000857
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0034308{col 26}{space 2} .0017507{col 37}{space 1}   -1.96{col 46}{space 3}0.050{col 54}{space 4}-.0068626{col 67}{space 3} 9.22e-07
{txt}{space 7}2006  {c |}{col 14}{res}  (omitted)
{txt}{space 7}2007  {c |}{col 14}{res}{space 2} .0019357{col 26}{space 2} .0019218{col 37}{space 1}    1.01{col 46}{space 3}0.314{col 54}{space 4}-.0018315{col 67}{space 3} .0057029
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .0375148{col 26}{space 2} .0125308{col 37}{space 1}    2.99{col 46}{space 3}0.003{col 54}{space 4} .0129515{col 67}{space 3} .0620782
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .03103713
{txt}     sigma_e {c |} {res} .04121374
{txt}         rho {c |} {res} .36188902{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}1401{txt}, {res}8771{txt}) = {res}    3.54          {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country == "IRE", fe
{txt}note: 2006.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}      592
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}       79

{txt}R-sq:  within  = {res}0.0258                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0083                                        {txt}avg = {res}      7.5
{txt}       overall = {res}0.0202                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}499{txt})          = {res}     0.95
{txt}corr(u_i, Xb)  = {res}-0.0343                        {txt}Prob > F           =    {res}0.5092

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}policy {c |}{col 14}{res}{space 2}-.0032491{col 26}{space 2} .0063261{col 37}{space 1}   -0.51{col 46}{space 3}0.608{col 54}{space 4}-.0156781{col 67}{space 3}   .00918
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0009695{col 26}{space 2} .0042386{col 37}{space 1}   -0.23{col 46}{space 3}0.819{col 54}{space 4}-.0092972{col 67}{space 3} .0073583
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2} .0003623{col 26}{space 2} .0004604{col 37}{space 1}    0.79{col 46}{space 3}0.432{col 54}{space 4}-.0005423{col 67}{space 3} .0012669
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0001916{col 26}{space 2} .0044425{col 37}{space 1}   -0.04{col 46}{space 3}0.966{col 54}{space 4}-.0089198{col 67}{space 3} .0085367
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0006823{col 26}{space 2} .0008553{col 37}{space 1}   -0.80{col 46}{space 3}0.425{col 54}{space 4}-.0023627{col 67}{space 3} .0009981
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} .0217494{col 26}{space 2} .0447562{col 37}{space 1}    0.49{col 46}{space 3}0.627{col 54}{space 4}-.0661844{col 67}{space 3} .1096832
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0170413{col 26}{space 2} .0496135{col 37}{space 1}   -0.34{col 46}{space 3}0.731{col 54}{space 4}-.1145184{col 67}{space 3} .0804359
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0038969{col 26}{space 2} .0064926{col 37}{space 1}   -0.60{col 46}{space 3}0.549{col 54}{space 4}-.0166531{col 67}{space 3} .0088593
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0115855{col 26}{space 2} .0063553{col 37}{space 1}   -1.82{col 46}{space 3}0.069{col 54}{space 4} -.024072{col 67}{space 3}  .000901
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0104279{col 26}{space 2} .0061416{col 37}{space 1}   -1.70{col 46}{space 3}0.090{col 54}{space 4}-.0224945{col 67}{space 3} .0016387
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0089173{col 26}{space 2} .0061952{col 37}{space 1}   -1.44{col 46}{space 3}0.151{col 54}{space 4}-.0210891{col 67}{space 3} .0032545
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0079284{col 26}{space 2} .0055241{col 37}{space 1}   -1.44{col 46}{space 3}0.152{col 54}{space 4}-.0187817{col 67}{space 3} .0029249
{txt}{space 7}2005  {c |}{col 14}{res}{space 2} .0034176{col 26}{space 2} .0053615{col 37}{space 1}    0.64{col 46}{space 3}0.524{col 54}{space 4}-.0071162{col 67}{space 3} .0139515
{txt}{space 7}2006  {c |}{col 14}{res}  (omitted)
{txt}{space 7}2007  {c |}{col 14}{res}{space 2}  .002566{col 26}{space 2} .0056448{col 37}{space 1}    0.45{col 46}{space 3}0.650{col 54}{space 4}-.0085244{col 67}{space 3} .0136565
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .0265296{col 26}{space 2} .0448203{col 37}{space 1}    0.59{col 46}{space 3}0.554{col 54}{space 4}-.0615301{col 67}{space 3} .1145894
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .01820705
{txt}     sigma_e {c |} {res} .03150196
{txt}         rho {c |} {res}  .2503998{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}78{txt}, {res}499{txt}) = {res}    2.60             {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country == "ITA", fe
{txt}note: 2004.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}     4137
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}      725

{txt}R-sq:  within  = {res}0.0393                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0003                                        {txt}avg = {res}      5.7
{txt}       overall = {res}0.0073                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}3398{txt})         = {res}     9.94
{txt}corr(u_i, Xb)  = {res}-0.1325                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}policy {c |}{col 14}{res}{space 2}-.0389831{col 26}{space 2} .0060632{col 37}{space 1}   -6.43{col 46}{space 3}0.000{col 54}{space 4} -.050871{col 67}{space 3}-.0270951
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0098119{col 26}{space 2} .0023153{col 37}{space 1}   -4.24{col 46}{space 3}0.000{col 54}{space 4}-.0143513{col 67}{space 3}-.0052724
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2} 7.28e-06{col 26}{space 2}  .000211{col 37}{space 1}    0.03{col 46}{space 3}0.972{col 54}{space 4}-.0004064{col 67}{space 3} .0004209
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .0028066{col 26}{space 2} .0044913{col 37}{space 1}    0.62{col 46}{space 3}0.532{col 54}{space 4}-.0059992{col 67}{space 3} .0116125
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2} -.000052{col 26}{space 2} .0005896{col 37}{space 1}   -0.09{col 46}{space 3}0.930{col 54}{space 4} -.001208{col 67}{space 3}  .001104
{txt}{space 4}solvency {c |}{col 14}{res}{space 2}-.0085743{col 26}{space 2} .0076837{col 37}{space 1}   -1.12{col 46}{space 3}0.265{col 54}{space 4}-.0236393{col 67}{space 3} .0064908
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0250517{col 26}{space 2} .0488488{col 37}{space 1}   -0.51{col 46}{space 3}0.608{col 54}{space 4}-.1208277{col 67}{space 3} .0707242
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0181489{col 26}{space 2} .0061707{col 37}{space 1}   -2.94{col 46}{space 3}0.003{col 54}{space 4}-.0302476{col 67}{space 3}-.0060502
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0097589{col 26}{space 2} .0058575{col 37}{space 1}   -1.67{col 46}{space 3}0.096{col 54}{space 4}-.0212436{col 67}{space 3} .0017257
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0414023{col 26}{space 2} .0056868{col 37}{space 1}   -7.28{col 46}{space 3}0.000{col 54}{space 4}-.0525522{col 67}{space 3}-.0302525
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0408852{col 26}{space 2} .0067938{col 37}{space 1}   -6.02{col 46}{space 3}0.000{col 54}{space 4}-.0542056{col 67}{space 3}-.0275649
{txt}{space 7}2004  {c |}{col 14}{res}  (omitted)
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0009943{col 26}{space 2} .0052418{col 37}{space 1}   -0.19{col 46}{space 3}0.850{col 54}{space 4}-.0112717{col 67}{space 3}  .009283
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} .0067128{col 26}{space 2} .0053128{col 37}{space 1}    1.26{col 46}{space 3}0.206{col 54}{space 4}-.0037039{col 67}{space 3} .0171295
{txt}{space 7}2007  {c |}{col 14}{res}{space 2}-.0093419{col 26}{space 2} .0055538{col 37}{space 1}   -1.68{col 46}{space 3}0.093{col 54}{space 4}-.0202311{col 67}{space 3} .0015473
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .1239446{col 26}{space 2}  .036966{col 37}{space 1}    3.35{col 46}{space 3}0.001{col 54}{space 4} .0514669{col 67}{space 3} .1964224
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .08320141
{txt}     sigma_e {c |} {res} .08071474
{txt}         rho {c |} {res} .51516688{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}724{txt}, {res}3398{txt}) = {res}    5.87           {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country == "LUX", fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}      387
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}       57

{txt}R-sq:  within  = {res}0.0913                         {txt}Obs per group: min = {res}        4
{txt}       between = {res}0.0487                                        {txt}avg = {res}      6.8
{txt}       overall = {res}0.0031                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}316{txt})          = {res}     2.27
{txt}corr(u_i, Xb)  = {res}-0.1915                        {txt}Prob > F           =    {res}0.0059

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}policy {c |}{col 14}{res}{space 2} .0213373{col 26}{space 2} .0150094{col 37}{space 1}    1.42{col 46}{space 3}0.156{col 54}{space 4}-.0081937{col 67}{space 3} .0508684
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0118348{col 26}{space 2} .0101511{col 37}{space 1}   -1.17{col 46}{space 3}0.245{col 54}{space 4}-.0318071{col 67}{space 3} .0081374
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0001863{col 26}{space 2} .0018012{col 37}{space 1}   -0.10{col 46}{space 3}0.918{col 54}{space 4}-.0037301{col 67}{space 3} .0033575
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .0163149{col 26}{space 2} .0184793{col 37}{space 1}    0.88{col 46}{space 3}0.378{col 54}{space 4} -.020043{col 67}{space 3} .0526728
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0016273{col 26}{space 2} .0011041{col 37}{space 1}   -1.47{col 46}{space 3}0.142{col 54}{space 4}-.0037996{col 67}{space 3}  .000545
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} .0033864{col 26}{space 2} .0363041{col 37}{space 1}    0.09{col 46}{space 3}0.926{col 54}{space 4} -.068042{col 67}{space 3} .0748147
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.1061701{col 26}{space 2} .1302657{col 37}{space 1}   -0.82{col 46}{space 3}0.416{col 54}{space 4}-.3624677{col 67}{space 3} .1501275
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0213476{col 26}{space 2} .0152322{col 37}{space 1}   -1.40{col 46}{space 3}0.162{col 54}{space 4} -.051317{col 67}{space 3} .0086218
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0182559{col 26}{space 2} .0146403{col 37}{space 1}   -1.25{col 46}{space 3}0.213{col 54}{space 4}-.0470607{col 67}{space 3}  .010549
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0272861{col 26}{space 2} .0141778{col 37}{space 1}   -1.92{col 46}{space 3}0.055{col 54}{space 4}-.0551808{col 67}{space 3} .0006087
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0250336{col 26}{space 2}  .014241{col 37}{space 1}   -1.76{col 46}{space 3}0.080{col 54}{space 4}-.0530528{col 67}{space 3} .0029857
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0211211{col 26}{space 2} .0117169{col 37}{space 1}   -1.80{col 46}{space 3}0.072{col 54}{space 4}-.0441741{col 67}{space 3} .0019318
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0333042{col 26}{space 2} .0123103{col 37}{space 1}   -2.71{col 46}{space 3}0.007{col 54}{space 4}-.0575247{col 67}{space 3}-.0090837
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}-.0231621{col 26}{space 2} .0124172{col 37}{space 1}   -1.87{col 46}{space 3}0.063{col 54}{space 4} -.047593{col 67}{space 3} .0012688
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .0746561{col 26}{space 2} .1659758{col 37}{space 1}    0.45{col 46}{space 3}0.653{col 54}{space 4}-.2519012{col 67}{space 3} .4012133
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .08081533
{txt}     sigma_e {c |} {res} .05567792
{txt}         rho {c |} {res} .67812453{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}56{txt}, {res}316{txt}) = {res}    9.93             {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country == "NED", fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}     1350
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}      181

{txt}R-sq:  within  = {res}0.0402                         {txt}Obs per group: min = {res}        3
{txt}       between = {res}0.0712                                        {txt}avg = {res}      7.5
{txt}       overall = {res}0.0006                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}1155{txt})         = {res}     3.46
{txt}corr(u_i, Xb)  = {res}-0.3640                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}policy {c |}{col 14}{res}{space 2}-.0005195{col 26}{space 2} .0011173{col 37}{space 1}   -0.46{col 46}{space 3}0.642{col 54}{space 4}-.0027118{col 67}{space 3} .0016727
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}  .000084{col 26}{space 2} .0007889{col 37}{space 1}    0.11{col 46}{space 3}0.915{col 54}{space 4}-.0014637{col 67}{space 3} .0016318
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0004168{col 26}{space 2} .0000848{col 37}{space 1}   -4.91{col 46}{space 3}0.000{col 54}{space 4}-.0005832{col 67}{space 3}-.0002504
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .0001168{col 26}{space 2}  .001268{col 37}{space 1}    0.09{col 46}{space 3}0.927{col 54}{space 4}-.0023711{col 67}{space 3} .0026048
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2} -.000084{col 26}{space 2} .0000673{col 37}{space 1}   -1.25{col 46}{space 3}0.212{col 54}{space 4}-.0002161{col 67}{space 3}  .000048
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} .0041291{col 26}{space 2} .0020924{col 37}{space 1}    1.97{col 46}{space 3}0.049{col 54}{space 4} .0000238{col 67}{space 3} .0082343
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0057491{col 26}{space 2} .0087272{col 37}{space 1}   -0.66{col 46}{space 3}0.510{col 54}{space 4}-.0228721{col 67}{space 3}  .011374
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}  .000074{col 26}{space 2} .0011147{col 37}{space 1}    0.07{col 46}{space 3}0.947{col 54}{space 4} -.002113{col 67}{space 3}  .002261
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0021347{col 26}{space 2} .0010656{col 37}{space 1}   -2.00{col 46}{space 3}0.045{col 54}{space 4}-.0042255{col 67}{space 3}-.0000439
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0019073{col 26}{space 2} .0010477{col 37}{space 1}   -1.82{col 46}{space 3}0.069{col 54}{space 4} -.003963{col 67}{space 3} .0001484
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0013927{col 26}{space 2} .0010477{col 37}{space 1}   -1.33{col 46}{space 3}0.184{col 54}{space 4}-.0034483{col 67}{space 3} .0006628
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0003524{col 26}{space 2}  .000965{col 37}{space 1}   -0.37{col 46}{space 3}0.715{col 54}{space 4}-.0022457{col 67}{space 3} .0015409
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0002053{col 26}{space 2} .0009616{col 37}{space 1}   -0.21{col 46}{space 3}0.831{col 54}{space 4}-.0020921{col 67}{space 3} .0016815
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}-.0010834{col 26}{space 2} .0009197{col 37}{space 1}   -1.18{col 46}{space 3}0.239{col 54}{space 4}-.0028878{col 67}{space 3} .0007211
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .0012376{col 26}{space 2} .0113786{col 37}{space 1}    0.11{col 46}{space 3}0.913{col 54}{space 4}-.0210874{col 67}{space 3} .0235625
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .00685181
{txt}     sigma_e {c |} {res} .00804644
{txt}         rho {c |} {res} .42032646{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}180{txt}, {res}1155{txt}) = {res}    4.45           {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country == "POR", fe
{txt}note: 2005.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}      971
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}      145

{txt}R-sq:  within  = {res}0.0463                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0141                                        {txt}avg = {res}      6.7
{txt}       overall = {res}0.0207                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}812{txt})          = {res}     2.82
{txt}corr(u_i, Xb)  = {res}-0.1353                        {txt}Prob > F           =    {res}0.0004

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}policy {c |}{col 14}{res}{space 2}-.0115522{col 26}{space 2} .0063324{col 37}{space 1}   -1.82{col 46}{space 3}0.068{col 54}{space 4} -.023982{col 67}{space 3} .0008776
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .0060319{col 26}{space 2} .0019348{col 37}{space 1}    3.12{col 46}{space 3}0.002{col 54}{space 4} .0022341{col 67}{space 3} .0098298
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2} .0003924{col 26}{space 2} .0002153{col 37}{space 1}    1.82{col 46}{space 3}0.069{col 54}{space 4}-.0000302{col 67}{space 3}  .000815
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}  .000534{col 26}{space 2} .0051636{col 37}{space 1}    0.10{col 46}{space 3}0.918{col 54}{space 4}-.0096015{col 67}{space 3} .0106696
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2} .0003363{col 26}{space 2} .0005906{col 37}{space 1}    0.57{col 46}{space 3}0.569{col 54}{space 4}-.0008231{col 67}{space 3} .0014956
{txt}{space 4}solvency {c |}{col 14}{res}{space 2}-.0005855{col 26}{space 2} .0020933{col 37}{space 1}   -0.28{col 46}{space 3}0.780{col 54}{space 4}-.0046945{col 67}{space 3} .0035235
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0041019{col 26}{space 2}  .027113{col 37}{space 1}   -0.15{col 46}{space 3}0.880{col 54}{space 4}-.0573217{col 67}{space 3}  .049118
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}   .00311{col 26}{space 2} .0063074{col 37}{space 1}    0.49{col 46}{space 3}0.622{col 54}{space 4}-.0092708{col 67}{space 3} .0154908
{txt}{space 7}2001  {c |}{col 14}{res}{space 2} .0001976{col 26}{space 2} .0063467{col 37}{space 1}    0.03{col 46}{space 3}0.975{col 54}{space 4}-.0122603{col 67}{space 3} .0126554
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0056376{col 26}{space 2} .0062596{col 37}{space 1}   -0.90{col 46}{space 3}0.368{col 54}{space 4}-.0179246{col 67}{space 3} .0066493
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0020527{col 26}{space 2} .0063075{col 37}{space 1}   -0.33{col 46}{space 3}0.745{col 54}{space 4}-.0144336{col 67}{space 3} .0103282
{txt}{space 7}2004  {c |}{col 14}{res}{space 2} .0032646{col 26}{space 2} .0056418{col 37}{space 1}    0.58{col 46}{space 3}0.563{col 54}{space 4}-.0078096{col 67}{space 3} .0143389
{txt}{space 7}2005  {c |}{col 14}{res}  (omitted)
{txt}{space 7}2006  {c |}{col 14}{res}{space 2}-.0023158{col 26}{space 2}  .005846{col 37}{space 1}   -0.40{col 46}{space 3}0.692{col 54}{space 4}-.0137909{col 67}{space 3} .0091593
{txt}{space 7}2007  {c |}{col 14}{res}{space 2} .0056707{col 26}{space 2} .0061935{col 37}{space 1}    0.92{col 46}{space 3}0.360{col 54}{space 4}-.0064866{col 67}{space 3} .0178279
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-.0191931{col 26}{space 2}  .043163{col 37}{space 1}   -0.44{col 46}{space 3}0.657{col 54}{space 4}-.1039173{col 67}{space 3} .0655312
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .04689566
{txt}     sigma_e {c |} {res} .04193317
{txt}         rho {c |} {res} .55569202{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}144{txt}, {res}812{txt}) = {res}    8.69            {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country == "ESP", fe
{txt}note: 2006.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}    14556
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}     1844

{txt}R-sq:  within  = {res}0.0270                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0016                                        {txt}avg = {res}      7.9
{txt}       overall = {res}0.0081                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}12698{txt})        = {res}    25.13
{txt}corr(u_i, Xb)  = {res}-0.0765                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}policy {c |}{col 14}{res}{space 2}-.0308757{col 26}{space 2} .0024842{col 37}{space 1}  -12.43{col 46}{space 3}0.000{col 54}{space 4} -.035745{col 67}{space 3}-.0260063
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2}-.0085229{col 26}{space 2} .0010697{col 37}{space 1}   -7.97{col 46}{space 3}0.000{col 54}{space 4}-.0106197{col 67}{space 3} -.006426
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0000999{col 26}{space 2}  .000059{col 37}{space 1}   -1.69{col 46}{space 3}0.090{col 54}{space 4}-.0002155{col 67}{space 3} .0000157
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2} .0025307{col 26}{space 2} .0026789{col 37}{space 1}    0.94{col 46}{space 3}0.345{col 54}{space 4}-.0027204{col 67}{space 3} .0077819
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0011186{col 26}{space 2} .0003346{col 37}{space 1}   -3.34{col 46}{space 3}0.001{col 54}{space 4}-.0017745{col 67}{space 3}-.0004627
{txt}{space 4}solvency {c |}{col 14}{res}{space 2}-.0040757{col 26}{space 2} .0097067{col 37}{space 1}   -0.42{col 46}{space 3}0.675{col 54}{space 4}-.0231024{col 67}{space 3} .0149509
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0121504{col 26}{space 2} .0144156{col 37}{space 1}   -0.84{col 46}{space 3}0.399{col 54}{space 4}-.0404071{col 67}{space 3} .0161063
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0116198{col 26}{space 2} .0024374{col 37}{space 1}   -4.77{col 46}{space 3}0.000{col 54}{space 4}-.0163975{col 67}{space 3}-.0068421
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0085065{col 26}{space 2} .0024039{col 37}{space 1}   -3.54{col 46}{space 3}0.000{col 54}{space 4}-.0132185{col 67}{space 3}-.0037944
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0208805{col 26}{space 2} .0023985{col 37}{space 1}   -8.71{col 46}{space 3}0.000{col 54}{space 4}-.0255818{col 67}{space 3}-.0161791
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0223054{col 26}{space 2} .0023995{col 37}{space 1}   -9.30{col 46}{space 3}0.000{col 54}{space 4}-.0270087{col 67}{space 3} -.017602
{txt}{space 7}2004  {c |}{col 14}{res}{space 2} .0094366{col 26}{space 2} .0023552{col 37}{space 1}    4.01{col 46}{space 3}0.000{col 54}{space 4} .0048201{col 67}{space 3} .0140532
{txt}{space 7}2005  {c |}{col 14}{res}{space 2} .0028495{col 26}{space 2} .0023563{col 37}{space 1}    1.21{col 46}{space 3}0.227{col 54}{space 4}-.0017692{col 67}{space 3} .0074681
{txt}{space 7}2006  {c |}{col 14}{res}  (omitted)
{txt}{space 7}2007  {c |}{col 14}{res}{space 2} .0137372{col 26}{space 2}  .002597{col 37}{space 1}    5.29{col 46}{space 3}0.000{col 54}{space 4} .0086467{col 67}{space 3} .0188276
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .1024533{col 26}{space 2} .0209764{col 37}{space 1}    4.88{col 46}{space 3}0.000{col 54}{space 4} .0613365{col 67}{space 3} .1435701
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .07392156
{txt}     sigma_e {c |} {res} .06652717
{txt}         rho {c |} {res} .55250278{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}1843{txt}, {res}12698{txt}) = {res}    9.96         {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country == "SVE", fe
{txt}note: 2007.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}     2188
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}      278

{txt}R-sq:  within  = {res}0.0677                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0060                                        {txt}avg = {res}      7.9
{txt}       overall = {res}0.0210                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}1896{txt})         = {res}     9.83
{txt}corr(u_i, Xb)  = {res}-0.1060                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}policy {c |}{col 14}{res}{space 2} .0184043{col 26}{space 2} .0059805{col 37}{space 1}    3.08{col 46}{space 3}0.002{col 54}{space 4} .0066751{col 67}{space 3} .0301334
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .0075423{col 26}{space 2} .0034704{col 37}{space 1}    2.17{col 46}{space 3}0.030{col 54}{space 4} .0007361{col 67}{space 3} .0143485
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0001913{col 26}{space 2} .0001815{col 37}{space 1}   -1.05{col 46}{space 3}0.292{col 54}{space 4}-.0005472{col 67}{space 3} .0001646
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}  .002574{col 26}{space 2} .0050553{col 37}{space 1}    0.51{col 46}{space 3}0.611{col 54}{space 4}-.0073406{col 67}{space 3} .0124885
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2}-.0004042{col 26}{space 2} .0003734{col 37}{space 1}   -1.08{col 46}{space 3}0.279{col 54}{space 4}-.0011366{col 67}{space 3} .0003281
{txt}{space 4}solvency {c |}{col 14}{res}{space 2}-.0261659{col 26}{space 2} .0107848{col 37}{space 1}   -2.43{col 46}{space 3}0.015{col 54}{space 4}-.0473172{col 67}{space 3}-.0050147
{txt}{space 3}intensity {c |}{col 14}{res}{space 2} .0098089{col 26}{space 2} .0373798{col 37}{space 1}    0.26{col 46}{space 3}0.793{col 54}{space 4} -.063501{col 67}{space 3} .0831187
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0168355{col 26}{space 2} .0054344{col 37}{space 1}   -3.10{col 46}{space 3}0.002{col 54}{space 4}-.0274934{col 67}{space 3}-.0061775
{txt}{space 7}2001  {c |}{col 14}{res}{space 2} -.019498{col 26}{space 2} .0053948{col 37}{space 1}   -3.61{col 46}{space 3}0.000{col 54}{space 4}-.0300783{col 67}{space 3}-.0089177
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0040299{col 26}{space 2} .0054732{col 37}{space 1}   -0.74{col 46}{space 3}0.462{col 54}{space 4} -.014764{col 67}{space 3} .0067043
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0105444{col 26}{space 2} .0055439{col 37}{space 1}   -1.90{col 46}{space 3}0.057{col 54}{space 4}-.0214172{col 67}{space 3} .0003285
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0115862{col 26}{space 2} .0054457{col 37}{space 1}   -2.13{col 46}{space 3}0.033{col 54}{space 4}-.0222663{col 67}{space 3} -.000906
{txt}{space 7}2005  {c |}{col 14}{res}{space 2}-.0083919{col 26}{space 2} .0054104{col 37}{space 1}   -1.55{col 46}{space 3}0.121{col 54}{space 4}-.0190029{col 67}{space 3} .0022191
{txt}{space 7}2006  {c |}{col 14}{res}{space 2} .0008458{col 26}{space 2} .0055548{col 37}{space 1}    0.15{col 46}{space 3}0.879{col 54}{space 4}-.0100484{col 67}{space 3}   .01174
{txt}{space 7}2007  {c |}{col 14}{res}  (omitted)
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-.0136987{col 26}{space 2} .0433237{col 37}{space 1}   -0.32{col 46}{space 3}0.752{col 54}{space 4}-.0986659{col 67}{space 3} .0712685
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .05231206
{txt}     sigma_e {c |} {res} .05634198
{txt}         rho {c |} {res} .46296151{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}277{txt}, {res}1896{txt}) = {res}    5.83           {txt}Prob > F = {res}0.0000

{com}. xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year if country == "UKI", fe
{txt}note: 2006.year omitted because of collinearity

Fixed-effects (within) regression               Number of obs      = {res}     3075
{txt}Group variable: {res}pid                             {txt}Number of groups   = {res}      501

{txt}R-sq:  within  = {res}0.0647                         {txt}Obs per group: min = {res}        2
{txt}       between = {res}0.0061                                        {txt}avg = {res}      6.1
{txt}       overall = {res}0.0000                                        {txt}max = {res}        9

                                                {txt}F({res}14{txt},{res}2560{txt})         = {res}    12.64
{txt}corr(u_i, Xb)  = {res}-0.3169                        {txt}Prob > F           =    {res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1} osrape_prop{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}policy {c |}{col 14}{res}{space 2}-.0129535{col 26}{space 2} .0070194{col 37}{space 1}   -1.85{col 46}{space 3}0.065{col 54}{space 4}-.0267178{col 67}{space 3} .0008109
{txt}{space 3}sizeclass {c |}{col 14}{res}{space 2} .0061718{col 26}{space 2}  .003949{col 37}{space 1}    1.56{col 46}{space 3}0.118{col 54}{space 4}-.0015717{col 67}{space 3} .0139153
{txt}{space 1}setasideuaa {c |}{col 14}{res}{space 2}-.0006123{col 26}{space 2} .0000967{col 37}{space 1}   -6.33{col 46}{space 3}0.000{col 54}{space 4} -.000802{col 67}{space 3}-.0004227
{txt}{space 3}ln_labour {c |}{col 14}{res}{space 2}-.0314285{col 26}{space 2} .0067848{col 37}{space 1}   -4.63{col 46}{space 3}0.000{col 54}{space 4}-.0447327{col 67}{space 3}-.0181242
{txt}{space 6}ln_ffi {c |}{col 14}{res}{space 2} -.000157{col 26}{space 2} .0003492{col 37}{space 1}   -0.45{col 46}{space 3}0.653{col 54}{space 4}-.0008417{col 67}{space 3} .0005277
{txt}{space 4}solvency {c |}{col 14}{res}{space 2} -.010272{col 26}{space 2} .0149213{col 37}{space 1}   -0.69{col 46}{space 3}0.491{col 54}{space 4}-.0395311{col 67}{space 3} .0189871
{txt}{space 3}intensity {c |}{col 14}{res}{space 2}-.0245042{col 26}{space 2} .0349579{col 37}{space 1}   -0.70{col 46}{space 3}0.483{col 54}{space 4}-.0930529{col 67}{space 3} .0440445
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2000  {c |}{col 14}{res}{space 2}-.0102944{col 26}{space 2} .0082779{col 37}{space 1}   -1.24{col 46}{space 3}0.214{col 54}{space 4}-.0265265{col 67}{space 3} .0059378
{txt}{space 7}2001  {c |}{col 14}{res}{space 2}-.0253778{col 26}{space 2} .0069317{col 37}{space 1}   -3.66{col 46}{space 3}0.000{col 54}{space 4}  -.03897{col 67}{space 3}-.0117855
{txt}{space 7}2002  {c |}{col 14}{res}{space 2}-.0372396{col 26}{space 2} .0068584{col 37}{space 1}   -5.43{col 46}{space 3}0.000{col 54}{space 4}-.0506881{col 67}{space 3}-.0237911
{txt}{space 7}2003  {c |}{col 14}{res}{space 2}-.0137264{col 26}{space 2} .0068787{col 37}{space 1}   -2.00{col 46}{space 3}0.046{col 54}{space 4}-.0272148{col 67}{space 3}-.0002381
{txt}{space 7}2004  {c |}{col 14}{res}{space 2}-.0068741{col 26}{space 2} .0038542{col 37}{space 1}   -1.78{col 46}{space 3}0.075{col 54}{space 4}-.0144317{col 67}{space 3} .0006836
{txt}{space 7}2005  {c |}{col 14}{res}{space 2} .0015215{col 26}{space 2} .0037837{col 37}{space 1}    0.40{col 46}{space 3}0.688{col 54}{space 4} -.005898{col 67}{space 3}  .008941
{txt}{space 7}2006  {c |}{col 14}{res}  (omitted)
{txt}{space 7}2007  {c |}{col 14}{res}{space 2}-.0026667{col 26}{space 2} .0041009{col 37}{space 1}   -0.65{col 46}{space 3}0.516{col 54}{space 4}-.0107081{col 67}{space 3} .0053748
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} .3145323{col 26}{space 2} .0638626{col 37}{space 1}    4.93{col 46}{space 3}0.000{col 54}{space 4} .1893047{col 67}{space 3} .4397599
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .09234804
{txt}     sigma_e {c |} {res} .05398818
{txt}         rho {c |} {res} .74528071{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0:     F({res}500{txt}, {res}2560{txt}) = {res}   12.47           {txt}Prob > F = {res}0.0000

{com}. help tabstat

. tabstat oilseedrapeuaa totaluaa osrape_prop [pweight = farmsrepresented] , by(country) stats(mean)
{err}pweight not allowed
{txt}{search r(101):r(101);}

{com}. tabstat oilseedrapeuaa totaluaa osrape_prop [aweight = farmsrepresented] , by(country) stats(mean)

{txt}Summary statistics: mean
  by categories of: country (Country)

{ralign 7:country} {...}
{c |}{...}
  oilsee~a  totaluaa  osrape~p
{hline 8}{c +}{hline 30}
{ralign 7:DAN} {...}
{c |}{...}
 {res} 4.582506  78.11822  .0536838
{txt}{ralign 7:DEU} {...}
{c |}{...}
 {res} 14.95153  119.5233  .0940525
{txt}{ralign 7:ELL} {...}
{c |}{...}
 {res} .1384728  10.63387  .0071512
{txt}{ralign 7:ESP} {...}
{c |}{...}
 {res}   3.0657  63.34078  .0480218
{txt}{ralign 7:FRA} {...}
{c |}{...}
 {res} 14.78461  106.8139  .1217518
{txt}{ralign 7:IRE} {...}
{c |}{...}
 {res} .4509822  59.43475  .0071419
{txt}{ralign 7:ITA} {...}
{c |}{...}
 {res} 1.575003  29.75454  .0423204
{txt}{ralign 7:LUX} {...}
{c |}{...}
 {res} 6.598793   76.5367  .0836712
{txt}{ralign 7:NED} {...}
{c |}{...}
 {res}  .083801  56.05086  .0006373
{txt}{ralign 7:OST} {...}
{c |}{...}
 {res} 4.787689   44.9211  .1043669
{txt}{ralign 7:POR} {...}
{c |}{...}
 {res} 1.217175  66.51073  .0139717
{txt}{ralign 7:SUO} {...}
{c |}{...}
 {res} 4.359118  57.91848  .0716732
{txt}{ralign 7:SVE} {...}
{c |}{...}
 {res} 4.816829  94.04015  .0501507
{txt}{ralign 7:UKI} {...}
{c |}{...}
 {res} 15.79628  181.2922  .0644188
{txt}{hline 8}{c +}{hline 30}
{ralign 7:Total} {...}
{c |}{...}
 {res} 6.759865  70.84156  .0613808
{txt}{hline 8}{c BT}{hline 30}

{com}. di .16*78
{res}12.48

{com}. tabstat oilseedrapeuaa totaluaa osrape_prop [aweight = farmsrepresented] if year<=2003, by(country) stats(mean)

{txt}Summary statistics: mean
  by categories of: country (Country)

{ralign 7:country} {...}
{c |}{...}
  oilsee~a  totaluaa  osrape~p
{hline 8}{c +}{hline 30}
{ralign 7:DAN} {...}
{c |}{...}
 {res} 4.097225  76.27074  .0517154
{txt}{ralign 7:DEU} {...}
{c |}{...}
 {res} 13.30055  112.0131  .0893686
{txt}{ralign 7:ELL} {...}
{c |}{...}
 {res}  .213608  10.57936  .0095827
{txt}{ralign 7:ESP} {...}
{c |}{...}
 {res} 3.515197  63.29306  .0599927
{txt}{ralign 7:FRA} {...}
{c |}{...}
 {res} 13.97505  103.6406  .1199551
{txt}{ralign 7:IRE} {...}
{c |}{...}
 {res}  .361483  57.98609  .0054218
{txt}{ralign 7:ITA} {...}
{c |}{...}
 {res} 1.895868  29.48292  .0518311
{txt}{ralign 7:LUX} {...}
{c |}{...}
 {res} 5.985924  78.23823   .070734
{txt}{ralign 7:NED} {...}
{c |}{...}
 {res} .0409141  55.09614  .0004102
{txt}{ralign 7:OST} {...}
{c |}{...}
 {res} 4.646012  43.56772  .1039777
{txt}{ralign 7:POR} {...}
{c |}{...}
 {res} 1.524653  75.88192   .017546
{txt}{ralign 7:SUO} {...}
{c |}{...}
 {res} 3.844012  55.91041  .0718184
{txt}{ralign 7:SVE} {...}
{c |}{...}
 {res} 3.685412   92.0683   .041359
{txt}{ralign 7:UKI} {...}
{c |}{...}
 {res} 13.21853  180.3126  .0546283
{txt}{hline 8}{c +}{hline 30}
{ralign 7:Total} {...}
{c |}{...}
 {res}  6.53322  70.25693  .0647138
{txt}{hline 8}{c BT}{hline 30}

{com}. tabstat oilseedrapeuaa totaluaa osrape_prop [aweight = farmsrepresented] if year>2003, by(country) stats(mean)

{txt}Summary statistics: mean
  by categories of: country (Country)

{ralign 7:country} {...}
{c |}{...}
  oilsee~a  totaluaa  osrape~p
{hline 8}{c +}{hline 30}
{ralign 7:DAN} {...}
{c |}{...}
 {res}  5.23764  80.61234  .0563412
{txt}{ralign 7:DEU} {...}
{c |}{...}
 {res} 17.26887  130.0646  .1006269
{txt}{ralign 7:ELL} {...}
{c |}{...}
 {res}  .065797  10.68659  .0047993
{txt}{ralign 7:ESP} {...}
{c |}{...}
 {res} 2.583685  63.39196  .0351849
{txt}{ralign 7:FRA} {...}
{c |}{...}
 {res} 15.70953  110.4395  .1238045
{txt}{ralign 7:IRE} {...}
{c |}{...}
 {res}  .548022  61.00547  .0090068
{txt}{ralign 7:ITA} {...}
{c |}{...}
 {res} 1.236812  30.04082  .0322961
{txt}{ralign 7:LUX} {...}
{c |}{...}
 {res} 7.147733  75.01265   .095259
{txt}{ralign 7:NED} {...}
{c |}{...}
 {res} .1309211  57.09983  .0008869
{txt}{ralign 7:OST} {...}
{c |}{...}
 {res} 4.963571  46.60123  .1048501
{txt}{ralign 7:POR} {...}
{c |}{...}
 {res} .7038071  50.86454  .0080039
{txt}{ralign 7:SUO} {...}
{c |}{...}
 {res} 4.991775  60.38482  .0714947
{txt}{ralign 7:SVE} {...}
{c |}{...}
 {res} 6.241784  96.52357  .0612233
{txt}{ralign 7:UKI} {...}
{c |}{...}
 {res} 18.06022  182.1526  .0730173
{txt}{hline 8}{c +}{hline 30}
{ralign 7:Total} {...}
{c |}{...}
 {res} 7.013187  71.49501  .0576555
{txt}{hline 8}{c BT}{hline 30}

{com}. tabstat oilseedrapeuaa totaluaa osrape_prop [aweight = farmsrepresented] if year>2003, stats(mean)

{txt}   stats {...}
{c |}{...}
  oilsee~a  totaluaa  osrape~p
{hline 9}{c +}{hline 30}
{ralign 8:mean} {...}
{c |}{...}
 {res} 7.013187  71.49501  .0576555
{txt}{hline 9}{c BT}{hline 30}

{com}. di 7/71
{res}.09859155

{com}. help tabstat

. quietly xtreg osrape_prop policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity i.year year#mscode, fe

. 
. outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se in obs)
in{err} is not a valid stats, str( ), cmd( ), e( ), mat( ), etc. for {opt stats( )}
{txt}{search r(198):r(198);}

{com}. 
. 
. 
. outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
{err}factor variables and time-series operators not allowed
{txt}{search r(101):r(101);}

{com}. 
. 
. outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se N obs)
obs{err} is not a valid stats, str( ), cmd( ), e( ), mat( ), etc. for {opt stats( )}
{txt}{search r(198):r(198);}

{com}. outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se obs)
obs{err} is not a valid stats, str( ), cmd( ), e( ), mat( ), etc. for {opt stats( )}
{txt}{search r(198):r(198);}

{com}. outreg2 policy sizeclass setasideuaa ln_labour ln_ffi solvency intensity specialise using "output/docs/model", word stat(coef se)
{txt}{stata `"shellout using `"output/docs/model.rtf"'"':output/docs/model.rtf}
{browse `"/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis"' :dir}{com} : {txt}{stata `"seeout using "output/docs/model.txt""':seeout}

{com}. outreg2 oilseedrape uaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
{err}factor variables and time-series operators not allowed
{txt}{search r(101):r(101);}

{com}. 
. outreg2 oilseedrapeuaa osrape_prop energycropsuaa policy totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
{err}factor variables and time-series operators not allowed
{txt}{search r(101):r(101);}

{com}. outreg2 oilseedrapeuaa osrape_prop energycropsuaa totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace#
{err}option # not allowed
{txt}{search r(198):r(198);}

{com}. outreg2 oilseedrapeuaa osrape_prop energycropsuaa totaluaa setasideuaa labour ffi solvency intensity using "output/docs/sumstat", sum replace
{err}factor variables and time-series operators not allowed
{txt}{search r(101):r(101);}

{com}. outreg2 oilseedrapeuaa using "output/docs/sumstat", sum replace
{err}factor variables and time-series operators not allowed
{txt}{search r(101):r(101);}

{com}. help outreg2

. outreg2 using "output/docs/summary", sum
{err}factor variables and time-series operators not allowed
{txt}{search r(101):r(101);}

{com}. outreg2 using "output/docs/summary", keep(oilseedrapeuaa) sum
{err}factor variables and time-series operators not allowed
{txt}{search r(101):r(101);}

{com}. help outreg

. help mkcorr

. help mktab

. help mkcorr

. mkcorr oilseedrapeuaa, log("output/docs/summary.rtf") nocorr means

. outreg2 oilseedrapeuaa using "output/docs/summary", word sum stats(mean se) replace
{err}factor variables and time-series operators not allowed
{txt}{search r(101):r(101);}

{com}. tsset clear
{err}variable clear not found
{txt}{search r(111):r(111);}

{com}. help tsset

. tsset, clear

. outreg2 oilseedrapeuaa using "output/docs/summary", word sum stats(mean se) replace
{err}factor variables and time-series operators not allowed
{txt}{search r(101):r(101);}

{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit

{com}. outreg2 using "output/docs/summary", word sum stats(mean se) replace
{err}factor variables and time-series operators not allowed
{txt}{search r(101):r(101);}

{com}. outreg2 using summary, word sum stats(mean se) replace
{err}factor variables and time-series operators not allowed
{txt}{search r(101):r(101);}

{com}. help tabout

. findit tabout

. set http_proxy on
{err}-set http_proxy- not allowed; 'http_proxy' not recognized
{txt}{search r(199):r(199);}

{com}. help http

. set httpproxy on
{txt}({cmd:set httpproxy} preference recorded)

{com}. findit tabout

. findit tabout

. help httpproxy

. set httpproxyhost "webproxy2.teagasc.net"
{txt}({cmd:set httpproxyhost} preference recorded)

{com}. set httpproxyport 8080
{txt}({cmd:set httpproxyport} preference recorded)

{com}. findit tabout

. help tabout

. tabout oilseedrapeuaa using summary, sum replace
{res}{err}              subinstr():  3200  conformability error
            sum_output():     -  function returned error
                 <istmt>:     -  function returned error
{txt}{search r(3200):r(3200);}

{com}. tabout oilseedrapeuaa using summary, sum stats(mean se min max) replace
{res}{err}              subinstr():  3200  conformability error
            sum_output():     -  function returned error
                 <istmt>:     -  function returned error
{txt}{search r(3200):r(3200);}

{com}. help tabout

. clear

. exit
{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}18 May 2012, 10:34:19
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. STOP!!!
{err}unrecognized command:  STOP
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. sum oilseedrapeuaa osrape_prop if country == "DAN"

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
oilseedrap~a {c |}{res}      2453    8.613225    15.52935          0      264.7
{txt}{space 1}osrape_prop {c |}{res}      2453    .0586783    .0753028          0   .6490066

{com}. sum oilseedrapeuaa osrape_prop totaluaa if country == "DAN"

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
oilseedrap~a {c |}{res}      2453    8.613225    15.52935          0      264.7
{txt}{space 1}osrape_prop {c |}{res}      2453    .0586783    .0753028          0   .6490066
{txt}{space 4}totaluaa {c |}{res}      2453    145.0491    134.8203        8.4     1729.7

{com}. sum oilseedrapeuaa osrape_prop totaluaa

{txt}    Variable {c |}       Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 56}
oilseedrap~a {c |}{res}     78196    13.16521    40.46388          0       1305
{txt}{space 1}osrape_prop {c |}{res}     78196    .0714579    .1070268          0          1
{txt}{space 4}totaluaa {c |}{res}     78196    120.1782    244.0195       1.05       5814

{com}. log using /home/patrickgillespie/Documents/Dropbox/DAN_descrip.txt, replace
{err}log file already open
{txt}{search r(604):r(604);}

{com}. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}18 May 2012, 10:38:10
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}29 May 2012, 18:27:40
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. 
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}29 May 2012, 18:27:52
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}29 May 2012, 18:28:18
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if year_min<=2002 & year_max>=2005
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. 
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}29 May 2012, 18:28:30
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}29 May 2012, 18:54:14
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if [year_min<=2002 & year_max>=2005]
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. 
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}29 May 2012, 18:54:23
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}29 May 2012, 19:41:56
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if [year_min<=2002 & year_max>=2005]
{txt}(128997 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(35860 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen tot_ecuaa = total(energycropsuaa)
{txt}
{com}. gen adopter = 0
{txt}
{com}. replace adopter = 1 if tot_ecuaa > 0
{txt}(13616 real changes made)

{com}. gen pol_adop = policy*adopter
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(9404 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(78196 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(27453 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(22413 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(10 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. 
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}29 May 2012, 19:42:01
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}29 May 2012, 21:04:57
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if [year_min<=2002 & year_max>=2005]
{txt}(128997 observations deleted)

{com}. * 2007 was a crazy year for tillage... drop it
. drop if year==2007
{txt}(7460 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(28400 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen min_ecuaa = min(energycropsuaa)
{txt}(402 missing values generated)

{com}. drop adopt
{txt}
{com}. gen adopt = 0
{txt}
{com}. replace adopt = 1 if tot_ecuaa > 0
{err}tot_ecuaa not found
{txt}{search r(111):r(111);}

end of do-file
{search r(111):r(111);}

end of do-file

{search r(111):r(111);}

{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}29 May 2012, 21:06:21
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if [year_min<=2002 & year_max>=2005]
{txt}(128997 observations deleted)

{com}. * 2007 was a crazy year for tillage... drop it
. drop if year==2007
{txt}(7460 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(28400 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen min_ecuaa = min(energycropsuaa)
{txt}(402 missing values generated)

{com}. drop adopt
{txt}
{com}. gen adopt = 0
{txt}
{com}. replace adopt = 1 if min_ecuaa > 0
{txt}(1419 real changes made)

{com}. drop min_ecuaa
{txt}
{com}. gen pol_adop = policy*adopt
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(8840 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(70736 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(23824 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(20910 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(9 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. 
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}29 May 2012, 21:06:26
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}31 May 2012, 15:38:15
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. *do sub_do/osrprice.do
. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if [year_min<=2002 & year_max>=2005]
{txt}(128997 observations deleted)

{com}. * 2007 was a crazy year for tillage... drop it
. drop if year==2007
{txt}(7460 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(28400 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen min_ecuaa = min(energycropsuaa)
{txt}(402 missing values generated)

{com}. drop adopt
{txt}
{com}. gen adopt = 0
{txt}
{com}. replace adopt = 1 if min_ecuaa > 0
{txt}(1419 real changes made)

{com}. drop min_ecuaa
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(8840 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(70736 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(23824 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(20910 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(9 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. *****
. *Interactions For Chow tests
. *****
. gen pol_sizeclass = policy*sizeclass
{txt}
{com}. gen pol_setasideuaa = policy*setasideuaa
{txt}
{com}. gen pol_ln_labour = policy*ln_labour
{txt}
{com}. gen pol_ln_ffi = policy*ln_ffi
{txt}
{com}. gen pol_solvency = policy*solvency
{txt}(5 missing values generated)

{com}. gen pol_intensity = policy*intensity
{txt}
{com}. gen pol_specialise = policy*specialise
{txt}(9 missing values generated)

{com}. gen pol_adop = policy*adopt
{txt}
{com}. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. 
. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}31 May 2012, 15:38:26
{txt}{.-}
{smcl}
{txt}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}31 May 2012, 21:24:59
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if [year_min<=2002 & year_max>=2005]
{txt}(128997 observations deleted)

{com}. * 2007 was a crazy year for tillage... drop it
. drop if year==2007
{txt}(7460 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(28400 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen min_ecuaa = min(energycropsuaa)
{txt}(402 missing values generated)

{com}. drop adopt
{txt}
{com}. gen adopt = 0
{txt}
{com}. replace adopt = 1 if min_ecuaa > 0
{txt}(1419 real changes made)

{com}. drop min_ecuaa
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(8840 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(70736 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(23824 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(20910 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(9 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. *****
. *Interactions For Chow tests
. *****
. gen pol_sizeclass = policy*sizeclass
{txt}
{com}. gen pol_setasideuaa = policy*setasideuaa
{txt}
{com}. gen pol_ln_labour = policy*ln_labour
{txt}
{com}. gen pol_ln_ffi = policy*ln_ffi
{txt}
{com}. gen pol_solvency = policy*solvency
{txt}(5 missing values generated)

{com}. gen pol_intensity = policy*intensity
{txt}
{com}. gen pol_specialise = policy*specialise
{txt}(9 missing values generated)

{com}. gen pol_adop = policy*adopt
{txt}
{com}. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. STOP!!!
{err}unrecognized command:  STOP
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. help graph bar

. graph line osprice year
{err}{p 0 4}
linegraph_g.new  osprice year: class member function not found
{p_end}
{txt}{search r(4023):r(4023);}

{com}. graph line osrprice year
{err}{p 0 4}
linegraph_g.new  osrprice year: class member function not found
{p_end}
{txt}{search r(4023):r(4023);}

{com}. help graph line

. help graph

. graph twoway line osrprice year
{res}
{com}. help graph twoway line

. by year: egen osrprice_yrmn = mean(osrprice)
{err}not sorted
{txt}{search r(5):r(5);}

{com}. bysort year: egen osrprice_yrmn = mean(osrprice)
{txt}(6802 missing values generated)

{com}. graph twoway line osrprice_yrmn year
{res}
{com}. {res}{err}dlg_create unable get key for
dlg_create unable get key for
{res}{com}graph save Graph "/home/patrickgillespie/Documents/projects/tg_5818/price seriers.gph"
{res}{txt}(file /home/patrickgillespie/Documents/projects/tg_5818/price seriers.gph saved)
{res}{com}graph save Graph "/home/patrickgillespie/Documents/projects/tg_5818/price seriers.gph", replace
{res}{txt}(file /home/patrickgillespie/Documents/projects/tg_5818/price seriers.gph saved)
{com}help graph combine

. gr_example2 combine3

{txt}-> {res}preserve

{txt}-> {res}sysuse uslifeexp, clear
{txt}(U.S. life expectancy, 1900-1999)

-> {res}line le_male year, saving(male)
{txt}(file male.gph saved)

-> {res}line le_female year, saving(female)
{txt}(file female.gph saved)

-> {res}gr combine male.gph female.gph, ycommon

{txt}-> {res}erase male.gph

{txt}-> {res}erase female.gph

{txt}-> {res}restore

{com}. gr_example2 combine4

{txt}-> {res}preserve

{txt}-> {res}sysuse lifeexp, clear
{txt}(Life expectancy, 1998)

-> {res}gen loggnp = log10(gnppc)
{txt}(5 missing values generated)

-> {res}label var loggnp "Log base 10 of GNP per capita"

{txt}-> {res}scatter lexp loggnp, ysca(alt) xsca(alt) xlabel(, grid gmax) saving(yx)
{txt}(file yx.gph saved)

-> {res}twoway histogram lexp, fraction xsca(alt reverse) horiz saving(hy)
{txt}(file hy.gph saved)

-> {res}twoway histogram loggnp, fraction ysca(alt reverse) ylabel(,nogrid) xlabel(,grid gmax) saving(hx)
{txt}(file hx.gph saved)

-> {res}graph combine hy.gph yx.gph hx.gph, hole(3) imargin(0 0 0 0) graphregion(margin(l=22 r=22)) title("Life expectancy at birth vs. GNP per capita") note("Source:  1998 data from The World Bank Group")

{txt}-> {res}erase hy.gph

{txt}-> {res}erase hx.gph

{txt}-> {res}erase yx.gph

{txt}-> {res}restore

{com}. help cw

. help cw()

. help tw

. tw(line  osrprice_yrmn year) (bar oilseedrapeuaa energycropsuaa if energycrops >0)
{err}energycrops ambiguous abbreviation
{txt}{search r(111):r(111);}

{com}. tw(line  osrprice_yrmn year) (bar oilseedrapeuaa energycropsuaa if energycropsuaa >0)
{res}
{com}. tw(line  osrprice_yrmn year) (bar oilseedrapeuaa energycropsuaa if energycropsuaa >0, over(adopt) over(year) asyvars)
{err}option over() not allowed
{txt}{search r(198):r(198);}

{com}. tw(line  osrprice_yrmn year) (bar oilseedrapeuaa energycropsuaa if energycropsuaa >0, by(adopt) by(year) asyvars)
{err}option asyvars not allowed
{txt}{search r(198):r(198);}

{com}. tw(line  osrprice_yrmn year) (bar oilseedrapeuaa energycropsuaa if energycropsuaa >0, by(adopt) by(year))
{res}
{com}. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0][pweight=farmsrepresented], over(year))
{err}equation [country!="OST"&energycropsuaa>0] not found
{txt}{search r(303):r(303);}

{com}. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa if country !="OST" & if energycropsuaa > 0[pweight=farmsrepresented], over(year))
{err}if not found
{txt}{search r(111):r(111);}

{com}. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa energycropsuaa > 0[pweight=farmsrepresented], over(year))
{err}> invalid name
{txt}{search r(198):r(198);}

{com}. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa energycropsuaa > 0 [pweight=farmsrepresented], over(year))
{err}> invalid name
{txt}{search r(198):r(198);}

{com}. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa energycropsuaa > 0, over(year))
{err}> invalid name
{txt}{search r(198):r(198);}

{com}. graph bar energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0][pweight=farmsrepresented], over(year)
{err}equation [country!="OST"&energycropsuaa>0] not found
{txt}{search r(303):r(303);}

{com}. graph bar energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0][pweight=farmsrepresented], over(year)
{err}equation [country!="OST"&energycropsuaa>0] not found
{txt}{search r(303):r(303);}

{com}. graph bar energycropsuaa oilseedrapeuaa if [country != "OST"  &  energycropsuaa > 0][pweight=farmsrepresented], over(year)
{err}equation [country!="OST"&energycropsuaa>0] not found
{txt}{search r(303):r(303);}

{com}. count if country=="OST"
{res} 3096

{com}. count if energycropsuaa>0
{res}42230

{com}. count if [country=="OST" & energycropsuaa>0]
{res}   73

{com}. count if [country!="OST" & energycropsuaa>0]
{res}42157

{com}. graph bar energycropsuaa if [country!="OST" & energycropsuaa>0]
{res}
{com}. graph bar energycropsuaa if [country!="OST" & energycropsuaa>0][pweight=farmsrepresented]
{err}equation [country!="OST"&energycropsuaa>0] not found
{txt}{search r(303):r(303);}

{com}. graph bar energycropsuaa if [country!="OST" & energycropsuaa>0] [pweight=farmsrepresented]
{res}
{com}. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], over(year))
{err}option over() not allowed
{txt}{search r(198):r(198);}

{com}. bar energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], over(year)
{err}unrecognized command:  bar
{txt}{search r(199):r(199);}

{com}. graph bar energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], over(year)
{res}
{com}. {res}{com}tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented]), over(year)
{err}option over() not allowed
{txt}{search r(198):r(198);}

{com}. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented])
{res}
{com}. help graph twoway

. graph bar energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], over(year) tsline(osrprice_yrmn)
{res}{err}option tsline() not allowed
{txt}{search r(198):r(198);}

{com}. tab osrprice_yrmn, over(year)
{err}option over() not allowed
{txt}{search r(198):r(198);}

{com}. tab osrprice_yrmn, by(year)
{err}option by() not allowed
{txt}{search r(198):r(198);}

{com}. tabstat osrprice_yrmn, by(year)

{txt}Summary for variables: osrprice_yrmn
{col 6}by categories of: year (YEAR)

{ralign 8:year} {...}
{c |}      mean
{hline 9}{c +}{hline 10}
{ralign 8:1999} {...}
{c |}{...}
 {res}        .
{txt}{ralign 8:2000} {...}
{c |}{...}
 {res} 20.16811
{txt}{ralign 8:2001} {...}
{c |}{...}
 {res} 31.03441
{txt}{ralign 8:2002} {...}
{c |}{...}
 {res}  33.7515
{txt}{ralign 8:2003} {...}
{c |}{...}
 {res} 36.06162
{txt}{ralign 8:2004} {...}
{c |}{...}
 {res} 34.34836
{txt}{ralign 8:2005} {...}
{c |}{...}
 {res} 30.30752
{txt}{ralign 8:2006} {...}
{c |}{...}
 {res} 34.36114
{txt}{hline 9}{c +}{hline 10}
{ralign 8:Total} {...}
{c |}{...}
 {res} 31.74689
{txt}{hline 9}{c BT}{hline 10}

{com}. help graph bar

. collapse _all, by(year)
{err}year may not be both target and by()
{txt}{search r(198):r(198);}

{com}. collapse !year, by(year)
{err}! invalid name
{txt}{search r(198):r(198);}

{com}. collapse osrprice_yrmn oilseedrapeuaa energycropsuaa [pweight=farmsrepresented], by(year)

. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented])
{err}country not found
{txt}{search r(111):r(111);}

{com}. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa if [energycropsuaa > 0] [pweight=farmsrepresented])
{err}farmsrepresented not found
{txt}{search r(111):r(111);}

{com}. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa if [energycropsuaa > 0])
{res}
{com}. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa if [energycropsuaa > 0], over(year))
{err}option over() not allowed
{txt}{search r(198):r(198);}

{com}. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa year if [energycropsuaa > 0])
{res}
{com}. do master_lin
{txt}
{com}. *************************************************************
. *                                                                                       
. * Patrick R. Gillespie                                  
. * Research Officer                                      
. * Teagasc, REDP                                         
. * Athenry, Co Galway, Ireland                           
. * patrick.gillespie@teagasc.ie                  
. *                                                                                       
. *************************************************************
. * RSF Project DAF RSF 07 505 (GO1390)           
. *                                                                                       
. * A micro level analysis of the Irish   
. * agri-food sector: lessons and                 
. * recommendations from Denmark and      
. * the Netherlands                               
. *                                                                               
. * Task 4
. *
. *************************************************************
. *       How this do file works
. *************************************************************
. * BE SURE TO READ THE FILE README.RTF!!!
. * The data to be used in this analysis is the 
. * FADN data for the years 2004 through 2007.Each 
. * country's data is contained in it's own data 
. * file. Rather than combine them all (would be 
. * a massive file), I'm importing variables as I 
. * need them. Once finished with a variable, I 
. * discard everything until I need it again.
. *
. * This master file calls do files from the 
. * subdirectory called sub_do. Any portion of the 
. * analysis can be omitted by inserting a * in 
. * front of the relevant do command. Output 
. * datasets will be generated by this file and 
. * stored in the subdirectory called output.
. *
. * In order for this do file to run, it must be
. * located in a folder (name is not important)
. * that is itself in the same folder that contains
. * CountryData and CountrySTATAFiles (those names 
. * are important, copy exactly). The datasets in 
. * those folders shouldn't contain any spaces and 
. * should match the list in the global macro "ms" 
. * defined below.
. * 
. * You can easily include or exclude countries
. * to the analysis by altering this macro 
. * (provided the datasets are in the right shape 
. * and are saved as a .dta in CountrySTATAFiles).
. *
. * At the time of writing, the directory 
. * structure in which this file resided was
. * 
. * Task 4
. *  >Data_Analysis
. *   >>CountryData
. *   >>CountrySTATAFiles
. *   >>descriptives
. *    >>>logs
. *    >>>output
. *    >>>sub_do
. *    >>>varname.xls
. *    >>>descriptives.do  <- your viewing this now
. *    >>>README.rtf
. *    >>>blank.dta
. *    >>>energygph.dta
. *************************************************************
. 
. *************************************************************
. *** PRELIMINARIES       *
. *************************
. clear
{txt}
{com}. clear matrix
{txt}
{com}. set mem 1500m
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. set matsize 800
{txt}
{title:Current memory allocation}

{col 21}current{col 61}memory usage
{col 5}settable{col 23}value{col 33}description{col 61}(1M = 1024k)
{col 5}{hline 68}
{col 5}set maxvar{col 22}{res:  5000}{col 33}max. variables allowed           1.909M
{col 5}set memory         {res:1500M}{col 33}max. data space              1,500.000M
{col 5}set matsize{col 21}{res:    800}{col 33}max. RHS vars in models          4.950M
{col 61}{hline 11}
{col 55}       1,506.859M

{com}. capture log close
{smcl}
{com}{sf}{ul off}{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}31 May 2012, 22:14:49
{txt}
{com}. cmdlog using logs/biofuels, append
{txt}(cmdlog /home/patrickgillespie/Documents/lin_forpatrick/Task 4/Data_Analysis/analysis/logs/biofuels.txt opened)

{com}. do sub_do/osrprice.do
{txt}
{com}. *********************************************
. *                                                                                       
. *       Patrick R. Gillespie                                    
. *       Research Officer                                        
. *       Teagasc, REDP                                           
. *       Athenry, Co Galway, Ireland                             
. *       patrick.gillespie@teagasc.ie                    
. *                                                                                       
. *********************************************
. *       RSF Project DAF RSF 07 505 (GO1390)             
. *                                                                                       
. *       A micro level analysis of the Irish     
. *       agri-food sector: lessons and           
. *       recommendations from Denmark and        
. *       the Netherlands                         
. *                                                                                       
. *       Task4   
. *       To run - uncomment "do sub_do/osrprice.do" 
. *       in master.do and run that file
. *********************************************
. * Incorporates country-year average oilseed 
. * prices from Eurostat to $dataname
. *********************************************
. 
. insheet using ../CountryData/Eurostat/apri_ap_crpouta_1_Data.csv
{txt}(6 vars, 216 obs)

{com}. rename time year
{txt}
{com}. rename value osrprice
{txt}
{com}. gen str4 country = ""
{txt}(216 missing values generated)

{com}. replace country = "OST" if geo == "Austria"
{txt}(8 real changes made)

{com}. replace country = "BEL" if geo == "Belgium"
{txt}(8 real changes made)

{com}. replace country = "BGR" if geo == "Bulgaria"
{txt}(8 real changes made)

{com}. replace country = "CYP" if geo == "Cyprus"
{txt}(8 real changes made)

{com}. replace country = "CZE" if geo == "Czech Republic"
{txt}(8 real changes made)

{com}. replace country = "DAN" if geo == "Denmark"
{txt}(8 real changes made)

{com}. replace country = "EST" if geo == "Estonia"
{txt}(8 real changes made)

{com}. replace country = "SUO" if geo == "Finland"
{txt}(8 real changes made)

{com}. replace country = "FRA" if geo == "France"
{txt}(8 real changes made)

{com}. replace country = "DEU" if geo == "Germany (including  former GDR from 1991)"
{txt}(8 real changes made)

{com}. replace country = "ELL" if geo == "Greece"
{txt}(8 real changes made)

{com}. replace country = "HUN" if geo == "Hungary"
{txt}(8 real changes made)

{com}. replace country = "IRE" if geo == "Ireland"
{txt}(8 real changes made)

{com}. replace country = "ITA" if geo == "Italy"
{txt}(8 real changes made)

{com}. replace country = "LVA" if geo == "Latvia"
{txt}(8 real changes made)

{com}. replace country = "LTU" if geo == "Lithuania"
{txt}(8 real changes made)

{com}. replace country = "LUX" if geo == "Luxembourg"
{txt}(8 real changes made)

{com}. replace country = "MLT" if geo == "Malta"
{txt}(8 real changes made)

{com}. replace country = "NED" if geo == "Netherlands"
{txt}(8 real changes made)

{com}. replace country = "POL" if geo == "Poland"
{txt}(8 real changes made)

{com}. replace country = "POR" if geo == "Portugal"
{txt}(8 real changes made)

{com}. replace country = "ROU" if geo == "Romania"
{txt}(8 real changes made)

{com}. replace country = "SVK" if geo == "Slovakia"
{txt}(8 real changes made)

{com}. replace country = "SVN" if geo == "Slovenia"
{txt}(8 real changes made)

{com}. replace country = "ESP" if geo == "Spain"
{txt}(8 real changes made)

{com}. replace country = "SVE" if geo == "Sweden"
{txt}(8 real changes made)

{com}. replace country = "UKI" if geo == "United Kingdom"
{txt}(8 real changes made)

{com}. keep country year osrprice
{txt}
{com}. sort country year
{txt}
{com}. save ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data, replace
{txt}file ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data.dta saved

{com}. use ../CountrySTATAFiles/databuilds/$dataname, clear
{txt}
{com}. 
. sort country year
{txt}
{com}. 
. merge m:1 country year using ../CountrySTATAFiles/Eurostat/apri_ap_crpouta_1_Data
{res}
{txt}{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          20,825
{txt}{col 9}from master{col 30}{res}          20,771{txt}  (_merge==1)
{col 9}from using{col 30}{res}              54{txt}  (_merge==2)

{col 5}matched{col 30}{res}         186,422{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge == 2
{txt}(54 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. sort country year farmcode
{txt}
{com}. 
. save ../CountrySTATAFiles/databuilds/$dataname, replace
{txt}file ../CountrySTATAFiles/databuilds/data9907.dta saved

{com}. 
. 
{txt}end of do-file

{com}. use "../CountrySTATAFiles/databuilds/$dataname.dta", clear
{txt}
{com}. sort country region subregion farmcode year
{txt}
{com}. 
. 
. *************************************************************
. *** MODEL SETUP         *
. *************************
. *** Specify Panel Data - create unique pid's (because some farmcodes repeated)
. ****************
. egen pid = group(country region subregion farmcode)
{txt}
{com}. destring pid, replace
{txt}pid already numeric; no {res}replace
{txt}
{com}. tsset pid year
{res}{txt}{col 8}panel variable:  {res}pid (unbalanced)
{txt}{col 9}time variable:  {res}{col 25}year, 1999 to 2007, but with gaps
{txt}{col 17}delta:  {res}1 unit
{txt}
{com}. ****************
. *** Restrict panel to those farms which reported at the time of the policy (this will drop 12 countries from the panel because they had not yet joined the EU)
. ****************
. by pid: egen year_max = max(year)
{txt}
{com}. by pid: egen year_min = min(year)
{txt}
{com}. keep if [year_min<=2002 & year_max>=2005]
{txt}(128997 observations deleted)

{com}. * 2007 was a crazy year for tillage... drop it
. drop if year==2007
{txt}(7460 observations deleted)

{com}. ****************
. *** Create a dummy variable for the biofuels directive (energycropsuaa variable was brought in with the policy)
. ****************
. gen policy = 0
{txt}
{com}. replace policy = 1 if year > 2003 
{txt}(28400 real changes made)

{com}. ****************
. *** Encode country variable for interaction with time in model (can't interact string variable in Stata)
. ****************
. encode country, gen(mscode)
{txt}
{com}. ****************
. *** Create adoption marker for each farm (to create subsets for Chow test)
. ****************
. by pid: egen min_ecuaa = min(energycropsuaa)
{txt}(402 missing values generated)

{com}. drop adopt
{txt}
{com}. gen adopt = 0
{txt}
{com}. replace adopt = 1 if min_ecuaa > 0
{txt}(1419 real changes made)

{com}. drop min_ecuaa
{txt}
{com}. ****************
. *** TRANSFORMATIONS AND ADDITIONAL VARIABLES FOR THE MODEL
. ****************
. gen solvency = totalliabilities/totalassets
{txt}(5 missing values generated)

{com}. gen ffi_tmp = familyfarmincome //Correct for negative and 0 FFI to facilitate taking log
{txt}
{com}. replace ffi_tmp = 0 if familyfarmincome<0 
{txt}(8840 real changes made)

{com}. replace ffi_tmp = ffi_tmp + 1
{txt}(70736 real changes made)

{com}. gen ln_ffi = log(ffi_tmp)
{txt}
{com}. gen ln_totaluaa = log(totaluaa)
{txt}
{com}. gen ln_setasideuaa = log(setasideuaa)
{txt}(23824 missing values generated)

{com}. gen ln_labour = log(labourinputhours)
{txt}
{com}. gen ln_osrprice = log(osrprice)
{txt}(20910 missing values generated)

{com}. gen specialise = totaloutputcrops/totaloutput 
{txt}(9 missing values generated)

{com}. gen osrape_prop = oilseedrapeuaa/totaluaa
{txt}
{com}. gen intensity = machininerybuildingcurrentcosts/totalinputs
{txt}
{com}. *gen intensity = (fertilisers + cropprotection)/totalinputs
. 
. *****
. *Interactions For Chow tests
. *****
. gen pol_sizeclass = policy*sizeclass
{txt}
{com}. gen pol_setasideuaa = policy*setasideuaa
{txt}
{com}. gen pol_ln_labour = policy*ln_labour
{txt}
{com}. gen pol_ln_ffi = policy*ln_ffi
{txt}
{com}. gen pol_solvency = policy*solvency
{txt}(5 missing values generated)

{com}. gen pol_intensity = policy*intensity
{txt}
{com}. gen pol_specialise = policy*specialise
{txt}(9 missing values generated)

{com}. gen pol_adop = policy*adopt
{txt}
{com}. 
. *************************************************************
. *** MODEL SPECIFICATION *
. *************************
. STOP!!!
{err}unrecognized command:  STOP
{txt}{search r(199):r(199);}

end of do-file
{search r(199):r(199);}

end of do-file

{search r(199):r(199);}

{com}. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa year if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented])
{err}variable osrprice_yrmn not found
{txt}{search r(111):r(111);}

{com}. bysort year: egen osrprice_yrmn = mean(osrprice)
{txt}(6802 missing values generated)

{com}. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa year if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented])
{res}
{com}. tw(line osrprice_yrmn year) (bar (mean) energycropsuaa oilseedrapeuaa year if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented])
{err}variable mean not found
{txt}{search r(111):r(111);}

{com}. tw(line osrprice_yrmn year) (bar (mean) energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], over(year))
{err}variable mean not found
{txt}{search r(111):r(111);}

{com}. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], over(year))
{err}option over() not allowed
{txt}{search r(198):r(198);}

{com}. tw(line osrprice_yrmn year, over(year)) (bar energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], over(year))
{err}option over() not allowed
{txt}{search r(198):r(198);}

{com}. help graph bar

. tw(line osrprice_yrmn year, over(year)) (bar energycropsuaa (mean) oilseedrapeuaa (mean) year if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented])
{err}option over() not allowed
{txt}{search r(198):r(198);}

{com}. tw(line osrprice_yrmn year) (bar energycropsuaa (mean) oilseedrapeuaa (mean) year if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented])
{err}variable mean not found
{txt}{search r(111):r(111);}

{com}. tw(line osrprice_yrmn year) (bar energycropsuaa(mean) oilseedrapeuaa(mean) year if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented])
{err}variable mean not found
{txt}{search r(111):r(111);}

{com}. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa year if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented])
{res}
{com}. tw(line osrprice_yrmn year) (bar energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented])
{res}
{com}. help graph bar

. tw(line osrprice_yrmn year) (bar year energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], ascategory)
{err}option ascategory not allowed
{txt}{search r(198):r(198);}

{com}. help graph twoway

. tw(line osrprice_yrmn year) (bar year energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], ascategory), recast(bar)
{err}option ascategory not allowed
{txt}{search r(198):r(198);}

{com}. tw(line osrprice_yrmn year) (bar year energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], ascategory), recast(line)
{err}option ascategory not allowed
{txt}{search r(198):r(198);}

{com}. tw(bar osrprice_yrmn year) (bar year energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], ascategory)
{err}option ascategory not allowed
{txt}{search r(198):r(198);}

{com}. tw(bar osrprice_yrmn year) (bar year energycropsuaa oilseedrapeuaa if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], ascategory), recast(bar)
{err}option ascategory not allowed
{txt}{search r(198):r(198);}

{com}. help graph twoway

. graph use "/home/patrickgillespie/Documents/projects/tg_5818/o_e_series.gph"
{res}
{com}. graph use "/home/patrickgillespie/Documents/projects/tg_5818/osrprice.gph"
{res}
{com}. graph export
{err}invalid file specification
{txt}{search r(198):r(198);}

{com}. graph export "/home/patrickgillespie/Documents/projects/tg_5818/osrprice.png"
{txt}(file /home/patrickgillespie/Documents/projects/tg_5818/osrprice.png written in PNG format)

{com}. graph bar energycropsuaa oilseedrapeuaa osrprice_yrmn if [country !="OST" & energycropsuaa > 0][pweight=farmsrepresented], over(year)
{err}equation [country!="OST"&energycropsuaa>0] not found
{txt}{search r(303):r(303);}

{com}. 
. graph bar energycropsuaa oilseedrapeuaa osrprice_yrmn if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], over(year)
{res}
{com}. graph bar energycropsuaa oilseedrapeuaa osrprice_yrmn if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], over(year) style(economist)
{res}
{com}. graph bar energycropsuaa oilseedrapeuaa osrprice_yrmn if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], over(year) scheme(economist)
{res}
{com}. graph bar energycropsuaa oilseedrapeuaa osrprice_yrmn if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], over(year)
{res}
{com}. graph bar energycropsuaa oilseedrapeuaa osrprice_yrmn if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], over(year) scheme(s2monochrome)
{txt}(note: scheme s2monochrome not found, using s2color)
{res}
{com}. graph display o_e_series, scheme(s2mono)
{res}
{com}. graph bar energycropsuaa oilseedrapeuaa osrprice_yrmn if [country !="OST" & energycropsuaa > 0] [pweight=farmsrepresented], over(year) scheme(s2mono)
{res}
{com}. {res}{com}graph save Graph "/home/patrickgillespie/Documents/projects/tg_5818/o_e_series.gph", replace
{res}{txt}(file /home/patrickgillespie/Documents/projects/tg_5818/o_e_series.gph saved)
{com}graph export "/home/patrickgillespie/Documents/projects/tg_5818/o_e_series.png"
{err}{p 0 4}
file /home/patrickgillespie/Documents/projects/tg_5818/o_e_series.png
already exists
{p_end}
{txt}{search r(602):r(602);}

{com}. graph export "/home/patrickgillespie/Documents/projects/tg_5818/o_e_series.png", replace
{txt}(file /home/patrickgillespie/Documents/projects/tg_5818/o_e_series.png written in PNG format)

{com}. graph use "/home/patrickgillespie/Documents/projects/tg_5818/o_e_series.png", replace
{err}invalid file specification
{txt}{search r(198):r(198);}

{com}. graph use "/home/patrickgillespie/Documents/projects/tg_5818/o_e_series.gph"
{res}
{com}. {res}{com}graph save Graph "/home/patrickgillespie/Documents/projects/tg_5818/o_e_series.gph", replace
{res}{txt}(file /home/patrickgillespie/Documents/projects/tg_5818/o_e_series.gph saved)
{com}graph use "/home/patrickgillespie/Documents/projects/tg_5818/o_e_series.gph"
{res}
{com}. graph export "/home/patrickgillespie/Documents/projects/tg_5818/o_e_series.png", replace
{txt}(file /home/patrickgillespie/Documents/projects/tg_5818/o_e_series.png written in PNG format)

{com}. clear

. exit
